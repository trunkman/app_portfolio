{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react'; // styles\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\"; // Api\n\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications'; // Reducer\n\nimport { notificationReducer, notificationInitialState } from '../../reducer/notificationReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotificationDialog = ({\n  handleClose,\n  open\n}) => {\n  _s();\n\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState); // 通知一覧を取得する\n\n  const notifications = () => {\n    fetchNotifications().then(data => {\n      notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n    });\n  }; // チェック済み通知をすべて削除する\n\n\n  const allDelete = () => {\n    deleteNotifications().then(data => {\n      notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n    });\n  };\n\n  useEffect(() => {\n    notifications();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: paper,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u901A\\u77E5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: allDelete,\n            children: \"\\u5168\\u3066\\u524A\\u9664\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: notificationState.notifications.map(notification => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [notification.action == 'like' && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [notification.visitor_id, \"\\u3055\\u3093\\u304C\", notification.micropost_id, \"\\u306B\\u3044\\u3044\\u306D\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n              }, notification.id.toString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), notification.action == 'comment' && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [notification.visitor_id, \"\\u3055\\u3093\\u304C\", notification.comment_id, \"\\u306B\\u30B3\\u30E1\\u30F3\\u30C8\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n              }, notification.id.toString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), notification.action == 'follow' && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [notification.visitor_id, \"\\u3055\\u3093\\u304C\\u3042\\u306A\\u305F\\u3092\\u30D5\\u30A9\\u30ED\\u30FC\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n              }, notification.id.toString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), notification.action == 'entry' && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [notification.visitor_id, \"\\u3055\\u3093\\u304C\", notification.entry_id, \"\\u3068\\u306E\\u30C8\\u30FC\\u30AF\\u30EB\\u30FC\\u30E0\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u305F\\u3002\"]\n              }, notification.id.toString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"\\u9589\\u3058\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDialog, \"hqeXFoB46zEddWC4Wc0eYpbMbhg=\");\n\n_c = NotificationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx"],"names":["React","useReducer","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","List","ListItem","fetchNotifications","deleteNotifications","notificationReducer","notificationInitialState","NotificationDialog","handleClose","open","notificationState","notificationDispatch","notifications","then","data","type","payload","allDelete","useEffect","paper","map","notification","action","visitor_id","micropost_id","id","toString","comment_id","entry_id"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n// styles\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n// Api\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications';\n// Reducer\nimport { notificationReducer, notificationInitialState } from '../../reducer/notificationReducer'\n\nexport const NotificationDialog = ({\n  handleClose,\n  open,\n}) => {\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState);\n\n  // 通知一覧を取得する\n  const notifications = () => {\n    fetchNotifications()\n      .then(data => {\n        notificationDispatch({\n          type: 'fetchSuccess',\n          payload: data.notifications,\n        });\n      });\n  }\n\n  // チェック済み通知をすべて削除する\n  const allDelete = () => {\n    deleteNotifications()\n      .then(data => {\n        notificationDispatch({\n          type: 'fetchSuccess',\n          payload: data.notifications,\n        });\n      });\n  }\n\n  useEffect(() => {\n    notifications();\n  })\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={paper}\n      >\n        <DialogTitle >通知</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText >\n            <Button onClick={allDelete}>\n              全て削除する\n            </Button>\n            <List>\n              {notificationState.notifications.map(notification =>\n                <>\n                  {\n                    notification.action == 'like' &&\n                    <ListItem\n                      key={notification.id.toString()}\n                    >\n                      {notification.visitor_id}さんが{notification.micropost_id}にいいねしました。\n                    </ListItem>\n                  }\n                  {\n                    notification.action == 'comment' &&\n                    <ListItem\n                      key={notification.id.toString()}\n                    >\n                      {notification.visitor_id}さんが{notification.comment_id}にコメントしました。\n\n                    </ListItem>\n                  }\n                  {\n                    notification.action == 'follow' &&\n                    <ListItem\n                      key={notification.id.toString()}\n                    >\n                      {notification.visitor_id}さんがあなたをフォローしました。\n                    </ListItem>\n                  }\n                  {\n                    notification.action == 'entry' &&\n                    <ListItem\n                      key={notification.id.toString()}\n                    >\n                      {notification.visitor_id}さんが{notification.entry_id}とのトークルームを作りました。\n                    </ListItem>\n                  }\n                </>\n              )}\n            </List>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleClose() }}>\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}