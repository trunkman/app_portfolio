{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'; // styles\n\nimport Grid from \"@mui/material/Grid\"; // コンポーネント\n\nimport { Password } from '../../components/Forms/Password';\nimport { PasswordConfirmation } from '../../components/Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordReset = props => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    patchPasswordReset({\n      id: props.match.params.id,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }).then(data => {\n      history.push(`/`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u518D\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Password, {\n      password: password,\n      handleChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n      passwordConfirmation: passwordConfirmation,\n      handleChange: e => setpasswordConfirmaiton(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u518D\\u767B\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"OYG2aQbPOQ2J9MXbhNGwz0TLkrE=\", false, function () {\n  return [useHistory];\n});\n\n_c = PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx"],"names":["React","useState","useHistory","Grid","Password","PasswordConfirmation","PasswordReset","props","password","setPassword","passwordConfirmation","setpasswordConfirmaiton","history","handleSubmit","patchPasswordReset","id","match","params","then","data","push","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,oBAAT,QAAqC,6CAArC;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,oBAAD,EAAuBC,uBAAvB,IAAkDV,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;;AACA,QAAMW,YAAY,GAAG,MAAM;AACzBC,IAAAA,kBAAkB,CAAC;AACjBC,MAAAA,EAAE,EAAER,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBF,EADN;AAEjBP,MAAAA,QAAQ,EAAEA,QAFO;AAGjBE,MAAAA,oBAAoB,EAAEA;AAHL,KAAD,CAAlB,CAIGQ,IAJH,CAIQC,IAAI,IAAI;AACdP,MAAAA,OAAO,CAACQ,IAAR,CAAc,GAAd;AACD,KAND;AAOD,GARD;;AAUA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEZ,QADZ;AAEE,MAAA,YAAY,EAAEa,CAAC,IAAIZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,oBAAD;AACE,MAAA,oBAAoB,EAAEb,oBADxB;AAEE,MAAA,YAAY,EAAEW,CAAC,IAAIV,uBAAuB,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAF5C;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,YAAjB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/BM;;GAAMP,a;UAGKJ,U;;;KAHLI,a","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n// styles\nimport Grid from \"@mui/material/Grid\";\n// コンポーネント\nimport { Password } from '../../components/Forms/Password';\nimport { PasswordConfirmation } from '../../components/Forms/PasswordConfirmation';\n\nexport const PasswordReset = (props) => {\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('')\n  const history = useHistory()\n  const handleSubmit = () => {\n    patchPasswordReset({\n      id: props.match.params.id,\n      password: password,\n      passwordConfirmation: passwordConfirmation,\n    }).then(data => {\n      history.push(`/`)\n    })\n  }\n\n  return (\n    <Grid container>\n      <h1>パスワード再設定</h1>\n      <p>新しいパスワードを入力してください</p>\n      <Password\n        password={password}\n        handleChange={e => setPassword(e.target.value)}\n      />\n      <PasswordConfirmation\n        passwordConfirmation={passwordConfirmation}\n        handleChange={e => setpasswordConfirmaiton(e.target.value)}\n      />\n      <Button onClick={handleSubmit} type='submit'>\n        パスワードを再登録する\n      </Button>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}