{"ast":null,"code":"import React from \"react\";\nexport const dataInitialState = {\n  microposts: false,\n  following: false,\n  followers: false,\n  messages: false,\n  books: false,\n  user: false\n};\nexport const dataReducer = (dataState, action) => {\n  switch (action.type) {\n    case 'messages':\n      return { ...dataState,\n        messages: true\n      };\n\n    case 'microposts':\n      return { ...dataState,\n        microposts: true\n      };\n    // case 'following':\n    //   return { ...dataState, following: true }\n    // case 'followers':\n    //   return { ...dataState, followers: true }\n\n    case 'books':\n      return { ...dataState,\n        books: true\n      };\n\n    case 'user':\n      return { ...dataState,\n        user: true\n      };\n\n    case 'complete':\n      return dataInitialState;\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/DataFetchReducer.jsx"],"names":["React","dataInitialState","microposts","following","followers","messages","books","user","dataReducer","dataState","action","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,UAAU,EAAE,KADkB;AAE9BC,EAAAA,SAAS,EAAE,KAFmB;AAG9BC,EAAAA,SAAS,EAAE,KAHmB;AAI9BC,EAAAA,QAAQ,EAAE,KAJoB;AAK9BC,EAAAA,KAAK,EAAE,KALuB;AAM9BC,EAAAA,IAAI,EAAE;AANwB,CAAzB;AAUP,OAAO,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EAAE,GAAGF,SAAL;AAAgBJ,QAAAA,QAAQ,EAAE;AAA1B,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGI,SAAL;AAAgBP,QAAAA,UAAU,EAAE;AAA5B,OAAP;AACF;AACA;AACA;AACA;;AACA,SAAK,OAAL;AACE,aAAO,EAAE,GAAGO,SAAL;AAAgBH,QAAAA,KAAK,EAAE;AAAvB,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,EAAE,GAAGG,SAAL;AAAgBF,QAAAA,IAAI,EAAE;AAAtB,OAAP;;AACF,SAAK,UAAL;AACE,aAAON,gBAAP;AAdJ;AAgBD,CAjBM","sourcesContent":["import React from \"react\";\n\nexport const dataInitialState = {\n  microposts: false,\n  following: false,\n  followers: false,\n  messages: false,\n  books: false,\n  user: false,\n}\n\n\nexport const dataReducer = (dataState, action) => {\n  switch (action.type) {\n    case 'messages':\n      return { ...dataState, messages: true }\n    case 'microposts':\n      return { ...dataState, microposts: true }\n    // case 'following':\n    //   return { ...dataState, following: true }\n    // case 'followers':\n    //   return { ...dataState, followers: true }\n    case 'books':\n      return { ...dataState, books: true }\n    case 'user':\n      return { ...dataState, user: true }\n    case 'complete':\n      return dataInitialState\n  }\n}\n"]},"metadata":{},"sourceType":"module"}