{"ast":null,"code":"import axios from 'axios';\nimport { signUp, userPath, users } from '../urls/index'; // ユーザーページを表示するapi\n\nexport const fetchUser = userId => {\n  return axios.get(userPath(userId)).then(res => {\n    console.log('user#show', res);\n    return res.data;\n  }).catch(e => console.error(e));\n}; // 新規登録するためのapi\n\nexport const postSignUp = params => {\n  return axios.post(signUp, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    if (res.data.logged_in) {\n      console.log('signup/user#create', res);\n      return res.data;\n    }\n  }).catch(e => {\n    console.error(e);\n    return 'nil';\n  });\n}; // ユーザー情報更新のapi\n\nexport const patchUpdate = params => {\n  return axios.patch(userPath(params.user_id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    if (res.data) {\n      console.log('user#update', res);\n      return res.data;\n    }\n  }).catch(e => {\n    console.error(e);\n    return 'nil';\n  });\n}; // ユーザー一覧を表示するapi\n\nexport const fetchUsers = () => {\n  return axios.get(users, {\n    withCredentials: true\n  }).then(res => {\n    console.log('user#index', res);\n    return res.data;\n  }).catch(e => {\n    console.error(e);\n  });\n}; // ユーザーを削除するapi\n\nexport const deleteUser = () => {\n  return axios.delete(userPath, {\n    withCredentials: true\n  }).then(res => {\n    console.log('user#destroy', res);\n    return res.data;\n  }).catch.error(e => {\n    console.error(e);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/users.js"],"names":["axios","signUp","userPath","users","fetchUser","userId","get","then","res","console","log","data","catch","e","error","postSignUp","params","post","user","name","email","password","password_confirmation","withCredentials","logged_in","patchUpdate","patch","user_id","fetchUsers","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { signUp, userPath, users } from '../urls/index'\n\n// ユーザーページを表示するapi\nexport const fetchUser = (userId) => {\n  return axios.get(userPath(userId))\n    .then(res => {\n      console.log('user#show', res)\n      return res.data\n    })\n    .catch((e) => console.error(e))\n}\n\n// 新規登録するためのapi\nexport const postSignUp = (params) => {\n  return axios.post(signUp, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    }\n  },\n    { withCredentials: true }\n  )\n    .then(res => {\n      if (res.data.logged_in) {\n        console.log('signup/user#create', res);\n        return res.data;\n      }\n    })\n    .catch(e => {\n      console.error(e);\n      return 'nil'\n    })\n}\n\n// ユーザー情報更新のapi\nexport const patchUpdate = (params) => {\n  return axios.patch(userPath(params.user_id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    }\n  },\n    { withCredentials: true }\n  )\n    .then(res => {\n      if (res.data) {\n        console.log('user#update', res);\n        return res.data;\n      }\n    })\n    .catch(e => {\n      console.error(e);\n      return 'nil'\n    })\n}\n\n// ユーザー一覧を表示するapi\nexport const fetchUsers = () => {\n  return axios.get(users, { withCredentials: true })\n    .then(res => {\n      console.log('user#index', res)\n      return res.data\n    })\n    .catch(e => {\n      console.error(e)\n    })\n}\n\n// ユーザーを削除するapi\nexport const deleteUser = () => {\n  return axios.delete(userPath, { withCredentials: true })\n    .then(res => {\n      console.log('user#destroy', res)\n      return res.data\n    })\n    .catch.error(e => {\n      console.error(e)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}