{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button'; // Icon\n\nimport MenuIcon from '@mui/icons-material/Menu'; // Api\n\nimport { deleteLogout } from \"../../apis/sessions\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton';\nimport { MicropostDialog } from '../../components/Dialogs/MicropostDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState); // const handleClose = () => authDispatch({ type: 'close' })\n  // const handleLogin = (data) => {\n  //   authDispatch({\n  //     type: 'login',\n  //     payload: data.user,\n  //   });\n  // };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout'\n    });\n  }; // const submitLogin = () => {\n  //   postLogIn({\n  //     email: authState.email,\n  //     password: authState.password,\n  //     remember_me: authState.remenberMe,\n  //   }).then(data => {\n  //     handleLogin(data);\n  //     handleClose();\n  //   });\n  // };\n\n\n  const submitLogout = () => {\n    deleteLogout().then(() => {\n      handleLogout();\n      history.push(`/`);\n      alert('ログアウトを成功しました');\n    });\n  };\n\n  const open = props.open;\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"open drawer\",\n        onClick: () => props.handleDrawerOpen(),\n        edge: \"start\",\n        sx: {\n          marginRight: '36px',\n          ...(open && {\n            display: 'none'\n          })\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n          sx: {\n            marginRight: '36px',\n            ...(open && {\n              display: 'none'\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        flexGrow: 1,\n        sx: open && {\n          display: 'none'\n        },\n        children: \"\\u7761\\u7720\\u8CA0\\u50B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"body1\",\n        onClick: () => dialogDispatch({\n          type: 'micropost'\n        }),\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n        open: dialogState.micropost,\n        handleClose: () => dialogDispatch({\n          type: 'close'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          px: 4\n        },\n        variant: \"body1\",\n        component: Link,\n        to: `/booksearch`,\n        children: \"\\u672C\\u306E\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginControlBottun, {\n        handleLogout: submitLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"WpKMvtye72SSXEx9eUXqfPQIeBE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx"],"names":["React","useReducer","useContext","Link","useHistory","AuthContext","styled","MuiAppBar","Toolbar","Typography","IconButton","Button","MenuIcon","deleteLogout","dialogReducer","dialogInitialState","LoginControlBottun","MicropostDialog","Header","props","history","authState","authDispatch","dialogState","dialogDispatch","handleLogout","type","submitLogout","then","push","alert","open","AppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","drawerWidth","width","enteringScreen","handleDrawerOpen","marginRight","display","micropost","px"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\n// Icon\nimport MenuIcon from '@mui/icons-material/Menu';\n// Api\nimport { deleteLogout } from \"../../apis/sessions\"\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// Component\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton'\nimport { MicropostDialog } from '../../components/Dialogs/MicropostDialog';\n\nexport const Header = (props) => {\n  const history = useHistory()\n\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  // const handleClose = () => authDispatch({ type: 'close' })\n  // const handleLogin = (data) => {\n  //   authDispatch({\n  //     type: 'login',\n  //     payload: data.user,\n  //   });\n  // };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout',\n    });\n  };\n\n  // const submitLogin = () => {\n  //   postLogIn({\n  //     email: authState.email,\n  //     password: authState.password,\n  //     remember_me: authState.remenberMe,\n  //   }).then(data => {\n  //     handleLogin(data);\n  //     handleClose();\n  //   });\n  // };\n\n  const submitLogout = () => {\n    deleteLogout()\n      .then(() => {\n        handleLogout();\n        history.push(`/`);\n        alert('ログアウトを成功しました');\n      });\n  };\n\n  const open = props.open\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <AppBar position=\"fixed\" open={open}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => props.handleDrawerOpen()}\n          edge=\"start\"\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon\n            sx={{\n              marginRight: '36px',\n              ...(open && { display: 'none' }),\n            }}\n          />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" flexGrow={1}\n          sx={open && { display: 'none' }}\n        >\n          睡眠負債\n        </Typography>\n        <Button\n          variant=\"body1\"\n          onClick={() => dialogDispatch({ type: 'micropost' })}\n        >\n          投稿\n        </Button>\n        <MicropostDialog\n          open={dialogState.micropost}\n          handleClose={() => dialogDispatch({ type: 'close' })}\n        />\n        <Typography\n          sx={{ px: 4 }}\n          variant=\"body1\"\n          component={Link}\n          to={`/booksearch`}\n        >\n          本の検索\n        </Typography>\n        <LoginControlBottun\n          handleLogout={submitLogout}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}