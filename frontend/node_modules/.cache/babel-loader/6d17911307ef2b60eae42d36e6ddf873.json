{"ast":null,"code":"export const authInitialState = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  rememberMe: '1',\n  loginUser: '',\n  loggedIn: false,\n  // ログイン状態\n  // Snackbarの表示に関わる\n  show: false,\n  type: '',\n  message: 'error'\n};\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'name':\n      return { ...state,\n        name: action.payload\n      };\n\n    case 'email':\n      return { ...state,\n        email: action.payload\n      };\n\n    case 'password':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'passwordConfirmation':\n      return { ...state,\n        passwordConfirmation: action.payload\n      };\n\n    case 'rememberMe':\n      return { ...state,\n        rememberMe: action.payload\n      };\n\n    case 'login':\n      return { ...state,\n        loginUser: action.payload,\n        loggedIn: true,\n        show: true,\n        type: 'success',\n        message: 'ログインに成功しました'\n      };\n\n    case 'logout':\n      return { ...state,\n        loginUser: '',\n        loggedIn: false,\n        show: true,\n        type: 'info',\n        message: action.payload\n      };\n\n    case 'preUpdata':\n      return { ...state,\n        name: action.name,\n        email: action.email\n      };\n\n    case 'reset':\n      return { ...state,\n        name: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        rememberMe: '1'\n      };\n\n    case 'closeSnackbar':\n      return { ...state,\n        show: false,\n        type: '',\n        message: ''\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/AuthReducer.jsx"],"names":["authInitialState","name","email","password","passwordConfirmation","rememberMe","loginUser","loggedIn","show","type","message","authReducer","state","action","payload","Error"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,EADwB;AAE9BC,EAAAA,KAAK,EAAE,EAFuB;AAG9BC,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,oBAAoB,EAAE,EAJQ;AAK9BC,EAAAA,UAAU,EAAE,GALkB;AAM9BC,EAAAA,SAAS,EAAE,EANmB;AAO9BC,EAAAA,QAAQ,EAAE,KAPoB;AAOb;AACjB;AACAC,EAAAA,IAAI,EAAE,KATwB;AAU9BC,EAAAA,IAAI,EAAE,EAVwB;AAW9BC,EAAAA,OAAO,EAAE;AAXqB,CAAzB;AAcP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELX,QAAAA,IAAI,EAAEY,MAAM,CAACC;AAFR,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELV,QAAAA,KAAK,EAAEW,MAAM,CAACC;AAFT,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELT,QAAAA,QAAQ,EAAEU,MAAM,CAACC;AAFZ,OAAP;;AAIF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,oBAAoB,EAAES,MAAM,CAACC;AAFxB,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELP,QAAAA,UAAU,EAAEQ,MAAM,CAACC;AAFd,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACC,OAFb;AAGLP,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,IAAI,EAAE,IAJD;AAKLC,QAAAA,IAAI,EAAE,SALD;AAMLC,QAAAA,OAAO,EAAE;AANJ,OAAP;;AAQF,SAAK,QAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELN,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,IAAI,EAAE,IAJD;AAKLC,QAAAA,IAAI,EAAE,MALD;AAMLC,QAAAA,OAAO,EAAEG,MAAM,CAACC;AANX,OAAP;;AAQF,SAAK,WAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELX,QAAAA,IAAI,EAAEY,MAAM,CAACZ,IAFR;AAGLC,QAAAA,KAAK,EAAEW,MAAM,CAACX;AAHT,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELX,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,QAAQ,EAAE,EAJL;AAKLC,QAAAA,oBAAoB,EAAE,EALjB;AAMLC,QAAAA,UAAU,EAAE;AANP,OAAP;;AASF,SAAK,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,IAAI,EAAE,EAHD;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,YAAM,IAAIK,KAAJ,EAAN;AApEJ;AAsED,CAvEM","sourcesContent":["export const authInitialState = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  rememberMe: '1',\n  loginUser: '',\n  loggedIn: false, // ログイン状態\n  // Snackbarの表示に関わる\n  show: false,\n  type: '',\n  message: 'error',\n}\n\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'name':\n      return {\n        ...state,\n        name: action.payload,\n      };\n    case 'email':\n      return {\n        ...state,\n        email: action.payload,\n      };\n    case 'password':\n      return {\n        ...state,\n        password: action.payload,\n      };\n    case 'passwordConfirmation':\n      return {\n        ...state,\n        passwordConfirmation: action.payload,\n      };\n    case 'rememberMe':\n      return {\n        ...state,\n        rememberMe: action.payload,\n      };\n    case 'login':\n      return {\n        ...state,\n        loginUser: action.payload,\n        loggedIn: true,\n        show: true,\n        type: 'success',\n        message: 'ログインに成功しました',\n      };\n    case 'logout':\n      return {\n        ...state,\n        loginUser: '',\n        loggedIn: false,\n        show: true,\n        type: 'info',\n        message: action.payload,\n      };\n    case 'preUpdata':\n      return {\n        ...state,\n        name: action.name,\n        email: action.email,\n      };\n    case 'reset':\n      return {\n        ...state,\n        name: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        rememberMe: '1',\n      };\n\n    case 'closeSnackbar':\n      return {\n        ...state,\n        show: false,\n        type: '',\n        message: '',\n      };\n    default:\n      throw new Error();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}