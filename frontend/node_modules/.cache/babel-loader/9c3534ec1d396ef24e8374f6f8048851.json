{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx\";\nimport React from \"react\"; // styles\n\nimport { Button } from \"@mui/material\"; // api\n\nimport { postbook } from \"../../apis/books\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ReadButton = ({\n  book,\n  registration\n}) => {\n  // 本を登録\n  const handleClick = boolean => {\n    registration ? postbook({\n      read: boolean,\n      book: props.book\n    }).then(data => {\n      if (data.message) {\n        alert(data.message);\n      } else {\n        data.subscription.read ? alert('読んだ本に登録しました') : alert('積んでいる本に登録しました');\n      }\n    }) : postbook({\n      read: boolean,\n      book: props.book\n    }).then(data => {\n      if (data.message) {\n        alert(data.message);\n      } else {\n        data.subscription.read ? alert('読んだ本に登録しました') : alert('積んでいる本に登録しました');\n      }\n    });\n  }; // 読んだ積んだがわかるように設定する予定\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => handleClick(\"false\"),\n      size: \"small\",\n      children: \"\\u7A4D\\u3080\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => handleClick(\"true\"),\n      size: \"small\",\n      children: \"\\u8AAD\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ReadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx"],"names":["React","Button","postbook","ReadButton","book","registration","handleClick","boolean","read","props","then","data","message","alert","subscription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AACzBC,EAAAA,IADyB;AAEzBC,EAAAA;AAFyB,CAAD,KAGpB;AACJ;AACA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/BF,IAAAA,YAAY,GACPH,QAAQ,CAAC;AACVM,MAAAA,IAAI,EAAED,OADI;AAEVH,MAAAA,IAAI,EAAEK,KAAK,CAACL;AAFF,KAAD,CAAR,CAIAM,IAJA,CAIKC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBC,QAAAA,KAAK,CAACF,IAAI,CAACC,OAAN,CAAL;AACD,OAFD,MAEO;AACLD,QAAAA,IAAI,CAACG,YAAL,CAAkBN,IAAlB,GACKK,KAAK,CAAC,aAAD,CADV,GAEKA,KAAK,CAAC,eAAD,CAFV;AAGD;AACF,KAZA,CADO,GAePX,QAAQ,CAAC;AACVM,MAAAA,IAAI,EAAED,OADI;AAEVH,MAAAA,IAAI,EAAEK,KAAK,CAACL;AAFF,KAAD,CAAR,CAIAM,IAJA,CAIKC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBC,QAAAA,KAAK,CAACF,IAAI,CAACC,OAAN,CAAL;AACD,OAFD,MAEO;AACLD,QAAAA,IAAI,CAACG,YAAL,CAAkBN,IAAlB,GACKK,KAAK,CAAC,aAAD,CADV,GAEKA,KAAK,CAAC,eAAD,CAFV;AAGD;AACF,KAZA,CAfL;AA8BD,GA/BD,CAFI,CAmCJ;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,OAAD,CAF5B;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,MAAD,CAF5B;AAGE,MAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAkBD,CAzDM;KAAMH,U","sourcesContent":["import React from \"react\";\n// styles\nimport { Button } from \"@mui/material\";\n// api\nimport { postbook } from \"../../apis/books\";\n\nexport const ReadButton = ({\n  book,\n  registration,\n}) => {\n  // 本を登録\n  const handleClick = (boolean) => {\n    registration\n      ? (postbook({\n        read: boolean,\n        book: props.book,\n      })\n        .then(data => {\n          if (data.message) {\n            alert(data.message)\n          } else {\n            data.subscription.read\n              ? (alert('読んだ本に登録しました'))\n              : (alert('積んでいる本に登録しました'))\n          }\n        })\n      )\n      : (postbook({\n        read: boolean,\n        book: props.book,\n      })\n        .then(data => {\n          if (data.message) {\n            alert(data.message)\n          } else {\n            data.subscription.read\n              ? (alert('読んだ本に登録しました'))\n              : (alert('積んでいる本に登録しました'))\n          }\n        })\n\n      )\n  }\n\n  // 読んだ積んだがわかるように設定する予定\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        onClick={() => handleClick(\"false\")}\n        size=\"small\"\n      >\n        積む\n      </Button>\n      <Button\n        color=\"primary\"\n        onClick={() => handleClick(\"true\")}\n        size=\"small\"\n      >\n        読了\n      </Button>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}