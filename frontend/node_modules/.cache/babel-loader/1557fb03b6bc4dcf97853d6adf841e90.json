{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/UserInfomation/UserProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // style\n\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport Grid from \"@mui/material/Grid\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@mui/material/Box'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // コンポーネント\n\nimport { SettingDialog } from \"../Dialogs/SettingDialog\";\nimport { FollowButton } from \"../Buttons/FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserProfile = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false); // 設定変更Dialogを開閉する関数群\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 100,\n          height: 100,\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n          sx: {\n            fontSize: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: props.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u8FFD\\u52A0\\u4E88\\u5B9A\\u3002\\u3053\\u3053\\u306B\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u304C\\u8FFD\\u52A0\\u3055\\u308C\\u307E\\u3059\\u3002\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3067\\u3059\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            component: Link,\n            to: `/users/${props.user.id}/following`,\n            children: [props.followingIds.length, \" \\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            component: Link,\n            to: `/users/${props.user.id}/followers`,\n            children: [props.followersIds.length, \" \\u30D5\\u30A9\\u30ED\\u30EF\\u30FC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), props.loginUser.id === props.user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOpenSetting,\n          children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SettingDialog, {\n          handleClose: handleCloseSetting,\n          open: openSettingDialog,\n          user: props.loginUser,\n          dataFetching: props.dataUserFetching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(FollowButton, {\n        userId: props.user.id,\n        followingIds: props.followingIds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u304A\\u6C17\\u306B\\u5165\\u308A\\u306E\\u672C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\u672C\\u306E\\u30BF\\u30A4\\u30C8\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 75,\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserProfile, \"DYu9CrL+JxtuiMrSbk8u5Z7wHlk=\");\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/UserInfomation/UserProfile.jsx"],"names":["React","useState","Link","Avatar","ListItem","Typography","Button","Grid","Skeleton","Box","AccountCircle","SettingDialog","FollowButton","UserProfile","props","openSettingDialog","setOpenSettingDialog","handleOpenSetting","handleCloseSetting","width","height","p","fontSize","user","name","id","followingIds","length","followersIds","loginUser","dataUserFetching"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\";\n// style\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport Grid from \"@mui/material/Grid\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@mui/material/Box';\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// コンポーネント\nimport { SettingDialog } from \"../Dialogs/SettingDialog\";\nimport { FollowButton } from \"../Buttons/FollowButton\";\n\nexport const UserProfile = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  // 設定変更Dialogを開閉する関数群\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n\n  return (\n    <>\n      <Box>\n        <Avatar sx={{ width: 100, height: 100, p: 4 }} >\n          <AccountCircle sx={{ fontSize: 100 }} />\n        </Avatar>\n        <Typography variant=\"h5\">\n          {props.user.name}\n        </Typography>\n        <Typography variant=\"body1\">\n          プロフィールを追加予定。ここにプロフィールが追加されます。ユーザーのプロフィールです。\n        </Typography>\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <ListItem\n              component={Link}\n              to={`/users/${props.user.id}/following`}\n            >\n              {props.followingIds.length} フォロー中\n            </ListItem>\n          </Grid>\n          <Grid item sm={6} xs={12}>\n            <ListItem\n              component={Link}\n              to={`/users/${props.user.id}/followers`}\n            >\n              {props.followersIds.length} フォロワー\n            </ListItem>\n          </Grid>\n        </Grid>\n        {\n          (props.loginUser.id === props.user.id) ? (\n            <>\n              <Button onClick={handleOpenSetting}>\n                プロフィール編集\n              </Button>\n              <SettingDialog\n                handleClose={handleCloseSetting}\n                open={openSettingDialog}\n                user={props.loginUser}\n                dataFetching={props.dataUserFetching}\n              />\n            </>\n          ) : (\n            <FollowButton\n              userId={props.user.id}\n              followingIds={props.followingIds}\n            />\n          )\n        }\n        <Typography variant=\"body1\">お気に入りの本</Typography>\n        <Typography variant=\"h6\">本のタイトル</Typography>\n        <Skeleton variant=\"rect\" width={75} height={100} />\n      </Box>\n\n\n\n\n\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}