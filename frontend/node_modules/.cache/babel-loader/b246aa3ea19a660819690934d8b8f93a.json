{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer } from \"react\";\nimport { AuthContext } from '../../App'; // Style\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport { theme } from \"../../styled/theme\";\nimport Typography from \"@mui/material/Typography\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { Calendar } from \"../../components/UserInfomation/Calendar\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\"; // Dialog\n\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SleepData } from \"../../components/UserInfomation/SleepData\"; // import { Loading } from '../../components/Loading';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 1000,\n    mx: 'auto',\n    textAlign: 'center',\n    width: '100%'\n  },\n  button: {\n    background: '#42a5f5',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    padding: '15px 30px'\n  }\n}));\nexport const Diaries = ({\n  userId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState); // 睡眠負債を取得する\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          letterSpacing: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"~ \\u7761\\u7720\\u65E5\\u8A18 ~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        sx: {\n          alignItems: \"center\",\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(SleepInfo, {\n          userName: 'Testの名前',\n          sleepDebt: '99',\n          sleepSaving: '99'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            onClick: () => dialogDispatch({\n              type: 'diary'\n            }),\n            children: \"\\u7761\\u7720\\u65E5\\u8A18\\u3092\\u66F8\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                letterSpacing: 4,\n                mt: 3\n              },\n              children: [\"\\u7406\\u60F3\\u7761\\u7720\\u6642\\u9593\\uFF1A\", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: ['7.0', \" \\u6642\\u9593\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        sx: {\n          mt: 4,\n          pr: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          userId: userId,\n          open: dialogState.diary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(SleepData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecordDialog, {\n      handleClose: () => dialogDispatch({\n        type: 'close'\n      }),\n      open: dialogState.diary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Diaries, \"0s5VbCxa0AjJ32XCWlc3TMTT3og=\", false, function () {\n  return [useStyles];\n});\n\n_c = Diaries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diaries\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx"],"names":["React","useContext","useReducer","AuthContext","Button","Box","Grid","makeStyles","theme","Typography","dialogReducer","dialogInitialState","Calendar","SleepInfo","RecordDialog","SleepData","useStyles","root","alignItems","flexDirection","flexWrap","justifyContent","maxWidth","mx","textAlign","width","button","background","border","borderRadius","color","height","padding","Diaries","userId","classes","dialogState","dialogDispatch","letterSpacing","mt","type","pr","diary"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport { theme } from \"../../styled/theme\";\nimport Typography from \"@mui/material/Typography\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\n// Component\nimport { Calendar } from \"../../components/UserInfomation/Calendar\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\";\n// Dialog\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SleepData } from \"../../components/UserInfomation/SleepData\";\n// import { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 1000,\n    mx: 'auto',\n    textAlign: 'center',\n    width: '100%',\n  },\n  button: {\n    background: '#42a5f5',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    padding: '15px 30px',\n  },\n}));\n\nexport const Diaries = ({ userId }) => {\n  const classes = useStyles();\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  // 睡眠負債を取得する\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\">\n        <Box sx={{ letterSpacing: 10 }}><b>~ 睡眠日記 ~</b></Box>\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6} sx={{\n          alignItems: \"center\",\n          justifyContent: 'center',\n          mt: 4,\n        }}>\n          <SleepInfo\n            userName={'Testの名前'}\n            sleepDebt={'99'}\n            sleepSaving={'99'}\n          />\n          <Box sx={{\n            alignItems: \"center\",\n            justifyContent: 'center',\n          }}>\n            <Button\n              className={classes.button}\n              onClick={() => dialogDispatch({ type: 'diary' })}\n            >\n              睡眠日記を書く\n            </Button>\n            <Typography variant=\"h6\">\n              <Box sx={{ letterSpacing: 4, mt: 3 }}>理想睡眠時間：<b>{'7.0'} 時間</b></Box>\n            </Typography>\n          </Box>\n        </Grid>\n\n        <Grid item sm={12} md={6}\n          sx={{ mt: 4, pr: 2 }}\n        >\n          <Calendar\n            userId={userId}\n            open={dialogState.diary}\n          />\n        </Grid>\n      </Grid>\n      <Box>\n        {/* {diaryState.fetchState != 'ok' ? <Loading /> : */}\n        <SleepData\n        />\n        {/* } */}\n      </Box>\n      <RecordDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.diary}\n      />\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}