{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // styled\n\nimport { Grid } from \"@mui/material\"; // api\n\nimport { fetchUser } from \"../apis/users\"; // コンポーネント\n\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [microposts, setMicroposts] = useState([]); // ユーザー情報の取得 ※未完：micropost登録・削除で更新しない\n\n  useEffect(() => {\n    fetchUser({\n      userId: props.match.params.id\n    }).then(data => {\n      setUser(data.user);\n      setMicroposts(data.microposts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      width: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        loginUser: props.loginUser,\n        isLoggedIn: props.isLoggedIn,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.100'\n      },\n      children: /*#__PURE__*/_jsxDEV(Microposts, {\n        loginUser: props.loginUser,\n        microposts: microposts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"sUF+dG5ykqxm+g9VLMW/Y0/RpGg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","useState","useEffect","Grid","fetchUser","Profile","Microposts","Following","User","props","user","setUser","microposts","setMicroposts","userId","match","params","id","then","data","width","mx","bgcolor","px","loginUser","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAF6B,CAG7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAAC;AAAEU,MAAAA,MAAM,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC;AAA7B,KAAD,CAAT,CACGC,IADH,CACQC,IAAI,IAAI;AACZR,MAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACAG,MAAAA,aAAa,CAACM,IAAI,CAACP,UAAN,CAAb;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE;AAAEQ,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,SAAS,EAAEb,KAAK,CAACe,SADnB;AAEE,QAAA,UAAU,EAAEf,KAAK,CAACgB,UAFpB;AAGE,QAAA,IAAI,EAAEf;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEa,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAEb,KAAK,CAACe,SADnB;AAEE,QAAA,UAAU,EAAEZ;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlCM;;GAAMJ,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// styled\nimport { Grid } from \"@mui/material\";\n// api\nimport { fetchUser } from \"../apis/users\";\n// コンポーネント\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\n\nexport const User = (props) => {\n  const [user, setUser] = useState([])\n  const [microposts, setMicroposts] = useState([])\n  // ユーザー情報の取得 ※未完：micropost登録・削除で更新しない\n  useEffect(() => {\n    fetchUser({ userId: props.match.params.id })\n      .then(data => {\n        setUser(data.user)\n        setMicroposts(data.microposts)\n      })\n  }, [])\n\n  return (\n    <Grid container sx={{ width: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <Profile\n          loginUser={props.loginUser}\n          isLoggedIn={props.isLoggedIn}\n          user={user}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.100' }}>\n        <Microposts\n          loginUser={props.loginUser}\n          microposts={microposts}\n        />\n      </Grid>\n      {/* <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.100' }}>\n        <Following\n          user={user}\n        />\n      </Grid> */}\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}