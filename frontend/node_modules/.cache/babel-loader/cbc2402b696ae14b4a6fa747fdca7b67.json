{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Box from '@mui/material/Box';\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Typography from \"@mui/material/Typography\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { fetchMicropost, deleteMicropost } from \"../../apis/microposts\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'; // Component\n\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { MicropostDialog } from \"../Dialogs/MicropostDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  micropost,\n  user\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState);\n\n  const handleClose = () => dialogDispatch({\n    type: 'close'\n  }); // 投稿詳細(コメント付き)を取得する\n\n\n  const Micropost = () => {\n    postDispatch({\n      type: 'fetching'\n    });\n    fetchMicropost(micropost.id).then(data => {\n      postDispatch({\n        type: 'fetchSuccess',\n        payload: {\n          micropost: data.micropost,\n          comments: data.comments,\n          likeStatus: data.likeStatus\n        }\n      });\n    });\n  }; // 投稿を削除する\n\n\n  const deleteSubmit = () => {\n    deleteMicropost(micropost.id);\n    handleClose();\n    history.push(`/users/${authState.loginUser.id}`);\n  }; // クリック時、投稿詳細を表示する\n\n\n  const handleClick = () => {\n    Micropost();\n    dialogDispatch({\n      type: 'micropost'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        alignItems: \"center\",\n        borderTop: 0.2,\n        my: 1,\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        onClick: handleClick,\n        sx: {\n          py: 2,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", user.name, \" \\u3055\\u3093 \\u3011 \", micropost.created_at.substr(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              mt: 2\n            },\n            children: micropost.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), authState.loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => dialogDispatch({\n          type: 'delete'\n        }),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n        loginUserId: authState.loginUser.id,\n        micropostId: micropost.id,\n        Status: likeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        commentCount: commentCount,\n        loginUserId: authState.loginUser.id,\n        micropostId: micropost.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, micropost.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n      comments: postState.comments,\n      handleClose: handleClose,\n      loginUser: authState.loginUser,\n      micropost: postState.micropost,\n      open: dialogState.micropost,\n      user: postState.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: handleClose,\n      handleDelete: deleteSubmit,\n      message: '投稿を削除',\n      open: dialogState.delete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Micropost, \"Ih8ISXMRoK/vxBhdtx0fE4do7mw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Micropost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Micropost\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx"],"names":["React","useContext","useReducer","useHistory","AuthContext","Box","IconButton","ListItem","ListItemAvatar","Typography","AccountCircle","DeleteOutlinedIcon","fetchMicropost","deleteMicropost","dialogReducer","dialogInitialState","postReducer","postInitialState","LikeButton","CommentButton","DeleteDialog","MicropostDialog","Micropost","commentCount","likeStatus","micropost","user","history","authState","dialogState","dialogDispatch","postState","postDispatch","handleClose","type","id","then","data","payload","comments","deleteSubmit","push","loginUser","handleClick","alignItems","borderTop","my","display","fontSize","py","flexGrow","name","created_at","substr","replace","pl","letterSpacing","mt","content","user_id","toString","delete"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { fetchMicropost, deleteMicropost } from \"../../apis/microposts\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'\n// Component\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { MicropostDialog } from \"../Dialogs/MicropostDialog\";\n\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  micropost,\n  user,\n}) => {\n  const history = useHistory();\n  const { authState } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  // 投稿詳細(コメント付き)を取得する\n  const Micropost = () => {\n    postDispatch({ type: 'fetching' })\n    fetchMicropost(micropost.id)\n      .then(data => {\n        postDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            micropost: data.micropost,\n            comments: data.comments,\n            likeStatus: data.likeStatus,\n          }\n        });\n      });\n  }\n  // 投稿を削除する\n  const deleteSubmit = () => {\n    deleteMicropost(micropost.id)\n    handleClose()\n    history.push(`/users/${authState.loginUser.id}`)\n  }\n  // クリック時、投稿詳細を表示する\n  const handleClick = () => {\n    Micropost();\n    dialogDispatch({ type: 'micropost' });\n  }\n\n  return (\n    <>\n      <ListItem\n        key={micropost.id.toString()}\n        sx={{\n          alignItems: \"center\",\n          borderTop: 0.2,\n          my: 1,\n          display: 'flex',\n        }}>\n        <ListItemAvatar>\n          <AccountCircle sx={{ fontSize: 35 }} />\n        </ListItemAvatar>\n        <Box\n          onClick={handleClick}\n          sx={{ py: 2, flexGrow: 1 }}\n        >\n          <Typography>\n            【 {user.name} さん 】 {micropost.created_at.substr(0, 19).replace('T', ' ')}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, mt: 2 }}>{micropost.content}</Box>\n          </Typography>\n        </Box>\n        {authState.loginUser.id === micropost.user_id && (\n          <IconButton onClick={() => dialogDispatch({ type: 'delete' })}>\n            <DeleteOutlinedIcon />\n          </IconButton>\n        )}\n        <LikeButton\n          loginUserId={authState.loginUser.id}\n          micropostId={micropost.id}\n          Status={likeStatus}\n        />\n        <CommentButton\n          commentCount={commentCount}\n          loginUserId={authState.loginUser.id}\n          micropostId={micropost.id}\n        />\n      </ListItem >\n\n      <MicropostDialog\n        comments={postState.comments}\n        handleClose={handleClose}\n        loginUser={authState.loginUser}\n        micropost={postState.micropost}\n        open={dialogState.micropost}\n        user={postState.user}\n      />\n      <DeleteDialog\n        handleClose={handleClose}\n        handleDelete={deleteSubmit}\n        message={'投稿を削除'}\n        open={dialogState.delete}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}