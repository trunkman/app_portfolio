{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport IconButton from \"@mui/material/IconButton\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { deleteComment } from \"../../apis/comments\"; // Component\n\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Comment = ({\n  comment,\n  loginUserId,\n  user\n}) => {\n  _s();\n\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    commentId: ''\n  });\n\n  const handleClose = () => setOpen({\n    isOpen: false\n  }); // コメントを削除する\n\n\n  const deleteSubmit = commentId => {\n    deleteComment(commentId);\n    handleClose();\n    alert('コメントを削除しました');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        my: 1,\n        borderTop: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 35\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 2,\n          pl: 3,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", user.name, \" \\u3055\\u3093 \\u3011 \", comment.created_at.substr(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              my: 2\n            },\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), loginUserId === comment.user_id && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setOpen({\n          isOpen: true,\n          commentId: comment.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, comment.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: handleClose,\n      handleDelete: deleteSubmit,\n      message: 'コメントを削除',\n      open: open.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Comment, \"sMIDxlHqSKuSBRQQv/Uq4EgAC/U=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx"],"names":["React","useState","Box","Typography","ListItem","IconButton","AccountCircle","DeleteOutlinedIcon","deleteComment","DeleteDialog","Comment","comment","loginUserId","user","open","setOpen","isOpen","commentId","handleClose","deleteSubmit","alert","display","alignItems","my","borderTop","fontSize","pt","pl","flexGrow","name","created_at","substr","replace","letterSpacing","content","user_id","id","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport IconButton from \"@mui/material/IconButton\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { deleteComment } from \"../../apis/comments\";\n// Component\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\n\n\nexport const Comment = ({\n  comment,\n  loginUserId,\n  user,\n}) => {\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    commentId: '',\n  });\n  const handleClose = () => setOpen({ isOpen: false });\n  // コメントを削除する\n  const deleteSubmit = (commentId) => {\n    deleteComment(commentId)\n    handleClose();\n    alert('コメントを削除しました')\n  }\n\n  return (\n    <>\n      <ListItem\n        key={comment.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          my: 1,\n          borderTop: 0.2,\n        }}>\n        <AccountCircle sx={{ fontSize: 35 }} />\n        <Box sx={{\n          pt: 2,\n          pl: 3,\n          flexGrow: 1,\n        }}>\n          <Typography>\n            【 {user.name} さん 】 {comment.created_at.substr(0, 19).replace('T', ' ')}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, my: 2 }}>{comment.content}</Box>\n          </Typography>\n        </Box>\n        {loginUserId === comment.user_id && (\n          <IconButton onClick={() => setOpen({ isOpen: true, commentId: comment.id })}>\n            <DeleteOutlinedIcon />\n          </IconButton>\n        )}\n      </ListItem >\n      <DeleteDialog\n        handleClose={handleClose}\n        handleDelete={deleteSubmit}\n        message={'コメントを削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}