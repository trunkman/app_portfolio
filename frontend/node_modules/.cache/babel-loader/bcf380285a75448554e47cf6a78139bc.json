{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/BookSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // styles\n\nimport Grid from \"@mui/material/Grid\"; // api\n\nimport { fetchBooks } from \"../../apis/books\"; // コンポーネント\n\nimport { BookList } from '../../components/Lists/BookList';\nimport { Search } from \"../../components/Forms/Search\";\nimport { BookSearchButton } from \"../../components/Buttons/BookSearchButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookSearch = () => {\n  _s();\n\n  const [keyword, setKeyword] = useState('');\n  const [books, setBooks] = useState([]);\n\n  const handleSubmit = () => {\n    fetchBooks({\n      keyword: keyword\n    }).then(data => {\n      setKeyword('');\n      setBooks(data.books);\n    });\n  };\n\n  const bookDataSet = () => {\n    const dataSet = [];\n    books.map(book => dataSet.push(book.params));\n    return dataSet;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      maxWidth: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u66F8\\u7C4D\\u540D\\u3067\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        keyword: keyword,\n        handleChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookSearchButton, {\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.300'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u691C\\u7D22\\u7D50\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u66F8\\u7C4D : \", books.length, \" \\u4EF6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), books.length && /*#__PURE__*/_jsxDEV(BookList, {\n      books: bookDataSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"6ItN8FHOtVLnVmByJGj4SqWKLZg=\");\n\n_c = BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/BookSearch.jsx"],"names":["React","useEffect","useState","Grid","fetchBooks","BookList","Search","BookSearchButton","BookSearch","keyword","setKeyword","books","setBooks","handleSubmit","then","data","bookDataSet","dataSet","map","book","push","params","maxWidth","mx","bgcolor","px","e","target","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,gBAAT,QAAiC,2CAAjC;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMW,YAAY,GAAG,MAAM;AACzBT,IAAAA,UAAU,CAAC;AACTK,MAAAA,OAAO,EAAEA;AADA,KAAD,CAAV,CAEGK,IAFH,CAEQC,IAAI,IAAI;AACdL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KALD;AAMD,GAPD;;AASA,QAAMK,WAAW,GAAG,MAAM;AACxB,UAAMC,OAAO,GAAG,EAAhB;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAIF,OAAO,CAACG,IAAR,CAAaD,IAAI,CAACE,MAAlB,CAAlB;AACA,WAAQJ,OAAR;AACD,GAJD;;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,EAAE,EAAE,MAAtB;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEf,OADX;AAEE,QAAA,YAAY,EAAEiB,CAAC,IAAIhB,UAAU,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAF/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,gBAAD;AACE,QAAA,YAAY,EAAEf;AADhB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE;AAAEY,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,sCAAUb,KAAK,CAACkB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAgBIlB,KAAK,CAACkB,MAAN,iBACE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEb;AADT;AAAA;AAAA;AAAA;AAAA,YAjBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3CM;;GAAMR,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// styles\nimport Grid from \"@mui/material/Grid\";\n// api\nimport { fetchBooks } from \"../../apis/books\";\n// コンポーネント\nimport { BookList } from '../../components/Lists/BookList'\nimport { Search } from \"../../components/Forms/Search\";\nimport { BookSearchButton } from \"../../components/Buttons/BookSearchButton\"\n\nexport const BookSearch = () => {\n  const [keyword, setKeyword] = useState('')\n  const [books, setBooks] = useState([])\n  const handleSubmit = () => {\n    fetchBooks({\n      keyword: keyword,\n    }).then(data => {\n      setKeyword('')\n      setBooks(data.books)\n    })\n  }\n\n  const bookDataSet = () => {\n    const dataSet = []\n    books.map(book => dataSet.push(book.params));\n    return (dataSet);\n  }\n\n  return (\n    <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <p>書籍名で検索</p>\n        <Search\n          keyword={keyword}\n          handleChange={e => setKeyword(e.target.value)}\n        />\n        <BookSearchButton\n          handleSubmit={handleSubmit}\n        />\n      </Grid>\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.300' }}>\n        <h3>検索結果</h3>\n        <h4>書籍 : {books.length} 件</h4>\n      </Grid>\n      {\n        books.length && (\n          <BookList\n            books={bookDataSet}\n          />\n        )\n      }\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}