{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { deleteMicropost } from \"../../apis/microposts\"; // Component\n\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost\n}) => {\n  _s();\n\n  const history = useHistory(); // 削除確認ダイアログの開閉\n\n  const [open, setOpen] = useState({\n    isOpen: false,\n    micropostId: ''\n  }); // 投稿を削除する\n\n  const deleteSubmit = () => {\n    deleteMicropost(open.micropostId);\n    history.push(`/users/${loginUser.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 35\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pl: 3,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", micropost.user_id, \"\\u3055\\u3093 \\u3011 \", micropost.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              my: 2\n            },\n            children: [\" \", micropost.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {\n          onClick: () => setOpen({\n            isOpen: true,\n            micropostId: micropost.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(LikeButton, {\n          loginUserId: loginUser.id,\n          micropostId: micropost.id,\n          Status: likeStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        loginUserId: loginUser.id,\n        micropostId: micropost.id,\n        commentCount: commentCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, micropost.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: () => setOpen({\n        isOpen: false\n      }),\n      handleDelete: deleteSubmit,\n      message: '投稿を削除',\n      open: open.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Micropost, \"MEsDhxYkUIEf5/s4iViJDTlJGZQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Micropost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Micropost\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx"],"names":["React","useState","useHistory","Box","Typography","ListItem","AccountCircle","DeleteOutlinedIcon","deleteMicropost","LikeButton","CommentButton","DeleteDialog","Micropost","commentCount","likeStatus","loginUser","micropost","history","open","setOpen","isOpen","micropostId","deleteSubmit","push","id","display","alignItems","my","fontSize","pl","flexGrow","user_id","created_at","letterSpacing","content","ml","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n// Style\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { deleteMicropost } from \"../../apis/microposts\";\n// Component\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\"\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\n\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost,\n}) => {\n  const history = useHistory();\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    micropostId: '',\n  });\n\n  // 投稿を削除する\n  const deleteSubmit = () => {\n    deleteMicropost(open.micropostId)\n    history.push(`/users/${loginUser.id}`)\n  }\n\n  return (\n    <>\n      <ListItem\n        key={micropost.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          my: 4,\n        }}>\n        <AccountCircle sx={{ fontSize: 35 }} />\n        <Box sx={{\n          pl: 3,\n          flexGrow: 1,\n        }}>\n          <Typography>\n            【 {micropost.user_id}さん 】 {micropost.created_at}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, my: 2 }}> {micropost.content}</Box>\n          </Typography>\n        </Box>\n        {loginUser.id === micropost.user_id && (\n          <Box>\n            <DeleteOutlinedIcon\n              onClick={() => setOpen({ isOpen: true, micropostId: micropost.id })}\n            />\n          </Box >\n        )}\n        <Box sx={{ ml: 2 }}>\n          <LikeButton\n            loginUserId={loginUser.id}\n            micropostId={micropost.id}\n            Status={likeStatus}\n          />\n        </Box>\n        <CommentButton\n          loginUserId={loginUser.id}\n          micropostId={micropost.id}\n          commentCount={commentCount}\n        />\n      </ListItem >\n      <DeleteDialog\n        handleClose={() => setOpen({ isOpen: false })}\n        handleDelete={deleteSubmit}\n        message={'投稿を削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}