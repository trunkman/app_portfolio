{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\"; // コンポーネント\n\nimport { Header } from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openLogInDialog, setOpenLogInDialog] = useState(false); // ログインのDialogを開くCallback関数\n\n  const handleOpenLogIn = () => {\n    setOpenLogInDialog(true);\n  }; // ログインのDialogを閉じるCallback関数\n\n\n  const handleCloseLogIn = () => {\n    setOpenLogInDialog(false);\n  }; // 返り値：ユーザー画面\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedInStatus: props.loggedInStatus,\n      handleLogin: props.handleLogin,\n      handleLogout: props.handleLogout,\n      open: openLogInDialog,\n      handleClose: handleCloseLogIn,\n      handleClickOpenLogIn: handleOpenLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id\\u306F\", props.match.params.id, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u540D\\u524D\\u306F\", props.user.name, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email\\u306F\", props.user.email, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"G8oWEGIJ9qyfN1vWFWsumHOsLIg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","Header","User","props","openLogInDialog","setOpenLogInDialog","handleOpenLogIn","handleCloseLogIn","loggedInStatus","handleLogin","handleLogout","match","params","id","user","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CAEA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,KAAD,CAAtD,CAD6B,CAG7B;;AACA,QAAMM,eAAe,GAAG,MAAM;AAC5BD,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD,CAJ6B,CAQ7B;;;AACA,QAAME,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD,CAT6B,CAa7B;;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,cAAc,EAAEF,KAAK,CAACK,cADxB;AAEE,MAAA,WAAW,EAAEL,KAAK,CAACM,WAFrB;AAGE,MAAA,YAAY,EAAEN,KAAK,CAACO,YAHtB;AAIE,MAAA,IAAI,EAAEN,eAJR;AAKE,MAAA,WAAW,EAAEG,gBALf;AAME,MAAA,oBAAoB,EAAED;AANxB;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,6BAAOH,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,uCAAOV,KAAK,CAACW,IAAN,CAAWC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,gCAAUZ,KAAK,CAACW,IAAN,CAAWE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9BM;;GAAMd,I;;KAAAA,I","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\n// コンポーネント\nimport { Header } from \"../components/Header\"\n\nexport const User = (props) => {\n  const [openLogInDialog, setOpenLogInDialog] = useState(false)\n\n  // ログインのDialogを開くCallback関数\n  const handleOpenLogIn = () => {\n    setOpenLogInDialog(true)\n  }\n\n  // ログインのDialogを閉じるCallback関数\n  const handleCloseLogIn = () => {\n    setOpenLogInDialog(false)\n  }\n\n  // 返り値：ユーザー画面\n  return (\n    <Fragment>\n      <Header\n        loggedInStatus={props.loggedInStatus}\n        handleLogin={props.handleLogin}\n        handleLogout={props.handleLogout}\n        open={openLogInDialog}\n        handleClose={handleCloseLogIn}\n        handleClickOpenLogIn={handleOpenLogIn}\n      />\n      <h1>ユーザーページ</h1>\n      <p>Idは{props.match.params.id}です</p>\n      <p>名前は{props.user.name}です</p>\n      <p>Emailは{props.user.email}です</p>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}