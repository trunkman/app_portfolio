{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx\";\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Diary = () => {\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    locale: \"ja\",\n    events: [{\n      title: \"event 1\",\n      start: \"2021-06-01\"\n    }, {\n      title: \"event 2\",\n      start: \"2021-06-03\",\n      end: \"2021-06-05\"\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; // styles\n// import Grid from \"@mui/material/Grid\";\n// import TextField from '@mui/material/TextField';\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import StaticDatePicker from '@mui/lab/StaticDatePicker';\n// export const Diary = () => {\n//   const [value, setValue] = useState(new Date());\n//   return (\n//     <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n//       <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.200' }}>\n//         <LocalizationProvider dateAdapter={AdapterDateFns}>\n//           <StaticDatePicker\n//             displayStaticWrapperAs=\"desktop\"\n//             openTo=\"year\"\n//             value={value}\n//             onChange={(newValue) => {\n//               setValue(newValue);\n//             }}\n//             renderInput={(params) => {\n//               // <p>test</p>\n//               <TextField {...params} />\n//             }}\n//           />\n//         </LocalizationProvider>\n//       </Grid>\n//     </Grid>\n//   );\n// }\n\n_c = Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx"],"names":["React","useState","FullCalendar","dayGridPlugin","Diary","title","start","end"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,sBAEE,QAAC,YAAD;AACE,IAAA,OAAO,EAAE,CAACD,aAAD,CADX;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,MAAM,EAAC,IAHT;AAIE,IAAA,MAAM,EAAE,CACN;AAAEE,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KADM,EAEN;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE,YAA3B;AAAyCC,MAAAA,GAAG,EAAE;AAA9C,KAFM;AAJV;AAAA;AAAA;AAAA;AAAA,UAFF;AAYD,CAbM,C,CAeP;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA9CaH,K","sourcesContent":["import React, { useState } from \"react\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\nexport const Diary = () => {\n  return (\n\n    <FullCalendar\n      plugins={[dayGridPlugin]}\n      initialView=\"dayGridMonth\"\n      locale=\"ja\"\n      events={[\n        { title: \"event 1\", start: \"2021-06-01\" },\n        { title: \"event 2\", start: \"2021-06-03\", end: \"2021-06-05\" },\n      ]}\n    />\n  )\n}\n\n// styles\n// import Grid from \"@mui/material/Grid\";\n\n// import TextField from '@mui/material/TextField';\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\n// import StaticDatePicker from '@mui/lab/StaticDatePicker';\n\n// export const Diary = () => {\n//   const [value, setValue] = useState(new Date());\n\n//   return (\n//     <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n//       <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.200' }}>\n//         <LocalizationProvider dateAdapter={AdapterDateFns}>\n//           <StaticDatePicker\n//             displayStaticWrapperAs=\"desktop\"\n//             openTo=\"year\"\n//             value={value}\n//             onChange={(newValue) => {\n//               setValue(newValue);\n//             }}\n//             renderInput={(params) => {\n//               // <p>test</p>\n//               <TextField {...params} />\n//             }}\n//           />\n//         </LocalizationProvider>\n//       </Grid>\n//     </Grid>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}