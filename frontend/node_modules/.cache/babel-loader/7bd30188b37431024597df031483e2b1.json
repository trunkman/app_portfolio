{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Following.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\"; // styled\n\nimport { List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@mui/material\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { fetchFollowing } from \"../apis/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Following = props => {\n  _s();\n\n  const [following, setFollowing] = userState([]);\n  const [title, setTitle] = useState('No title'); // ユーザーのFollowing情報を取得\n\n  useEffect(() => {\n    fetchFollowing({\n      userId: props.user.id\n    }).then(data => {\n      setFollowing(data.users);\n      setTitle(data.title);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        bgcolor: 'background.paper'\n      },\n      children: following.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          secondary: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u5185\\u5BB9\\u304C\\u8A18\\u8F09\\u3055\\u308C\\u307E\\u3059\\u3002\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${user.id}`,\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Following, \"8+nW5/lY4cg5mq1nTYsaASWE3Ps=\");\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Following.jsx"],"names":["React","Fragment","List","ListItem","ListItemAvatar","ListItemText","Typography","AccountCircle","fetchFollowing","Following","props","following","setFollowing","userState","title","setTitle","useState","useEffect","userId","user","id","then","data","users","bgcolor","map","fontSize","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,YAAzC,EAAuDC,UAAvD,QAAyE,eAAzE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,SAAS,CAAC,EAAD,CAA3C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,UAAD,CAAlC,CAFkC,CAGlC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdT,IAAAA,cAAc,CAAC;AAAEU,MAAAA,MAAM,EAAER,KAAK,CAACS,IAAN,CAAWC;AAArB,KAAD,CAAd,CACGC,IADH,CACQC,IAAI,IAAI;AACZV,MAAAA,YAAY,CAACU,IAAI,CAACC,KAAN,CAAZ;AACAR,MAAAA,QAAQ,CAACO,IAAI,CAACR,KAAN,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAV;AAAA,gBAEIb,SAAS,CAACc,GAAV,CAAcN,IAAI,iBAChB,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,EAAE,EAAE;AAAEO,cAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,gIAAxB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASP,IAAI,CAACC,EAAG,EAA5B;AAAA,sBAAgCD,IAAI,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAuBR,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/BM;;GAAMX,S;;KAAAA,S","sourcesContent":["import React, { Fragment } from \"react\";\n// styled\nimport { List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@mui/material\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { fetchFollowing } from \"../apis/users\";\n\nexport const Following = (props) => {\n  const [following, setFollowing] = userState([])\n  const [title, setTitle] = useState('No title')\n  // ユーザーのFollowing情報を取得\n  useEffect(() => {\n    fetchFollowing({ userId: props.user.id })\n      .then(data => {\n        setFollowing(data.users)\n        setTitle(data.title)\n      })\n  }, [])\n\n  return (\n    <Fragment>\n      <h2>{title}</h2>\n      <List sx={{ bgcolor: 'background.paper' }}>\n        {\n          following.map(user =>\n            <ListItem divider key={user.id}>\n              <ListItemAvatar>\n                <AccountCircle sx={{ fontSize: 40 }} />\n              </ListItemAvatar>\n              <ListItemText secondary='ユーザーのプロフィール内容が記載されます。'>\n                <Link to={`/users/${user.id}`}>{user.name}</Link>\n              </ListItemText>\n            </ListItem >\n          )\n        }\n      </List>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}