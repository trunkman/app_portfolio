{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent'; // Api\n\nimport { postMicropost } from '../../apis/microposts'; // Reducer\n\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'; // Component\n\nimport { Content } from '../Forms/Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MicropostDialog = () => {\n  _s();\n\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState);\n\n  const handleClose = () => postDispatch({\n    type: 'close'\n  });\n\n  const submitPost = () => {\n    postMicropost({\n      content: postState.content,\n      user_id: authState.loginUser.id\n    }).then(data => {\n      postDispatch({\n        type: 'reset'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: postState.open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u6295\\u7A3F\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        content: postStete.content,\n        handleChange: e => postDispatch({\n          type: 'content',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitPost,\n        type: \"submit\",\n        children: \"\\u6295\\u7A3F\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MicropostDialog, \"VuFXRErcB5WEDHdNOHTGpzoOfx4=\");\n\n_c = MicropostDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MicropostDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx"],"names":["React","useReducer","useContext","AuthContext","Button","Dialog","DialogActions","DialogTitle","DialogContent","postMicropost","postReducer","postInitialState","Content","MicropostDialog","authState","postState","postDispatch","handleClose","type","submitPost","content","user_id","loginUser","id","then","data","open","postStete","e","payload","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CACA;;AACA,SAASC,aAAT,QAA8B,uBAA9B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,2BAA9C,C,CACA;;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAEnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBZ,UAAU,CAACC,WAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bf,UAAU,CAACS,WAAD,EAAcC,gBAAd,CAA5C;;AAEA,QAAMM,WAAW,GAAG,MAAMD,YAAY,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAtC;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBV,IAAAA,aAAa,CAAC;AACZW,MAAAA,OAAO,EAAEL,SAAS,CAACK,OADP;AAEZC,MAAAA,OAAO,EAAEP,SAAS,CAACQ,SAAV,CAAoBC;AAFjB,KAAD,CAAb,CAGGC,IAHH,CAGQC,IAAI,IAAI;AACdT,MAAAA,YAAY,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAZ;AACD,KALD;AAMD,GAPD;;AASA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEH,SAAS,CAACW,IADlB;AAEE,IAAA,OAAO,EAAET,WAFX;AAAA,4BAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,OAAO,EAAEU,SAAS,CAACP,OADrB;AAEE,QAAA,YAAY,EAAEQ,CAAC,IACbZ,YAAY,CAAC;AACXE,UAAAA,IAAI,EAAE,SADK;AAEXW,UAAAA,OAAO,EAAED,CAAC,CAACE,MAAF,CAASC;AAFP,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAkBE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEd,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA5CM;;GAAMN,e;;KAAAA,e","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { AuthContext } from \"../../App\";\n// Style\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n// Api\nimport { postMicropost } from '../../apis/microposts';\n// Reducer\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'\n// Component\nimport { Content } from '../Forms/Content';\n\nexport const MicropostDialog = () => {\n\n  const { authState } = useContext(AuthContext);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState);\n\n  const handleClose = () => postDispatch({ type: 'close' })\n  const submitPost = () => {\n    postMicropost({\n      content: postState.content,\n      user_id: authState.loginUser.id,\n    }).then(data => {\n      postDispatch({ type: 'reset' });\n    });\n  };\n\n  return (\n    <Dialog\n      open={postState.open}\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        投稿画面\n      </DialogTitle>\n      <DialogContent>\n        <Content\n          content={postStete.content}\n          handleChange={e =>\n            postDispatch({\n              type: 'content',\n              payload: e.target.value,\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>\n          閉じる\n        </Button>\n        <Button onClick={submitPost} type='submit'  >\n          投稿する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}