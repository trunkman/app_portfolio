{"ast":null,"code":"import axios from \"axios\";\nimport { presignedObject, avatar, micropost } from \"../urls\"; // 署名URLを取得するするapi\n\nexport const fetchPresigned = fileName => {\n  return axios.get(presignedObject(fileName), {\n    withCredentials: true\n  }).then(res => {\n    console.log('images#presigned_object', res);\n    return res.data;\n  }).catch(error => {\n    console.log('images#presigned_object', error);\n  });\n}; // S3にアップロードするapi\n\nexport const postS3 = params => {\n  console.log(params);\n  return axios.post(params.presignedObjectUrl, params.formData, {\n    headers: {\n      'Content-Type': params.fileType\n    }\n  }).then(res => {\n    console.log('S3', res);\n    return res.data;\n  }).catch(error => {\n    console.log('S3', error);\n  });\n}; // Avata画像を登録するapi\n\nexport const postAvatarImage = params => {\n  return axios.post(avatar, {\n    avatarUrl: params.avatarUrl\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('images#avatar', res);\n    return res.data;\n  }).catch(error => {\n    console.log('images#avatar', error);\n  });\n}; // 投稿画像を登録するapi\n\nexport const postMicropostImage = params => {\n  return axios.post(micropost, {\n    micropostUrl: params.micropostUrl\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('images#micropost', res);\n    return res.data;\n  }).catch(error => {\n    console.log('images#micropost', error);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/image.js"],"names":["axios","presignedObject","avatar","micropost","fetchPresigned","fileName","get","withCredentials","then","res","console","log","data","catch","error","postS3","params","post","presignedObjectUrl","formData","headers","fileType","postAvatarImage","avatarUrl","postMicropostImage","micropostUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,SAAnD,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAC1C,SAAOL,KAAK,CAACM,GAAN,CAAUL,eAAe,CAACI,QAAD,CAAzB,EAAqC;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAArC,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,KAAvC;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,SAAOhB,KAAK,CAACiB,IAAN,CAAWD,MAAM,CAACE,kBAAlB,EACLF,MAAM,CAACG,QADF,EAEL;AAAEC,IAAAA,OAAO,EAAE;AAAE,sBAAgBJ,MAAM,CAACK;AAAzB;AAAX,GAFK,EAIJb,IAJI,CAICC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,GAAlB;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAPI,EAQJC,KARI,CAQEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBG,KAAlB;AACD,GAVI,CAAP;AAWD,CAbM,C,CAeP;;AACA,OAAO,MAAMQ,eAAe,GAAIN,MAAD,IAAY;AACzC,SAAOhB,KAAK,CAACiB,IAAN,CAAWf,MAAX,EAAmB;AACxBqB,IAAAA,SAAS,EAAEP,MAAM,CAACO;AADM,GAAnB,EAEJ;AACDhB,IAAAA,eAAe,EAAE;AADhB,GAFI,EAKJC,IALI,CAKCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GARI,EASJC,KATI,CASEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACD,GAXI,CAAP;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMU,kBAAkB,GAAIR,MAAD,IAAY;AAC5C,SAAOhB,KAAK,CAACiB,IAAN,CAAWd,SAAX,EAAsB;AAC3BsB,IAAAA,YAAY,EAAET,MAAM,CAACS;AADM,GAAtB,EAEJ;AACDlB,IAAAA,eAAe,EAAE;AADhB,GAFI,EAKJC,IALI,CAKCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GARI,EASJC,KATI,CASEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,KAAhC;AACD,GAXI,CAAP;AAYD,CAbM","sourcesContent":["import axios from \"axios\";\nimport { presignedObject, avatar, micropost } from \"../urls\";\n\n// 署名URLを取得するするapi\nexport const fetchPresigned = (fileName) => {\n  return axios.get(presignedObject(fileName), { withCredentials: true })\n    .then(res => {\n      console.log('images#presigned_object', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('images#presigned_object', error);\n    });\n}\n\n// S3にアップロードするapi\nexport const postS3 = (params) => {\n  console.log(params)\n  return axios.post(params.presignedObjectUrl,\n    params.formData,\n    { headers: { 'Content-Type': params.fileType } },\n  )\n    .then(res => {\n      console.log('S3', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('S3', error);\n    })\n}\n\n// Avata画像を登録するapi\nexport const postAvatarImage = (params) => {\n  return axios.post(avatar, {\n    avatarUrl: params.avatarUrl\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('images#avatar', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('images#avatar', error);\n    })\n}\n\n// 投稿画像を登録するapi\nexport const postMicropostImage = (params) => {\n  return axios.post(micropost, {\n    micropostUrl: params.micropostUrl\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('images#micropost', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('images#micropost', error);\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}