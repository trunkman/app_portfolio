{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // styles\n// import Grid from \"@mui/material/Grid\";\n\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // コンポーネント\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Diary = () => {\n  _s();\n\n  const [diary, setDiary] = useState(null);\n  const [open, setOpen] = useState(true); // 日記Dialogを開閉する関数群\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const diaries = [{\n    title: data.feeling,\n    start: \"2021-11-9\"\n  }];\n\n  const handleClick = () => {\n    postDiary().then(data => {\n      setDiary({\n        title: data.feeling,\n        start: \"2021-11-10\"\n      });\n      diaries << diary;\n    });\n  };\n\n  useEffect(() => {\n    handleClick();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\" // locale=\"ja\"\n      ,\n      events: diaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"inherit\",\n      onClick: () => handleOpen,\n      children: \"\\u8A18\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Diary, \"8xrh2vTHEA9Lj6eWT7w9TzGUQis=\");\n\n_c = Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx"],"names":["React","useEffect","useState","Button","FullCalendar","dayGridPlugin","DiaryDialog","Diary","diary","setDiary","open","setOpen","handleOpen","handleClose","diaries","title","data","feeling","start","handleClick","postDiary","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC,CAFyB,CAGzB;;AACA,QAAMU,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AAEA,QAAMG,OAAO,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAEC,IAAI,CAACC,OAAd;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAAD,CAAhB;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,SAAS,GACNC,IADH,CACQL,IAAI,IAAI;AACZP,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAEC,IAAI,CAACC,OADL;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAIAJ,MAAAA,OAAO,IAAIN,KAAX;AACD,KAPH;AAQD,GATD;;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAACd,aAAD,CADX;AAEE,MAAA,WAAW,EAAC,cAFd,CAGE;AAHF;AAIE,MAAA,MAAM,EAAES;AAJV;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAMF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,WAAW,EAAEG;AAFf;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAkBD,CAzCM;;GAAMN,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// styles\n// import Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\n// コンポーネント\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\n\nexport const Diary = () => {\n  const [diary, setDiary] = useState(null)\n  const [open, setOpen] = useState(true)\n  // 日記Dialogを開閉する関数群\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n\n  const diaries = [{ title: data.feeling, start: \"2021-11-9\" }]\n  const handleClick = () => {\n    postDiary()\n      .then(data => {\n        setDiary({\n          title: data.feeling,\n          start: \"2021-11-10\",\n        })\n        diaries << diary\n      })\n  }\n\n  useEffect(() => {\n    handleClick()\n  }, [])\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        // locale=\"ja\"\n        events={diaries}\n      />\n\n      <Button variant=\"inherit\" onClick={() => handleOpen}>\n        記録する\n      </Button>\n      <DiaryDialog\n        open={open}\n        handleClose={handleClose}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}