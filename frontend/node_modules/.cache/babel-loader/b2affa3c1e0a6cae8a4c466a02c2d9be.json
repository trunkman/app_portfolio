{"ast":null,"code":"import axios from \"axios\";\nimport { rooms, roomPath } from \"../urls\"; // ルームのメッセージを表示するapi\n\nexport const fetchMessages = params => {\n  return axios({\n    method: 'get',\n    baseURL: roomPath(params.roomId),\n    data: {\n      room: {\n        id: params.roomId\n      }\n    },\n    withCredentials: true\n  }).then(res => {\n    console.log('rooms#show', res);\n    return res.data;\n  }).catch(error => {\n    console.log('rooms#show', error);\n  });\n}; // メッセージルームを作成するapi\n\nexport const postRoom = params => {\n  return axios.post(rooms, {\n    room: {\n      user_id: params.userId\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    if (res.data) {\n      console.log('room#create', res);\n      return res.data;\n    }\n  }).catch(error => {\n    console.log('room#create', error);\n  });\n}; // メッセージルームを削除するapi\n// export const deletePost = (roomId) => {\n//   return axios.delete(roomPath(roomId), { withCredentials: true })\n//     .then(res => {\n//       console.log('room#destroy', res)\n//       alert('投稿を削除しました')\n//       return res.data\n//     })\n//     .catch(error => {\n//       console.log('room#destroy', error)\n//     })\n// }","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/rooms.js"],"names":["axios","rooms","roomPath","fetchMessages","params","method","baseURL","roomId","data","room","id","withCredentials","then","res","console","log","catch","error","postRoom","post","user_id","userId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,SAAhC,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACvC,SAAOJ,KAAK,CAAC;AACXK,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,OAAO,EAAEJ,QAAQ,CAACE,MAAM,CAACG,MAAR,CAFN;AAGXC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEN,MAAM,CAACG;AAAb;AAAR,KAHK;AAIXI,IAAAA,eAAe,EAAE;AAJN,GAAD,CAAL,CAKJC,IALI,CAKCC,GAAG,IAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACA,WAAOA,GAAG,CAACL,IAAX;AACD,GARM,EAQJQ,KARI,CAQEC,KAAK,IAAI;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAA1B;AACD,GAVM,CAAP;AAWD,CAZM,C,CAcP;;AACA,OAAO,MAAMC,QAAQ,GAAId,MAAD,IAAY;AAClC,SAAOJ,KAAK,CAACmB,IAAN,CAAWlB,KAAX,EAAkB;AACvBQ,IAAAA,IAAI,EAAE;AAAEW,MAAAA,OAAO,EAAEhB,MAAM,CAACiB;AAAlB;AADiB,GAAlB,EAGL;AAAEV,IAAAA,eAAe,EAAE;AAAnB,GAHK,EAKJC,IALI,CAKCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACL,IAAR,EAAc;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,aAAOA,GAAG,CAACL,IAAX;AACD;AACF,GAVI,EAWJQ,KAXI,CAWEC,KAAK,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,KAA3B;AACD,GAbI,CAAP;AAcD,CAfM,C,CAiBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { rooms, roomPath } from \"../urls\";\n\n// ルームのメッセージを表示するapi\nexport const fetchMessages = (params) => {\n  return axios({\n    method: 'get',\n    baseURL: roomPath(params.roomId),\n    data: { room: { id: params.roomId } },\n    withCredentials: true,\n  }).then(res => {\n    console.log('rooms#show', res)\n    return res.data\n  }).catch(error => {\n    console.log('rooms#show', error)\n  })\n}\n\n// メッセージルームを作成するapi\nexport const postRoom = (params) => {\n  return axios.post(rooms, {\n    room: { user_id: params.userId }\n  },\n    { withCredentials: true }\n  )\n    .then(res => {\n      if (res.data) {\n        console.log('room#create', res);\n        return res.data;\n      }\n    })\n    .catch(error => {\n      console.log('room#create', error)\n    })\n}\n\n// メッセージルームを削除するapi\n\n// export const deletePost = (roomId) => {\n//   return axios.delete(roomPath(roomId), { withCredentials: true })\n//     .then(res => {\n//       console.log('room#destroy', res)\n//       alert('投稿を削除しました')\n//       return res.data\n//     })\n//     .catch(error => {\n//       console.log('room#destroy', error)\n//     })\n// }\n"]},"metadata":{},"sourceType":"module"}