{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Users/Following.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // styled\n\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { fetchFollowing } from \"../../apis/users\"; // コンポーネント\n\nimport { RoomButton } from \"../Buttons/RoomButton\";\nimport { FollowButton } from \"../Buttons/FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Following = props => {\n  _s();\n\n  const userId = props.userId;\n  const history = useHistory();\n  const [following, setFollowing] = useState([]);\n\n  const PageTransition = followingUserId => {\n    history.push(`/users/${followingUserId}`);\n  }; // 投稿一覧を取得する\n\n\n  useEffect(() => {\n    fetchFollowing({\n      userId: userId\n    }).then(data => {\n      setFollowing(data.users);\n    });\n    return () => setFollowing([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: following.map(user => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 2,\n          border: 0.1,\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => PageTransition(user.id),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n              sx: {\n                fontSize: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: user.name,\n            secondary: \"Following:\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u5185\\u5BB9\\u304C\\u8A18\\u8F09\\u3055\\u308C\\u307E\\u3059\\u3002\\u3068\\u308A\\u3042\\u3048\\u305A\\u4EEE\\u30C6\\u30AD\\u30B9\\u30C8\\u3092\\u5165\\u529B\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(RoomButton, {\n          userId: user.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FollowButton, {\n          userId: user.id,\n          followStatus: followStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Following, \"7xjEGP1SvaiVaoAxnQujxbYTgvY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Users/Following.jsx"],"names":["React","useState","useEffect","useHistory","List","ListItem","ListItemAvatar","ListItemText","Box","AccountCircle","fetchFollowing","RoomButton","FollowButton","Following","props","userId","history","following","setFollowing","PageTransition","followingUserId","push","then","data","users","map","user","my","border","borderRadius","id","fontSize","name","followStatus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkB,cAAc,GAAIC,eAAD,IAAqB;AAC1CJ,IAAAA,OAAO,CAACK,IAAR,CAAc,UAASD,eAAgB,EAAvC;AACD,GAFD,CALkC,CASlC;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc,CAAC;AAAEK,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAd,CACGO,IADH,CACQC,IAAI,IAAI;AACZL,MAAAA,YAAY,CAACK,IAAI,CAACC,KAAN,CAAZ;AACD,KAHH;AAIA,WAAO,MAAMN,YAAY,CAAC,EAAD,CAAzB;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBAEID,SAAS,CAACQ,GAAV,CAAcC,IAAI,iBAChB,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AACPC,UAAAA,EAAE,EAAE,CADG;AAEPC,UAAAA,MAAM,EAAE,GAFD;AAGPC,UAAAA,YAAY,EAAE;AAHP,SAAT;AAAA,gCAKE,QAAC,QAAD;AACE,UAAA,MAAM,MADR;AAGE,UAAA,OAAO,EAAE,MAAMV,cAAc,CAACO,IAAI,CAACI,EAAN,CAH/B;AAAA,kCAKE,QAAC,cAAD;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,EAAE,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eAQE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEL,IAAI,CAACM,IADhB;AAEE,YAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WAEON,IAAI,CAACI,EAFZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAkBE,QAAC,UAAD;AACE,UAAA,MAAM,EAAEJ,IAAI,CAACI;AADf;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAqBE,QAAC,YAAD;AACE,UAAA,MAAM,EAAEJ,IAAI,CAACI,EADf;AAEE,UAAA,YAAY,EAAEG;AAFhB;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqCD,CAvDM;;GAAMpB,S;UAEKV,U;;;KAFLU,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// styled\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { fetchFollowing } from \"../../apis/users\";\n// コンポーネント\nimport { RoomButton } from \"../Buttons/RoomButton\";\nimport { FollowButton } from \"../Buttons/FollowButton\";\n\nexport const Following = (props) => {\n  const userId = props.userId\n  const history = useHistory()\n  const [following, setFollowing] = useState([])\n\n  const PageTransition = (followingUserId) => {\n    history.push(`/users/${followingUserId}`)\n  }\n\n  // 投稿一覧を取得する\n  useEffect(() => {\n    fetchFollowing({ userId: userId })\n      .then(data => {\n        setFollowing(data.users)\n      })\n    return () => setFollowing([])\n  }, [])\n\n  return (\n    <>\n      <h2>フォロー中</h2>\n      <List>\n        {\n          following.map(user =>\n            <Box sx={{\n              my: 2,\n              border: 0.1,\n              borderRadius: '8px',\n            }}>\n              <ListItem\n                button\n                key={user.id}\n                onClick={() => PageTransition(user.id)}\n              >\n                <ListItemAvatar>\n                  <AccountCircle sx={{ fontSize: 60 }} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={user.name}\n                  secondary='Following:ユーザーのプロフィール内容が記載されます。とりあえず仮テキストを入力しています。'\n                />\n              </ListItem>\n              <RoomButton\n                userId={user.id}\n              />\n              <FollowButton\n                userId={user.id}\n                followStatus={followStatus}\n              />\n            </Box>\n          )\n        }\n      </List>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}