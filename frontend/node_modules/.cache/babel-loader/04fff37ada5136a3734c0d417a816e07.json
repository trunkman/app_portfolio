{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from '../App'; // Style\n\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport IconButton from \"@mui/material/IconButton\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { deleteMicropost } from \"../../apis/microposts\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost,\n  user\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  const handleClose = () => dialogDispatch({\n    type: 'close'\n  }); // 投稿を削除する\n\n\n  const deleteSubmit = () => {\n    deleteMicropost(micropost.id);\n    handleClose();\n    alert('投稿を削除しました');\n    history.push(`/users/${loginUser.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        borderTop: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        onClick: () => dialogDispatch({\n          type: 'micropost'\n        }),\n        sx: {\n          py: 3,\n          pl: 3,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", user.name, \" \\u3055\\u3093 \\u3011 \", micropost.created_at.substr(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              mt: 2\n            },\n            children: micropost.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => dialogDispatch({\n          type: 'delete'\n        }),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n        loginUserId: loginUser.id,\n        micropostId: micropost.id,\n        Status: likeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        commentCount: commentCount,\n        loginUserId: loginUser.id,\n        micropostId: micropost.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, micropost.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n      handleClose: handleClose,\n      micropost: micropost,\n      open: dialogState.micropost,\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: handleClose,\n      handleDelete: deleteSubmit,\n      message: '投稿を削除',\n      open: dialogState.delete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Micropost, \"Y2hFqwopPW6pzOVIliz/eC9oroU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Micropost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Micropost\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx"],"names":["React","useState","useHistory","AuthContext","Box","Typography","ListItem","ListItemAvatar","IconButton","AccountCircle","DeleteOutlinedIcon","deleteMicropost","dialogReducer","dialogInitialState","LikeButton","CommentButton","DeleteDialog","Micropost","commentCount","likeStatus","loginUser","micropost","user","history","dialogState","dialogDispatch","useReducer","handleClose","type","deleteSubmit","id","alert","push","display","alignItems","borderTop","fontSize","py","pl","flexGrow","name","created_at","substr","replace","letterSpacing","mt","content","user_id","toString","userName","delete"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from '../App';\n// Style\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport IconButton from \"@mui/material/IconButton\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { deleteMicropost } from \"../../apis/microposts\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// Component\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\"\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\n\n\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost,\n  user,\n}) => {\n  const history = useHistory();\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  // 投稿を削除する\n  const deleteSubmit = () => {\n    deleteMicropost(micropost.id)\n    handleClose()\n    alert('投稿を削除しました')\n    history.push(`/users/${loginUser.id}`)\n  }\n\n  return (\n    <>\n      <ListItem\n        key={micropost.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          borderTop: 0.2,\n        }}>\n        <ListItemAvatar>\n          <AccountCircle sx={{ fontSize: 35 }} />\n        </ListItemAvatar>\n        <Box\n          onClick={() => dialogDispatch({ type: 'micropost' })}\n          sx={{ py: 3, pl: 3, flexGrow: 1 }}\n        >\n          <Typography>\n            【 {user.name} さん 】 {micropost.created_at.substr(0, 19).replace('T', ' ')}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, mt: 2 }}>{micropost.content}</Box>\n          </Typography>\n        </Box>\n        {loginUser.id === micropost.user_id && (\n          <IconButton onClick={() => dialogDispatch({ type: 'delete' })}>\n            <DeleteOutlinedIcon />\n          </IconButton>\n        )}\n        <LikeButton\n          loginUserId={loginUser.id}\n          micropostId={micropost.id}\n          Status={likeStatus}\n        />\n        <CommentButton\n          commentCount={commentCount}\n          loginUserId={loginUser.id}\n          micropostId={micropost.id}\n        />\n      </ListItem >\n\n      <MicropostDialog\n        handleClose={handleClose}\n        micropost={micropost}\n        open={dialogState.micropost}\n        userName={userName}\n      />\n      <DeleteDialog\n        handleClose={handleClose}\n        handleDelete={deleteSubmit}\n        message={'投稿を削除'}\n        open={dialogState.delete}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}