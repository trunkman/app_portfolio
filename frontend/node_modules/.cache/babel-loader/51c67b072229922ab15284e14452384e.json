{"ast":null,"code":"export const notificationInitialState = {\n  fetchState: 'initial',\n  notifications: [],\n  checkAll: false,\n  checkMessage: false\n};\nexport const notificationReducer = (state, action) => {\n  switch (action.type) {\n    case 'open/fetching':\n      return { ...state,\n        fetchState: 'loading'\n      };\n\n    case 'fetchSuccess':\n      return {\n        fetchState: 'ok',\n        notifications: action.payload\n      };\n\n    case 'close':\n      return { ...state,\n        fetchState: 'initial'\n      };\n\n    case 'check':\n      return { ...state,\n        checkAll: action.payload.checkAll,\n        checkMessage: action.payload.checkMessage\n      };\n\n    case 'checkedMessage':\n      return { ...state,\n        checkMessage: false\n      };\n\n    case 'checkedAll':\n      return { ...state,\n        checkAll: false\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/NotificationReducer.jsx"],"names":["notificationInitialState","fetchState","notifications","checkAll","checkMessage","notificationReducer","state","action","type","payload","Error"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG;AACtCC,EAAAA,UAAU,EAAE,SAD0B;AAEtCC,EAAAA,aAAa,EAAE,EAFuB;AAGtCC,EAAAA,QAAQ,EAAE,KAH4B;AAItCC,EAAAA,YAAY,EAAE;AAJwB,CAAjC;AAOP,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO;AACLA,QAAAA,UAAU,EAAE,IADP;AAELC,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QAFpB;AAGLC,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHxB,OAAP;;AAKF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,YAAY,EAAE;AAFT,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELH,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF;AACE,YAAM,IAAIO,KAAJ,EAAN;AAjCJ;AAmCD,CApCM","sourcesContent":["export const notificationInitialState = {\n  fetchState: 'initial',\n  notifications: [],\n  checkAll: false,\n  checkMessage: false,\n}\n\nexport const notificationReducer = (state, action) => {\n  switch (action.type) {\n    case 'open/fetching':\n      return {\n        ...state,\n        fetchState: 'loading',\n      };\n    case 'fetchSuccess':\n      return {\n        fetchState: 'ok',\n        notifications: action.payload,\n      };\n    case 'close':\n      return {\n        ...state,\n        fetchState: 'initial',\n      };\n    case 'check':\n      return {\n        ...state,\n        checkAll: action.payload.checkAll,\n        checkMessage: action.payload.checkMessage,\n      };\n    case 'checkedMessage':\n      return {\n        ...state,\n        checkMessage: false,\n      };\n    case 'checkedAll':\n      return {\n        ...state,\n        checkAll: false,\n      };\n    default:\n      throw new Error();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}