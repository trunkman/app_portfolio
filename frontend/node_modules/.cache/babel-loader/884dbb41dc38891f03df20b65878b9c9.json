{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Style\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from \"@mui/material/Typography\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { fetchRooms } from \"../../apis/users\";\nimport { deleteRoom } from \"../../apis/rooms\"; // Reducer\n\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer'; // Component\n\nimport { Loading } from '../../components/Loading';\nimport { DeleteDialog } from \"../../components/Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 600,\n    mx: 'auto',\n    textAlign: 'center',\n    width: '100%'\n  }\n}));\nexport const Rooms = ({\n  userId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState); // 削除確認ダイアログの開閉\n\n  const [open, setOpen] = useState({\n    isOpen: false,\n    roomId: ''\n  }); // トークルームの一覧を取得する\n\n  const Rooms = () => {\n    fetchRooms(userId).then(data => {\n      roomDispatch({\n        type: 'fetchSuccess',\n        payload: data.entries\n      });\n    });\n  }; // トークルームを削除する\n\n\n  const handleDelete = () => {\n    deleteRoom(open.roomId).then(() => setOpen({\n      isOpen: false\n    }));\n  };\n\n  useEffect(() => {\n    Rooms();\n  }, [open.isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            letterSpacing: 10,\n            pb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"\\u30C8\\u30FC\\u30AF\\u30EB\\u30FC\\u30E0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), roomState.fetchState !== 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: [roomState.entries.length === 0 && /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"\\u30C8\\u30FC\\u30AF\\u3057\\u3066\\u3044\\u308B\\u4EBA\\u306F\\u3044\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), roomState.entries.length !== 0 && roomState.entries.map(entry => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 2,\n            my: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n              sx: {\n                fontSize: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => history.push(`/talk_rooms/${entry.room_id}`),\n            sx: {\n              py: 3,\n              pl: 3,\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  letterSpacing: 2\n                },\n                children: [entry.other_user.name, \" \\u3055\\u3093\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    letterSpacing: 2,\n                    mt: 2\n                  },\n                  children: entry.other_user.profile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => setOpen({\n              isOpen: true,\n              roomId: entry.room_id\n            }),\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, entry.room_id.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: () => setOpen({\n        isOpen: false\n      }),\n      handleDelete: handleDelete,\n      message: 'トークルームを削除',\n      open: open.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Rooms, \"hIO0K/jJSgOGNZgI+r8vil64VnE=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx"],"names":["React","useEffect","useReducer","useState","useHistory","Box","Button","List","ListItem","ListItemAvatar","ListItemText","ListItemButton","makeStyles","Typography","AccountCircle","DeleteOutlinedIcon","fetchRooms","deleteRoom","roomInitialState","roomReducer","Loading","DeleteDialog","useStyles","root","alignItems","flexDirection","flexWrap","justifyContent","maxWidth","mx","textAlign","width","Rooms","userId","classes","history","roomState","roomDispatch","open","setOpen","isOpen","roomId","then","data","type","payload","entries","handleDelete","letterSpacing","pb","fetchState","length","map","entry","display","borderRadius","my","fontSize","push","room_id","py","pl","flexGrow","other_user","name","mt","profile","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,kBAAP,MAA+B,oCAA/B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,2BAA9C,C,CACA;;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,YAAT,QAA6B,uCAA7B;;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC,OAAO;AAClCW,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,QAAQ,EAAE,GALN;AAMJC,IAAAA,EAAE,EAAE,MANA;AAOJC,IAAAA,SAAS,EAAE,QAPP;AAQJC,IAAAA,KAAK,EAAE;AARH;AAD4B,CAAP,CAAD,CAA5B;AAaA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACnC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,OAAO,GAAG/B,UAAU,EAA1B;AACA,QAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BnC,UAAU,CAACiB,WAAD,EAAcD,gBAAd,CAA5C,CAHmC,CAInC;;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC;AAC/BqC,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,MAAM,EAAE;AAFuB,GAAD,CAAhC,CALmC,CASnC;;AACA,QAAMT,KAAK,GAAG,MAAM;AAClBhB,IAAAA,UAAU,CAACiB,MAAD,CAAV,CACGS,IADH,CACQC,IAAI,IAAI;AACZN,MAAAA,YAAY,CAAC;AACXO,QAAAA,IAAI,EAAE,cADK;AAEXC,QAAAA,OAAO,EAAEF,IAAI,CAACG;AAFH,OAAD,CAAZ;AAID,KANH;AAOD,GARD,CAVmC,CAmBnC;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB9B,IAAAA,UAAU,CAACqB,IAAI,CAACG,MAAN,CAAV,CACGC,IADH,CACQ,MAAMH,OAAO,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CADrB;AAED,GAHD;;AAKAvC,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACM,IAAI,CAACE,MAAN,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACX,IAAxB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEyB,YAAAA,aAAa,EAAE,EAAjB;AAAqBC,YAAAA,EAAE,EAAE;AAAzB,WAAT;AAAA,iCAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAKGb,SAAS,CAACc,UAAV,KAAyB,IAAzB,gBAAgC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAhC,gBACC,QAAC,IAAD;AAAA,mBACGd,SAAS,CAACU,OAAV,CAAkBK,MAAlB,KAA6B,CAA7B,iBACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAMGf,SAAS,CAACU,OAAV,CAAkBK,MAAlB,KAA6B,CAA7B,IACCf,SAAS,CAACU,OAAV,CAAkBM,GAAlB,CAAsBC,KAAK,iBACzB,QAAC,QAAD;AAEE,UAAA,EAAE,EAAE;AACFC,YAAAA,OAAO,EAAE,MADP;AAEF9B,YAAAA,UAAU,EAAE,QAFV;AAGF+B,YAAAA,YAAY,EAAE,CAHZ;AAIFC,YAAAA,EAAE,EAAE;AAJF,WAFN;AAAA,kCAQE,QAAC,cAAD;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,EAAE,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE,QAAC,GAAD;AACE,YAAA,OAAO,EAAE,MAAMtB,OAAO,CAACuB,IAAR,CAAc,eAAcL,KAAK,CAACM,OAAQ,EAA1C,CADjB;AAEE,YAAA,EAAE,EAAE;AACFC,cAAAA,EAAE,EAAE,CADF;AAEFC,cAAAA,EAAE,EAAE,CAFF;AAGFC,cAAAA,QAAQ,EAAE;AAHR,aAFN;AAAA,mCAQE,QAAC,YAAD;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAyB,gBAAA,EAAE,EAAE;AAAEd,kBAAAA,aAAa,EAAE;AAAjB,iBAA7B;AAAA,2BACGK,KAAK,CAACU,UAAN,CAAiBC,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE;AAAEhB,oBAAAA,aAAa,EAAE,CAAjB;AAAoBiB,oBAAAA,EAAE,EAAE;AAAxB,mBAAT;AAAA,4BAAuCZ,KAAK,CAACU,UAAN,CAAiBG;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,kBAXF,eA4BE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAE,MAAM3B,OAAO,CAAC;AAAEC,cAAAA,MAAM,EAAE,IAAV;AAAgBC,cAAAA,MAAM,EAAEY,KAAK,CAACM;AAA9B,aAAD,CAAtC;AAAA,mCACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA,WACON,KAAK,CAACM,OAAN,CAAcQ,QAAd,EADP;AAAA;AAAA;AAAA;AAAA,gBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqDE,QAAC,YAAD;AACE,MAAA,WAAW,EAAE,MAAM5B,OAAO,CAAC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAD,CAD5B;AAEE,MAAA,YAAY,EAAEO,YAFhB;AAGE,MAAA,OAAO,EAAE,WAHX;AAIE,MAAA,IAAI,EAAET,IAAI,CAACE;AAJb;AAAA;AAAA;AAAA;AAAA,YArDF;AAAA,kBADF;AA8DD,CA3FM;;GAAMR,K;UACKV,S,EACAlB,U;;;KAFL4B,K","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { fetchRooms } from \"../../apis/users\";\nimport { deleteRoom } from \"../../apis/rooms\";\n// Reducer\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\n// Component\nimport { Loading } from '../../components/Loading';\nimport { DeleteDialog } from \"../../components/Dialogs/DeleteDialog\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    maxWidth: 600,\n    mx: 'auto',\n    textAlign: 'center',\n    width: '100%',\n  },\n}));\n\nexport const Rooms = ({ userId }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState);\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    roomId: '',\n  });\n  // トークルームの一覧を取得する\n  const Rooms = () => {\n    fetchRooms(userId)\n      .then(data => {\n        roomDispatch({\n          type: 'fetchSuccess',\n          payload: data.entries,\n        });\n      });\n  }\n  // トークルームを削除する\n  const handleDelete = () => {\n    deleteRoom(open.roomId)\n      .then(() => setOpen({ isOpen: false }));\n  }\n\n  useEffect(() => {\n    Rooms();\n  }, [open.isOpen])\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Typography variant=\"h3\">\n          <Box sx={{ letterSpacing: 10, pb: 2 }}><b>トークルーム</b></Box>\n        </Typography>\n\n        {roomState.fetchState !== 'ok' ? <Loading /> :\n          <List>\n            {roomState.entries.length === 0 &&\n              <ListItemText>\n                トークしている人はいません。\n              </ListItemText>\n            }\n            {roomState.entries.length !== 0 &&\n              roomState.entries.map(entry =>\n                <ListItem\n                  key={entry.room_id.toString()}\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    borderRadius: 2,\n                    my: 3,\n                  }}>\n                  <ListItemAvatar>\n                    <AccountCircle sx={{ fontSize: 60 }} />\n                  </ListItemAvatar>\n                  <Box\n                    onClick={() => history.push(`/talk_rooms/${entry.room_id}`)}\n                    sx={{\n                      py: 3,\n                      pl: 3,\n                      flexGrow: 1,\n                    }}\n                  >\n                    <ListItemText>\n                      <Typography variant=\"h5\" sx={{ letterSpacing: 2 }}>\n                        {entry.other_user.name} さん\n                      </Typography>\n                      <Typography variant=\"h6\" >\n                        <Box sx={{ letterSpacing: 2, mt: 2 }}>{entry.other_user.profile}</Box>\n                      </Typography>\n                    </ListItemText>\n                  </Box>\n                  <ListItemButton onClick={() => setOpen({ isOpen: true, roomId: entry.room_id })}>\n                    <DeleteOutlinedIcon />\n                  </ListItemButton>\n                </ListItem>\n              )\n            }\n          </List>\n        }\n      </Box>\n\n      <DeleteDialog\n        handleClose={() => setOpen({ isOpen: false })}\n        handleDelete={handleDelete}\n        message={'トークルームを削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}