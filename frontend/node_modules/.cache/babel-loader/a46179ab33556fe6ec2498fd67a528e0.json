{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/ImageButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Style\n\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"; // Api\n\nimport { fetchPresigned, postS3, postAvatarImage } from \"../../apis/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  'button': {\n    background: '#444',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    marginLeft: 8,\n    padding: '15px 20px'\n  }\n}));\nexport const ImageButton = props => {\n  _s();\n\n  const classes = useStyles();\n\n  async function handleChange(e) {\n    const file = e.target.files[0];\n    const resData = fetchPresigned(file.name);\n    const data = await resData; // 対象の書名付きURLを取得する\n    // S3にPOSTする form に持たせるデータを生成する\n\n    const formData = new FormData();\n\n    for (let key in data.fields) {\n      formData.append(key, data.fields[key]);\n    }\n\n    formData.append('file', file); // S3に画像をアップロード\n\n    const ret = await postS3({\n      presignedObjectUrl: data.url,\n      formData: formData\n    });\n    const matchedObject = await ret.match(/<Location>(.*?)<\\/Location>/);\n    const s3Url = await unescape(matchedObject[1]); // DBに画像URLを登録\n\n    console.log(s3Url); // postAvatarImage({ avatarUrl: s3Url });\n  } // const handleChange = e => {\n  //   const file = e.target.files[0];\n  //   // 対象の書名付きURLを取得する\n  //   fetchPresigned(file.name)\n  //     // S3にPOSTする form に持たせるデータを生成する\n  //     .then(data => {\n  //       const formData = new FormData();\n  //       for (let key in data.fields) {\n  //         formData.append(key, data.fields[key]);\n  //       }\n  //       formData.append('file', file)\n  //       // S3に画像をアップロード\n  //       postS3({\n  //         presignedObjectUrl: data.url,\n  //         formData: formData,\n  //       })\n  //         .then(data => {\n  //           const matchedObject = data.match(/<Location>(.*?)<\\/Location>/);\n  //           const s3Url = unescape(matchedObject[1]);\n  //           // DBに画像URLを登録\n  //           console.log(s3Url)\n  //           // postAvatarImage({ avatarUrl: s3Url });\n  //         })\n  //     })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"span\",\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        id: \"upload-file\",\n        type: \"file\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ImageButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImageButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/ImageButton.jsx"],"names":["React","Button","createStyles","makeStyles","fetchPresigned","postS3","postAvatarImage","useStyles","background","border","borderRadius","color","height","marginLeft","padding","ImageButton","props","classes","handleChange","e","file","target","files","resData","name","data","formData","FormData","key","fields","append","ret","presignedObjectUrl","url","matchedObject","match","s3Url","unescape","console","log","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,MAAzB,EAAiCC,eAAjC,QAAwD,kBAAxD;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,MAC3BD,YAAY,CAAC;AACX,YAAU;AACRM,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,MAAM,EAAE,CAFA;AAGRC,IAAAA,YAAY,EAAE,CAHN;AAIRC,IAAAA,KAAK,EAAE,OAJC;AAKRC,IAAAA,MAAM,EAAE,EALA;AAMRC,IAAAA,UAAU,EAAE,CANJ;AAORC,IAAAA,OAAO,EAAE;AAPD;AADC,CAAD,CADc,CAA5B;AAcA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,OAAO,GAAGnB,cAAc,CAACgB,IAAI,CAACI,IAAN,CAA9B;AACA,UAAMC,IAAI,GAAG,MAAMF,OAAnB,CAH6B,CAI7B;AACA;;AACA,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,SAAK,IAAIC,GAAT,IAAgBH,IAAI,CAACI,MAArB,EAA6B;AAC3BH,MAAAA,QAAQ,CAACI,MAAT,CAAgBF,GAAhB,EAAqBH,IAAI,CAACI,MAAL,CAAYD,GAAZ,CAArB;AACD;;AACDF,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBV,IAAxB,EAV6B,CAW7B;;AACA,UAAMW,GAAG,GAAG,MAAM1B,MAAM,CAAC;AACvB2B,MAAAA,kBAAkB,EAAEP,IAAI,CAACQ,GADF;AAEvBP,MAAAA,QAAQ,EAAEA;AAFa,KAAD,CAAxB;AAIA,UAAMQ,aAAa,GAAG,MAAMH,GAAG,CAACI,KAAJ,CAAU,6BAAV,CAA5B;AACA,UAAMC,KAAK,GAAG,MAAMC,QAAQ,CAACH,aAAa,CAAC,CAAD,CAAd,CAA5B,CAjB6B,CAkB7B;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAnB6B,CAoB7B;AACD,GAxBmC,CA0BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,SAAS,EAAEnB,OAAO,CAACuB,MAHrB;AAAA,6BAKE;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,EAAE,EAAC,aAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAErB,CAAC,IAAID,YAAY,CAACC,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CArEM;;GAAMJ,W;UACKR,S;;;KADLQ,W","sourcesContent":["import React from \"react\";\n// Style\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// Api\nimport { fetchPresigned, postS3, postAvatarImage } from \"../../apis/image\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'button': {\n      background: '#444',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      marginLeft: 8,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const ImageButton = (props) => {\n  const classes = useStyles();\n\n  async function handleChange(e) {\n    const file = e.target.files[0];\n    const resData = fetchPresigned(file.name)\n    const data = await resData\n    // 対象の書名付きURLを取得する\n    // S3にPOSTする form に持たせるデータを生成する\n    const formData = new FormData();\n    for (let key in data.fields) {\n      formData.append(key, data.fields[key]);\n    }\n    formData.append('file', file)\n    // S3に画像をアップロード\n    const ret = await postS3({\n      presignedObjectUrl: data.url,\n      formData: formData,\n    })\n    const matchedObject = await ret.match(/<Location>(.*?)<\\/Location>/);\n    const s3Url = await unescape(matchedObject[1]);\n    // DBに画像URLを登録\n    console.log(s3Url)\n    // postAvatarImage({ avatarUrl: s3Url });\n  }\n\n  // const handleChange = e => {\n  //   const file = e.target.files[0];\n  //   // 対象の書名付きURLを取得する\n  //   fetchPresigned(file.name)\n  //     // S3にPOSTする form に持たせるデータを生成する\n  //     .then(data => {\n  //       const formData = new FormData();\n  //       for (let key in data.fields) {\n  //         formData.append(key, data.fields[key]);\n  //       }\n  //       formData.append('file', file)\n  //       // S3に画像をアップロード\n  //       postS3({\n  //         presignedObjectUrl: data.url,\n  //         formData: formData,\n  //       })\n  //         .then(data => {\n  //           const matchedObject = data.match(/<Location>(.*?)<\\/Location>/);\n  //           const s3Url = unescape(matchedObject[1]);\n  //           // DBに画像URLを登録\n  //           console.log(s3Url)\n  //           // postAvatarImage({ avatarUrl: s3Url });\n  //         })\n  //     })\n  // }\n\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        component=\"span\"\n        className={classes.button}\n      >\n        <input\n          accept=\"image/*\"\n          id='upload-file'\n          type='file'\n          onChange={e => handleChange(e)}\n        />\n      </Button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}