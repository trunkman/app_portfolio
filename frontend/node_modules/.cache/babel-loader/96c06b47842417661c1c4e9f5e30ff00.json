{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { fetchLoggedIn } from './apis/users'; // コンテイナー\n\nimport { Home } from './containers/Home';\nimport { User } from './containers/User';\nimport { Header } from './containers/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedInStatus, setLoggedInStatus] = useState(\"未ログイン\");\n  const [user, setUser] = useState({}); // ログインのコールバック関数\n\n  const handleLogin = data => {\n    setLoggedInStatus(\"ログイン中\");\n    setUser(data.user);\n  }; // ログアウトのコールバック関数\n\n\n  const handleLogout = () => {\n    setLoggedInStatus(\"未ログイン\");\n    setUser({});\n  }; // ログイン状態を追跡するコールバック関数\n\n\n  const checkLoginStatus = () => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && loggedInStatus === \"未ログイン\") {\n        handleLogin(data);\n      } else if (!data.logged_in && loggedInStatus === \"ログイン中\") {\n        handleLogout();\n      }\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  useEffect(() => {\n    checkLoginStatus();\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          loggedInStatus: loggedInStatus,\n          handleLogin: handleLogin,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            loggedInStatus: loggedInStatus,\n            handleLogin: handleLogin,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/user/:id\",\n          render: ({\n            match\n          }) => /*#__PURE__*/_jsxDEV(User, {\n            match: match,\n            loggedInStatus: loggedInStatus,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TnBT+peZv1nuk3cSmOG6khg8Rpc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Switch","Route","fetchLoggedIn","Home","User","Header","App","loggedInStatus","setLoggedInStatus","user","setUser","handleLogin","data","handleLogout","checkLoginStatus","then","logged_in","catch","e","console","error","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CAEA;;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,OAAD,CAApD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CAHa,CAKb;;AACA,QAAMa,WAAW,GAAIC,IAAD,IAAU;AAC5BJ,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAE,IAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACD,GAHD,CANa,CAWb;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzBL,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD,CAZa,CAkBb;;;AACA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BZ,IAAAA,aAAa,GACVa,IADH,CACSH,IAAD,IAAU;AACd,UAAIA,IAAI,CAACI,SAAL,IAAkBT,cAAc,KAAK,OAAzC,EAAkD;AAChDI,QAAAA,WAAW,CAACC,IAAD,CAAX;AACD,OAFD,MAEO,IAAI,CAACA,IAAI,CAACI,SAAN,IAAmBT,cAAc,KAAK,OAA1C,EAAmD;AACxDM,QAAAA,YAAY;AACb;AACF,KAPH,EAOKI,KAPL,CAOWC,CAAC,IAAI;AAAEC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AAAkB,KAPpC;AAQD,GATD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,gBAAgB;AACjB,GAFQ,CAAT;AAIA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,cAAc,EAAEP,cADlB;AAEE,UAAA,WAAW,EAAEI,WAFf;AAGE,UAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AACE,UAAA,IAAI,EAAC,GADP;AAAA,iCAEE,QAAC,IAAD;AACE,YAAA,cAAc,EAAEN,cADlB;AAEE,YAAA,WAAW,EAAEI,WAFf;AAGE,YAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAkBE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,MAAM,EAAE,CAAC;AAAEQ,YAAAA;AAAF,WAAD,kBACN,QAAC,IAAD;AACE,YAAA,KAAK,EAAEA,KADT;AAEE,YAAA,cAAc,EAAEd,cAFlB;AAGE,YAAA,IAAI,EAAEE;AAHR;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GArEQH,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport { fetchLoggedIn } from './apis/users'\n\n// コンテイナー\nimport { Home } from './containers/Home'\nimport { User } from './containers/User'\nimport { Header } from './containers/Header'\n\nfunction App() {\n\n  const [loggedInStatus, setLoggedInStatus] = useState(\"未ログイン\");\n  const [user, setUser] = useState({});\n\n  // ログインのコールバック関数\n  const handleLogin = (data) => {\n    setLoggedInStatus(\"ログイン中\")\n    setUser(data.user)\n  }\n\n  // ログアウトのコールバック関数\n  const handleLogout = () => {\n    setLoggedInStatus(\"未ログイン\")\n    setUser({})\n  }\n\n\n  // ログイン状態を追跡するコールバック関数\n  const checkLoginStatus = () => {\n    fetchLoggedIn()\n      .then((data) => {\n        if (data.logged_in && loggedInStatus === \"未ログイン\") {\n          handleLogin(data)\n        } else if (!data.logged_in && loggedInStatus === \"ログイン中\") {\n          handleLogout()\n        }\n      }).catch(e => { console.error(e) })\n  }\n\n  useEffect(() => {\n    checkLoginStatus();\n  })\n\n  return (\n    <BrowserRouter>\n      <div>\n        <nav>\n          <Header\n            loggedInStatus={loggedInStatus}\n            handleLogin={handleLogin}\n            handleLogout={handleLogout}\n          />\n        </nav>\n        <Switch>\n          <Route exact\n            path=\"/\">\n            <Home\n              loggedInStatus={loggedInStatus}\n              handleLogin={handleLogin}\n              handleLogout={handleLogout}\n            />\n          </Route>\n        </Switch>\n        <Switch>\n          <Route exact\n            path=\"/user/:id\"\n            render={({ match }) =>\n              <User\n                match={match}\n                loggedInStatus={loggedInStatus}\n                user={user}\n              />\n            }>\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}