{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Following.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; // styled\n\nimport { List, ListItem, ListItemAvatar, ListItemText, Link } from \"@mui/material\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { fetchFollowing } from \"../apis/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Following = props => {\n  _s();\n\n  // const [following, setFollowing] = useState([])\n  // const [title, setTitle] = useState('No title')\n  // // ユーザーのFollowing情報を取得\n  // useEffect(() => {\n  //   fetchFollowing({ userId: props.user.id })\n  //     .then(data => {\n  //       setFollowing(data.users)\n  //       setTitle(data.title)\n  //     })\n  // }, [])\n  // return (\n  //   <Fragment>\n  //     <h2>{title}</h2>\n  //     <List sx={{ bgcolor: 'background.paper' }}>\n  //       {\n  //         following.map(user =>\n  //           <ListItem\n  //             button\n  //             component={Link}\n  //             divider\n  //             key={user.id}\n  //             to={`/users/${user.id}`}\n  //           >\n  //             <ListItemAvatar>\n  //               <AccountCircle sx={{ fontSize: 40 }} />\n  //             </ListItemAvatar>\n  //             <ListItemText\n  //               primary={user.name}\n  //               secondary='ユーザーのプロフィール内容が記載されます。とりあえず仮テキストを入力しています。'\n  //             />\n  //           </ListItem >\n  //         )\n  //       }\n  //     </List>\n  //   </Fragment>\n  useEffect(() => {\n    fetchUsers().then(data => {\n      setUsers(data.users);\n    });\n  }, []); // 返り値：ユーザー一覧の画面\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: UsersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Following, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Following.jsx"],"names":["React","Fragment","useEffect","useState","List","ListItem","ListItemAvatar","ListItemText","Link","AccountCircle","fetchFollowing","Following","props","fetchUsers","then","data","setUsers","users","UsersList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,YAAzC,EAAuDC,IAAvD,QAAmE,eAAnE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,GACPC,IADH,CACQC,IAAI,IAAI;AACZC,MAAAA,QAAQ,CAACD,IAAI,CAACE,KAAN,CAAR;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT,CAtCkC,CA6ClC;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApDM;;GAAMP,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n// styled\nimport { List, ListItem, ListItemAvatar, ListItemText, Link } from \"@mui/material\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { fetchFollowing } from \"../apis/users\";\n\nexport const Following = (props) => {\n  // const [following, setFollowing] = useState([])\n  // const [title, setTitle] = useState('No title')\n  // // ユーザーのFollowing情報を取得\n  // useEffect(() => {\n  //   fetchFollowing({ userId: props.user.id })\n  //     .then(data => {\n  //       setFollowing(data.users)\n  //       setTitle(data.title)\n  //     })\n  // }, [])\n\n\n  // return (\n  //   <Fragment>\n  //     <h2>{title}</h2>\n  //     <List sx={{ bgcolor: 'background.paper' }}>\n  //       {\n  //         following.map(user =>\n  //           <ListItem\n  //             button\n  //             component={Link}\n  //             divider\n  //             key={user.id}\n  //             to={`/users/${user.id}`}\n  //           >\n  //             <ListItemAvatar>\n  //               <AccountCircle sx={{ fontSize: 40 }} />\n  //             </ListItemAvatar>\n  //             <ListItemText\n  //               primary={user.name}\n  //               secondary='ユーザーのプロフィール内容が記載されます。とりあえず仮テキストを入力しています。'\n  //             />\n  //           </ListItem >\n  //         )\n  //       }\n  //     </List>\n  //   </Fragment>\n  useEffect(() => {\n    fetchUsers()\n      .then(data => {\n        setUsers(data.users)\n      })\n  }, [])\n\n  // 返り値：ユーザー一覧の画面\n  return (\n    <Fragment>\n      <h1>ユーザー一覧</h1>\n      <ul>{UsersList}</ul>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}