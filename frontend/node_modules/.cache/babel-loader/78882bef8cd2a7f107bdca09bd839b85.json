{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { AuthContext } from \"../../App\"; // styles\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText'; // Components\n\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUpDialog = ({\n  handleClose,\n  handleSubmit\n}) => {\n  _s();\n\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext); // 新規登録ダイアログの内容を返す\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: authState.openSignup,\n    onClose: () => handleClose(),\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u65B0\\u898F\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u4E0B\\u8A18\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u300C\\u767B\\u9332\\u3059\\u308B\\u300D\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        name: authState.name,\n        handleChange: e => authDispatch({\n          type: 'name',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: authState.email,\n        handleChange: e => authDispatch({\n          type: 'email',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        password: authState.password,\n        handleChange: e => authDispatch({\n          type: 'password',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n        passwordConfirmation: authState.passwordConfirmation,\n        handleChange: e => authDispatch({\n          type: 'passwordConfirmation',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClose(),\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleSubmit(),\n        type: \"submit\",\n        children: \"\\u767B\\u9332\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpDialog, \"2/qbOHQTgaGjjZrtfKentzVCvHk=\");\n\n_c = SignUpDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx"],"names":["React","useReducer","useContext","AuthContext","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","Name","Email","Password","PasswordConfirmation","SignUpDialog","handleClose","handleSubmit","authState","authDispatch","openSignup","name","e","type","payload","target","value","email","password","passwordConfirmation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B,C,CACA;;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,oBAAT,QAAqC,+BAArC;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,WAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AAAA;;AACJ,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BhB,UAAU,CAACC,WAAD,CAA9C,CADI,CAGJ;;AACA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEc,SAAS,CAACE,UADlB;AAEE,IAAA,OAAO,EAAE,MAAMJ,WAAW,EAF5B;AAAA,4BAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEE,SAAS,CAACG,IADlB;AAEE,QAAA,YAAY,EAAEC,CAAC,IACbH,YAAY,CAAC;AACXI,UAAAA,IAAI,EAAE,MADK;AAEXC,UAAAA,OAAO,EAAGF,CAAC,CAACG,MAAF,CAASC;AAFR,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cALF,eAcE,QAAC,KAAD;AACE,QAAA,KAAK,EAAER,SAAS,CAACS,KADnB;AAEE,QAAA,YAAY,EAAEL,CAAC,IACbH,YAAY,CAAC;AACXI,UAAAA,IAAI,EAAE,OADK;AAEXC,UAAAA,OAAO,EAAGF,CAAC,CAACG,MAAF,CAASC;AAFR,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAdF,eAuBE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAER,SAAS,CAACU,QADtB;AAEE,QAAA,YAAY,EAAEN,CAAC,IACbH,YAAY,CAAC;AACXI,UAAAA,IAAI,EAAE,UADK;AAEXC,UAAAA,OAAO,EAAGF,CAAC,CAACG,MAAF,CAASC;AAFR,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAvBF,eAgCE,QAAC,oBAAD;AACE,QAAA,oBAAoB,EAAER,SAAS,CAACW,oBADlC;AAEE,QAAA,YAAY,EAAEP,CAAC,IACbH,YAAY,CAAC;AACXI,UAAAA,IAAI,EAAE,sBADK;AAEXC,UAAAA,OAAO,EAAGF,CAAC,CAACG,MAAF,CAASC;AAFR,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAiDE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMV,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAuC,QAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CAnEM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { AuthContext } from \"../../App\";\n// styles\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n// Components\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\n\nexport const SignUpDialog = ({\n  handleClose,\n  handleSubmit,\n}) => {\n  const { authState, authDispatch } = useContext(AuthContext);\n\n  // 新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={authState.openSignup}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        新規登録\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し「登録する」を押してください。\n        </DialogContentText>\n\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: (e.target.value)\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: (e.target.value)\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: (e.target.value)\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: (e.target.value)\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n        <Button onClick={() => handleSubmit()} type='submit'>\n          登録する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}