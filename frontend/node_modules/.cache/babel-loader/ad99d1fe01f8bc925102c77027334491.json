{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/MicropostDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //api\n\nimport { postMicropost } from '../apis/microposts'; // ダイアログのstyle\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent'; // Formsコンポーネント\n\nimport { Content } from './Forms/Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MicropostDialog = props => {\n  _s();\n\n  const [content, setContent] = useState(''); // ログインapiを呼び出すCallback関数\n\n  const handleSubmit = () => {\n    postMicropost({\n      content: content\n    }).then(data => {\n      setContent('');\n    });\n  }; // 返り値：新規登録ダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u6295\\u7A3F\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        content: content,\n        handleChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleClose,\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        autoFocus: true,\n        children: \"\\u6295\\u7A3F\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MicropostDialog, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n\n_c = MicropostDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MicropostDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/MicropostDialog.jsx"],"names":["React","useState","postMicropost","Button","Dialog","DialogActions","DialogTitle","DialogContent","Content","MicropostDialog","props","content","setContent","handleSubmit","then","data","open","handleClose","e","setEmail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC,CADwC,CAGxC;;AACA,QAAMY,YAAY,GAAG,MAAM;AACzBX,IAAAA,aAAa,CAAC;AACZS,MAAAA,OAAO,EAAEA;AADG,KAAD,CAAb,CAEGG,IAFH,CAEQC,IAAI,IAAI;AACdH,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAJD;AAKD,GAND,CAJwC,CAYxC;;;AACA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEF,KAAK,CAACM,IADd;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACO,WAFjB;AAAA,4BAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,OAAO,EAAEN,OADX;AAEE,QAAA,YAAY,EAAEO,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAF7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEX,KAAK,CAACO,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEJ,YAFX;AAGE,QAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvCM;;GAAMJ,e;;KAAAA,e","sourcesContent":["import React, { useState } from 'react';\n\n//api\nimport { postMicropost } from '../apis/microposts';\n\n// ダイアログのstyle\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\n\n// Formsコンポーネント\nimport { Content } from './Forms/Content';\n\nexport const MicropostDialog = (props) => {\n  const [content, setContent] = useState('')\n\n  // ログインapiを呼び出すCallback関数\n  const handleSubmit = () => {\n    postMicropost({\n      content: content,\n    }).then(data => {\n      setContent('');\n    })\n  }\n\n  // 返り値：新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <DialogTitle>\n        投稿画面\n      </DialogTitle>\n      <DialogContent>\n        <Content\n          content={content}\n          handleChange={e => setEmail(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose}>キャンセル</Button>\n        <Button\n          type='submit'\n          onClick={handleSubmit}\n          autoFocus\n        >\n          投稿する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}