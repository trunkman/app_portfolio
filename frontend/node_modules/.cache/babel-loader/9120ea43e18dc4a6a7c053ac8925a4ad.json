{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AuthContext } from \"../../App\"; // styles\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText'; // Api\n\nimport { postLogIn } from '../../apis/sessions';\nimport { postSignUp } from '../../apis/users'; // Components\n\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUpDialog = ({\n  open,\n  handleClose\n}) => {\n  _s();\n\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n\n  const handleLogin = data => {\n    authDispatch({\n      type: 'login',\n      payload: data.user\n    });\n  };\n\n  const submitLogin = () => {\n    postLogIn({\n      email: authState.email,\n      password: authState.password,\n      remember_me: authState.remenberMe\n    }).then(data => {\n      handleLogin(data);\n      handleClose();\n    }).catch(() => {\n      alert('ログイン失敗');\n    });\n  }; // 新規登録ダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: authState.openSignup,\n    onClose: () => handleClose(),\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u65B0\\u898F\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u4E0B\\u8A18\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u300C\\u767B\\u9332\\u3059\\u308B\\u300D\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        name: authState.name,\n        handleChange: e => authDispatch({\n          type: 'name',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: authState.email,\n        handleChange: e => authDispatch({\n          type: 'email',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        password: authState.password,\n        handleChange: e => authDispatch({\n          type: 'password',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n        passwordConfirmation: authState.passwordConfirmation,\n        handleChange: e => authDispatch({\n          type: 'passwordConfirmation',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClose(),\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"\\u767B\\u9332\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpDialog, \"2/qbOHQTgaGjjZrtfKentzVCvHk=\");\n\n_c = SignUpDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx"],"names":["React","useContext","AuthContext","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","postLogIn","postSignUp","Name","Email","Password","PasswordConfirmation","SignUpDialog","open","handleClose","authState","authDispatch","handleLogin","data","type","payload","user","submitLogin","email","password","remember_me","remenberMe","then","catch","alert","openSignup","name","e","target","value","passwordConfirmation","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,WAA5B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B,C,CACA;;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,oBAAT,QAAqC,+BAArC;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AAAA;;AACJ,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BlB,UAAU,CAACC,WAAD,CAA9C;;AAEA,QAAMkB,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,YAAY,CAAC;AACXG,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAFH,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACxBhB,IAAAA,SAAS,CAAC;AACRiB,MAAAA,KAAK,EAAER,SAAS,CAACQ,KADT;AAERC,MAAAA,QAAQ,EAAET,SAAS,CAACS,QAFZ;AAGRC,MAAAA,WAAW,EAAEV,SAAS,CAACW;AAHf,KAAD,CAAT,CAIGC,IAJH,CAIQT,IAAI,IAAI;AACdD,MAAAA,WAAW,CAACC,IAAD,CAAX;AACAJ,MAAAA,WAAW;AACZ,KAPD,EAOGc,KAPH,CAOS,MAAM;AACbC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD,KATD;AAUD,GAXD,CAVI,CAuBJ;;;AACA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEd,SAAS,CAACe,UADlB;AAEE,IAAA,OAAO,EAAE,MAAMhB,WAAW,EAF5B;AAAA,4BAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEC,SAAS,CAACgB,IADlB;AAEE,QAAA,YAAY,EAAEC,CAAC,IACbhB,YAAY,CAAC;AACXG,UAAAA,IAAI,EAAE,MADK;AAEXC,UAAAA,OAAO,EAAEY,CAAC,CAACC,MAAF,CAASC;AAFP,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEnB,SAAS,CAACQ,KADnB;AAEE,QAAA,YAAY,EAAES,CAAC,IACbhB,YAAY,CAAC;AACXG,UAAAA,IAAI,EAAE,OADK;AAEXC,UAAAA,OAAO,EAAEY,CAAC,CAACC,MAAF,CAASC;AAFP,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAbF,eAsBE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAEnB,SAAS,CAACS,QADtB;AAEE,QAAA,YAAY,EAAEQ,CAAC,IACbhB,YAAY,CAAC;AACXG,UAAAA,IAAI,EAAE,UADK;AAEXC,UAAAA,OAAO,EAAEY,CAAC,CAACC,MAAF,CAASC;AAFP,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cAtBF,eA+BE,QAAC,oBAAD;AACE,QAAA,oBAAoB,EAAEnB,SAAS,CAACoB,oBADlC;AAEE,QAAA,YAAY,EAAEH,CAAC,IACbhB,YAAY,CAAC;AACXG,UAAAA,IAAI,EAAE,sBADK;AAEXC,UAAAA,OAAO,EAAEY,CAAC,CAACC,MAAF,CAASC;AAFP,SAAD;AAHhB;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAgDE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMpB,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEsB,YAAjB;AAA+B,QAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD,CAtFM;;GAAMxB,Y;;KAAAA,Y","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from \"../../App\";\n// styles\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n// Api\nimport { postLogIn } from '../../apis/sessions';\nimport { postSignUp } from '../../apis/users';\n// Components\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\n\nexport const SignUpDialog = ({\n  open,\n  handleClose,\n}) => {\n  const { authState, authDispatch } = useContext(AuthContext);\n\n  const handleLogin = (data) => {\n    authDispatch({\n      type: 'login',\n      payload: data.user,\n    })\n  }\n\n  const submitLogin = () => {\n    postLogIn({\n      email: authState.email,\n      password: authState.password,\n      remember_me: authState.remenberMe,\n    }).then(data => {\n      handleLogin(data)\n      handleClose()\n    }).catch(() => {\n      alert('ログイン失敗')\n    })\n  }\n\n  // 新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={authState.openSignup}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        新規登録\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し「登録する」を押してください。\n        </DialogContentText>\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: e.target.value,\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n        <Button onClick={handleSubmit} type='submit'>\n          登録する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}