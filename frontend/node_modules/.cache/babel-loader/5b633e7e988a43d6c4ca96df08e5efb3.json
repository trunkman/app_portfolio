{"ast":null,"code":"export const followInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  following: [],\n  followers: [],\n  followingIds: []\n};\nexport const followReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return { ...state,\n        fetchState: 'loading',\n        reRender: true\n      };\n\n    case 'fetchSuccessFollowing':\n      return { ...state,\n        fetchState: 'ok',\n        reRender: false,\n        following: action.payload.following,\n        followingIds: action.payload.followingIds\n      };\n\n    case 'fetchSuccessFollowers':\n      return { ...state,\n        fetchState: 'ok',\n        reRender: false,\n        followers: action.payload.followers,\n        followingIds: action.payload.followingIds\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/FollowReducer.jsx"],"names":["followInitialState","fetchState","reRender","following","followers","followingIds","followReducer","state","action","type","payload","Error"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG;AAChCC,EAAAA,UAAU,EAAE,SADoB;AAEhCC,EAAAA,QAAQ,EAAE,KAFsB;AAGhCC,EAAAA,SAAS,EAAE,EAHqB;AAIhCC,EAAAA,SAAS,EAAE,EAJqB;AAKhCC,EAAAA,YAAY,EAAE;AALkB,CAA3B;AAQP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,UAAU,EAAE,SAFP;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELN,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,SAAS,EAAEK,MAAM,CAACE,OAAP,CAAeP,SAJrB;AAKLE,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeL;AALxB,OAAP;;AAOF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELN,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILE,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAAP,CAAeN,SAJrB;AAKLC,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAP,CAAeL;AALxB,OAAP;;AAOF;AACE,YAAM,IAAIM,KAAJ,EAAN;AAxBJ;AA0BD,CA3BM","sourcesContent":["export const followInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  following: [],\n  followers: [],\n  followingIds: [],\n}\n\nexport const followReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return {\n        ...state,\n        fetchState: 'loading',\n        reRender: true,\n      };\n    case 'fetchSuccessFollowing':\n      return {\n        ...state,\n        fetchState: 'ok',\n        reRender: false,\n        following: action.payload.following,\n        followingIds: action.payload.followingIds,\n      };\n    case 'fetchSuccessFollowers':\n      return {\n        ...state,\n        fetchState: 'ok',\n        reRender: false,\n        followers: action.payload.followers,\n        followingIds: action.payload.followingIds,\n      };\n    default:\n      throw new Error();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}