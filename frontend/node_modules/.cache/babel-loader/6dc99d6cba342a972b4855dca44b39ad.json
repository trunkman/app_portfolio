{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText'; // Api\n\nimport { patchUpdate } from '../../apis/users'; // Component\n\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingDialog = ({\n  handleClose,\n  open\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext); // 送信のCallback関数\n\n  const submitUpdate = () => {\n    patchUpdate({\n      user_id: authState.loginUser.id,\n      name: authState.name,\n      email: authState.email,\n      password: authState.password,\n      password_confirmation: authState.passwordConfirmation\n    }).then(data => {\n      alert('ユーザー情報を更新しました');\n      handleClose();\n      history.push(`/users/${authState.loginUser.id}`);\n    });\n  };\n\n  useEffect(() => {\n    authDispatch({\n      type: 'preUpdate',\n      payload: {\n        name: authState.loginUser.name,\n        email: authState.loginUser.email,\n        password: authState.loginUser.password,\n        passwordConfirmation: authState.loginUser.passwordConfirmation,\n        ideal_sleeping_hours: authState.loginUser.ideal_sleeping_hours,\n        profile: authState.loginUser.profile\n      }\n    });\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => handleClose(),\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u7DE8\\u96C6\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u5909\\u66F4\\u3057\\u305F\\u3044\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u3001\\u300C\\u66F4\\u65B0\\u300D\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        name: authState.name,\n        handleChange: e => authDispatch({\n          type: 'name',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: authState.email,\n        handleChange: e => authDispatch({\n          type: 'name',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        password: authState.password,\n        handleChange: e => authDispatch({\n          type: 'password',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n        passwordConfirmation: authState.passwordConfirmation,\n        handleChange: e => authDispatch({\n          type: 'passwordConfirmation',\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClose(),\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitUpdate,\n        type: \"submit\",\n        children: \"\\u66F4\\u65B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingDialog, \"/V87hhg87EDGjj6VLtzi90Q2+0U=\", false, function () {\n  return [useHistory];\n});\n\n_c = SettingDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx"],"names":["React","useContext","useEffect","useHistory","AuthContext","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","patchUpdate","Name","Email","Password","PasswordConfirmation","SettingDialog","handleClose","open","history","authState","authDispatch","submitUpdate","user_id","loginUser","id","name","email","password","password_confirmation","passwordConfirmation","then","data","alert","push","type","payload","ideal_sleeping_hours","profile","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n// Api\nimport { patchUpdate } from '../../apis/users';\n// Component\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\n\nexport const SettingDialog = ({\n  handleClose,\n  open,\n}) => {\n  const history = useHistory();\n  const { authState, authDispatch } = useContext(AuthContext)\n  // 送信のCallback関数\n  const submitUpdate = () => {\n    patchUpdate({\n      user_id: authState.loginUser.id,\n      name: authState.name,\n      email: authState.email,\n      password: authState.password,\n      password_confirmation: authState.passwordConfirmation,\n    }).then(data => {\n      alert('ユーザー情報を更新しました')\n      handleClose()\n      history.push(`/users/${authState.loginUser.id}`)\n    })\n  }\n\n  useEffect(() => {\n    authDispatch({\n      type: 'preUpdate',\n      payload: {\n        name: authState.loginUser.name,\n        email: authState.loginUser.email,\n        password: authState.loginUser.password,\n        passwordConfirmation: authState.loginUser.passwordConfirmation,\n        ideal_sleeping_hours: authState.loginUser.ideal_sleeping_hours,\n        profile: authState.loginUser.profile,\n      }\n    });\n  }, [open])\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>プロフィールを編集する</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          変更したい項目を入力し、「更新」を押してください。\n        </DialogContentText>\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: e.target.value,\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n        <Button onClick={submitUpdate} type='submit'>\n          更新\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}