{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, createContext } from 'react';\nimport './App.css'; // Style\n\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from './styled/theme';\nimport { ThemeProvider } from '@emotion/react'; // Api\n\nimport { fetchLoggedIn } from './apis/sessions'; // Reducer\n\nimport { authInitialState, authReducer } from './reducer/AuthReducer'; // Container\n\nimport { Layout } from './containers/Layout'; // Component\n\nimport { Loading } from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function App() {\n  _s();\n\n  const [authState, authDispatch] = useReducer(authReducer, authInitialState); // ログイン状態を確認する\n\n  const loggedIn = () => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && authState.loggedIn === false) {\n        authDispatch({\n          type: 'login',\n          payload: data.user\n        });\n      } else if (!data.logged_in && authState.loggedIn === true) {\n        authDispatch({\n          type: 'logout'\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      authDispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: \"flex-start\",\n          justifyContent: 'center'\n        },\n        children: authState.loginUser === null ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CjyvVjjQphbFuOsRDqzkHBe54O0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.jsx"],"names":["React","useEffect","useReducer","createContext","Box","CssBaseline","theme","ThemeProvider","fetchLoggedIn","authInitialState","authReducer","Layout","Loading","AuthContext","App","authState","authDispatch","loggedIn","then","data","logged_in","type","payload","user","display","alignItems","justifyContent","loginUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,aAAvC,QAA4D,OAA5D;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B,C,CACA;;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,uBAA9C,C,CACA;;AACA,SAASC,MAAT,QAAuB,qBAAvB,C,CACA;;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,OAAO,MAAMC,WAAW,gBAAGV,aAAa,EAAjC;AAEP,eAAe,SAASW,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,UAAU,CAACQ,WAAD,EAAcD,gBAAd,CAA5C,CAD4B,CAG5B;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACrBT,IAAAA,aAAa,GACVU,IADH,CACQC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,SAAL,IAAkBL,SAAS,CAACE,QAAV,KAAuB,KAA7C,EAAoD;AAClDD,QAAAA,YAAY,CAAC;AACXK,UAAAA,IAAI,EAAE,OADK;AAEXC,UAAAA,OAAO,EAAEH,IAAI,CAACI;AAFH,SAAD,CAAZ;AAID,OALD,MAKO,IAAI,CAACJ,IAAI,CAACC,SAAN,IAAmBL,SAAS,CAACE,QAAV,KAAuB,IAA9C,EAAoD;AACzDD,QAAAA,YAAY,CAAC;AACXK,UAAAA,IAAI,EAAE;AADK,SAAD,CAAZ;AAGD;AACF,KAZH;AAaD,GAdD;;AAgBApB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEV,KAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AACPkB,UAAAA,OAAO,EAAE,MADF;AAEPC,UAAAA,UAAU,EAAE,YAFL;AAGPC,UAAAA,cAAc,EAAE;AAHT,SAAT;AAAA,kBAKGX,SAAS,CAACY,SAAV,KAAwB,IAAxB,gBACG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADH,gBAEG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAzCuBb,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useReducer, createContext } from 'react';\nimport './App.css';\n// Style\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from './styled/theme'\nimport { ThemeProvider } from '@emotion/react';\n// Api\nimport { fetchLoggedIn } from './apis/sessions';\n// Reducer\nimport { authInitialState, authReducer } from './reducer/AuthReducer'\n// Container\nimport { Layout } from './containers/Layout';\n// Component\nimport { Loading } from '../components/Loading';\n\nexport const AuthContext = createContext()\n\nexport default function App() {\n  const [authState, authDispatch] = useReducer(authReducer, authInitialState)\n\n  // ログイン状態を確認する\n  const loggedIn = () => {\n    fetchLoggedIn()\n      .then(data => {\n        if (data.logged_in && authState.loggedIn === false) {\n          authDispatch({\n            type: 'login',\n            payload: data.user,\n          })\n        } else if (!data.logged_in && authState.loggedIn === true) {\n          authDispatch({\n            type: 'logout',\n          })\n        }\n      });\n  }\n\n  useEffect(() => {\n    loggedIn();\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ authState, authDispatch }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={{\n          display: 'flex',\n          alignItems: \"flex-start\",\n          justifyContent: 'center',\n        }}>\n          {authState.loginUser === null\n            ? <Loading />\n            : <Layout />\n          }\n        </Box>\n      </ThemeProvider>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}