{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Users/Microposts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link'; // styled\n\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { deleteMicropost } from \"../../apis/microposts\";\nimport { fetchMicroposts } from \"../../apis/users\"; // コンポーネント\n\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Microposts = props => {\n  _s();\n\n  const userId = props.match.params.id;\n  const [microposts, setMicroposts] = useState([]); // 投稿一覧を取得する\n\n  useEffect(() => {\n    fetchMicroposts({\n      userId: userId\n    }).then(data => setMicroposts(data.microposts));\n    return () => setMicroposts([]);\n  }, []); // 投稿を削除する（管理者のみ実行可能）\n\n  const deleteSubmit = micropostId => {\n    deleteMicropost(micropostId); //     .then(props.dataFetching())\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [microposts.length, \" \\u3064\\u3076\\u3084\\u304D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        bgcolor: 'background.paper'\n      },\n      children: microposts.map(micropost => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              component: \"div\",\n              primary: micropost.id,\n              secondary: micropost.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), props.loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n              component: \"div\",\n              onClick: () => deleteSubmit(micropost.id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              pl: 2,\n              children: micropost.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(LikeButton, {\n              loginUserId: props.loginUser.id,\n              micropostId: micropost.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(CommentButton, {\n              loginUserId: props.loginUser.id,\n              micropostId: micropost.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, micropost.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Microposts, \"Lqx8mNlEXDJ59aHLe728iBU3H0Y=\");\n\n_c = Microposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Microposts\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Users/Microposts.jsx"],"names":["React","useState","useEffect","Link","ListItemAvatar","Typography","ListItem","List","ListItemText","Grid","AccountCircle","deleteMicropost","fetchMicroposts","LikeButton","CommentButton","Microposts","props","userId","match","params","id","microposts","setMicroposts","then","data","deleteSubmit","micropostId","length","width","bgcolor","map","micropost","fontSize","created_at","loginUser","user_id","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link';\n// styled\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid'\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { deleteMicropost } from \"../../apis/microposts\";\nimport { fetchMicroposts } from \"../../apis/users\";\n// コンポーネント\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\"\n\nexport const Microposts = (props) => {\n  const userId = props.match.params.id\n  const [microposts, setMicroposts] = useState([])\n  // 投稿一覧を取得する\n  useEffect(() => {\n    fetchMicroposts({ userId: userId })\n      .then(data => setMicroposts(data.microposts))\n    return () => setMicroposts([])\n  }, [])\n  // 投稿を削除する（管理者のみ実行可能）\n  const deleteSubmit = (micropostId) => {\n    deleteMicropost(micropostId)\n    //     .then(props.dataFetching())\n  }\n\n  return (\n    <>\n      <h2>投稿一覧</h2>\n      <p>{microposts.length} つぶやき</p>\n      <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        {\n          microposts.map(micropost =>\n            <ListItem key={micropost.id}>\n              <Grid container spacing={1} >\n                <Grid item xs={2}>\n                  <ListItemAvatar>\n                    <AccountCircle sx={{ fontSize: 40 }} />\n                  </ListItemAvatar>\n                </Grid>\n                <Grid item xs={3}>\n                  <ListItemText\n                    component=\"div\"\n                    primary={micropost.id}\n                    secondary={micropost.created_at}\n                  />\n                  {props.loginUser.id === micropost.user_id && (\n                    <Link component=\"div\" onClick={() => deleteSubmit(micropost.id)}>\n                      delete\n                    </Link>\n                  )}\n                </Grid>\n                <Grid item xs={7}>\n                  <Typography variant=\"body1\" pl={2}>\n                    {micropost.content}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container spacing={1} >\n                <Grid item xs={6}>\n                  <LikeButton\n                    loginUserId={props.loginUser.id}\n                    micropostId={micropost.id}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <CommentButton\n                    loginUserId={props.loginUser.id}\n                    micropostId={micropost.id}\n                  />\n                </Grid>\n              </Grid>\n            </ListItem >\n          )\n        }\n      </List>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}