{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\"; // ユーザーページのstyle\n\nimport Button from '@mui/material/Button'; // コンポーネント\n\nimport { Header } from \"../components/Header\";\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openLogInDialog, setOpenLogInDialog] = useState(false);\n  const [openSettingDialog, setOpenSettingDialog] = useState(false); // ログインのDialogを開くCallback関数\n\n  const handleOpenLogIn = () => {\n    setOpenLogInDialog(true);\n  }; // ログインのDialogを閉じるCallback関数\n\n\n  const handleCloseLogIn = () => {\n    setOpenLogInDialog(false);\n  }; // 設定のDialogを開くCallback関数\n\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  }; // 設定のDialogを閉じるCallback関数\n\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 返り値：ユーザー画面\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      open: openLogInDialog,\n      handleClickOpenLogIn: handleOpenLogIn,\n      handleClose: handleCloseLogIn,\n      isLoggedIn: props.isLoggedIn,\n      handleLogIn: props.handleLogIn,\n      handleLogOut: props.handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id\\u306F\", props.user.id, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u540D\\u524D\\u306F\", props.user.name, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email\\u306F\", props.user.email, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleOpenSetting,\n      children: [\"\\u8A2D\\u5B9A\\uFF08\\u30E6\\u30FC\\u30B6\\u30FC\\u60C5\\u5831\\u306E\\u66F4\\u65B0\\uFF09\", /*#__PURE__*/_jsxDEV(SettingDialog, {\n        open: openSettingDialog,\n        handleClose: handleCloseSetting,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8A2D\\u5B9A\\u5909\\u66F4\\u4E0D\\u53EF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"9ZqfD6LWHDYCCMBqDMFhznWQKoE=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","Button","Header","SettingDialog","User","props","openLogInDialog","setOpenLogInDialog","openSettingDialog","setOpenSettingDialog","handleOpenLogIn","handleCloseLogIn","handleOpenSetting","handleCloseSetting","isLoggedIn","handleLogIn","handleLogOut","user","id","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,KAAD,CAA1D,CAF6B,CAI7B;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC5BH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD,CAL6B,CAS7B;;;AACA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD,CAV6B,CAc7B;;;AACA,QAAMK,iBAAiB,GAAG,MAAM;AAC9BH,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD,CAf6B,CAmB7B;;;AACA,QAAMI,kBAAkB,GAAG,MAAM;AAC/BJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD,CApB6B,CAwB7B;;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEH,eADR;AAEE,MAAA,oBAAoB,EAAEI,eAFxB;AAGE,MAAA,WAAW,EAAEC,gBAHf;AAIE,MAAA,UAAU,EAAEN,KAAK,CAACS,UAJpB;AAKE,MAAA,WAAW,EAAET,KAAK,CAACU,WALrB;AAME,MAAA,YAAY,EAAEV,KAAK,CAACW;AANtB;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,6BAAOX,KAAK,CAACY,IAAN,CAAWC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,uCAAOb,KAAK,CAACY,IAAN,CAAWE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,gCAAUd,KAAK,CAACY,IAAN,CAAWG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAcKf,KAAK,CAACS,UAAP,gBAEI,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,OAAO,EAAEF,iBAFX;AAAA,gHAKE,QAAC,aAAD;AACE,QAAA,IAAI,EAAEJ,iBADR;AAEE,QAAA,WAAW,EAAEK,kBAFf;AAGE,QAAA,IAAI,EAAER,KAAK,CAACY;AAHd;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA5DM;;GAAMb,I;;KAAAA,I","sourcesContent":["import React, { Fragment, useState } from \"react\";\n// ユーザーページのstyle\nimport Button from '@mui/material/Button';\n// コンポーネント\nimport { Header } from \"../components/Header\"\nimport { SettingDialog } from \"../components/SettingDialog\";\n\nexport const User = (props) => {\n  const [openLogInDialog, setOpenLogInDialog] = useState(false)\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n\n  // ログインのDialogを開くCallback関数\n  const handleOpenLogIn = () => {\n    setOpenLogInDialog(true)\n  }\n\n  // ログインのDialogを閉じるCallback関数\n  const handleCloseLogIn = () => {\n    setOpenLogInDialog(false)\n  }\n\n  // 設定のDialogを開くCallback関数\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true)\n  }\n\n  // 設定のDialogを閉じるCallback関数\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false)\n  }\n\n  // 返り値：ユーザー画面\n  return (\n    <Fragment>\n      <Header\n        open={openLogInDialog}\n        handleClickOpenLogIn={handleOpenLogIn}\n        handleClose={handleCloseLogIn}\n        isLoggedIn={props.isLoggedIn}\n        handleLogIn={props.handleLogIn}\n        handleLogOut={props.handleLogOut}\n      />\n      <h1>ユーザーページ</h1>\n      <p>Idは{props.user.id}です</p>\n      <p>名前は{props.user.name}です</p>\n      <p>Emailは{props.user.email}です</p>\n      {\n        (props.isLoggedIn)\n          ? (\n            <Button\n              variant=\"outlined\"\n              onClick={handleOpenSetting}\n            >\n              設定（ユーザー情報の更新）\n              <SettingDialog\n                open={openSettingDialog}\n                handleClose={handleCloseSetting}\n                user={props.user}\n              />\n            </Button>\n          )\n          : (\n            <p>設定変更不可</p>\n          )\n      }\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}