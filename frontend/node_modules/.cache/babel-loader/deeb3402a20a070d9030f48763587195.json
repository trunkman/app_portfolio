{"ast":null,"code":"export const profileInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  user: {},\n  followingIds: [],\n  followersIds: [],\n  followStatus: false,\n  subscriptions: [],\n  microposts: [],\n  likedMicroposts: [],\n  comments: []\n};\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetchingProfile':\n      return { ...state,\n        fetchState: 'loading',\n        reRender: true\n      };\n\n    case 'fetchSuccessProfile':\n      return { ...state,\n        fetchState: 'ok',\n        reRender: false,\n        user: action.payload.user,\n        followingIds: action.payload.followingIds,\n        followersIds: action.payload.followersIds,\n        followStatus: action.payload.followStatus,\n        subscriptions: action.payload.subscriptions\n      };\n\n    case 'fetchSuccessMicropost':\n      return { ...state,\n        fetchState: 'ok',\n        microposts: action.payload.microposts,\n        likedMicroposts: action.payload.likedMicroposts,\n        comments: action.payload.comments\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx"],"names":["profileInitialState","fetchState","reRender","user","followingIds","followersIds","followStatus","subscriptions","microposts","likedMicroposts","comments","profileReducer","state","action","type","payload","Error"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG;AACjCC,EAAAA,UAAU,EAAE,SADqB;AAEjCC,EAAAA,QAAQ,EAAE,KAFuB;AAGjCC,EAAAA,IAAI,EAAE,EAH2B;AAIjCC,EAAAA,YAAY,EAAE,EAJmB;AAKjCC,EAAAA,YAAY,EAAE,EALmB;AAMjCC,EAAAA,YAAY,EAAE,KANmB;AAOjCC,EAAAA,aAAa,EAAE,EAPkB;AAQjCC,EAAAA,UAAU,EAAE,EARqB;AASjCC,EAAAA,eAAe,EAAE,EATgB;AAUjCC,EAAAA,QAAQ,EAAE;AAVuB,CAA5B;AAaP,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELX,QAAAA,UAAU,EAAE,SAFP;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELX,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAAP,CAAeZ,IAJhB;AAKLC,QAAAA,YAAY,EAAES,MAAM,CAACE,OAAP,CAAeX,YALxB;AAMLC,QAAAA,YAAY,EAAEQ,MAAM,CAACE,OAAP,CAAeV,YANxB;AAOLC,QAAAA,YAAY,EAAEO,MAAM,CAACE,OAAP,CAAeT,YAPxB;AAQLC,QAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAeR;AARzB,OAAP;;AAUF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELX,QAAAA,UAAU,EAAE,IAFP;AAGLO,QAAAA,UAAU,EAAEK,MAAM,CAACE,OAAP,CAAeP,UAHtB;AAILC,QAAAA,eAAe,EAAEI,MAAM,CAACE,OAAP,CAAeN,eAJ3B;AAKLC,QAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeL;AALpB,OAAP;;AAOF;AACE,YAAM,IAAIM,KAAJ,EAAN;AA3BJ;AA6BD,CA9BM","sourcesContent":["export const profileInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  user: {},\n  followingIds: [],\n  followersIds: [],\n  followStatus: false,\n  subscriptions: [],\n  microposts: [],\n  likedMicroposts: [],\n  comments: [],\n}\n\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetchingProfile':\n      return {\n        ...state,\n        fetchState: 'loading',\n        reRender: true,\n      };\n    case 'fetchSuccessProfile':\n      return {\n        ...state,\n        fetchState: 'ok',\n        reRender: false,\n        user: action.payload.user,\n        followingIds: action.payload.followingIds,\n        followersIds: action.payload.followersIds,\n        followStatus: action.payload.followStatus,\n        subscriptions: action.payload.subscriptions\n      };\n    case 'fetchSuccessMicropost':\n      return {\n        ...state,\n        fetchState: 'ok',\n        microposts: action.payload.microposts,\n        likedMicroposts: action.payload.likedMicroposts,\n        comments: action.payload.comments,\n      };\n    default:\n      throw new Error();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}