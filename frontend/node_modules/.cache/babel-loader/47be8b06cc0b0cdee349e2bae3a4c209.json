{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport TabPanel from '@mui/lab/TabPanel';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Grid from \"@mui/material/Grid\"; // Api\n\nimport { fetchUser } from \"../../apis/users\"; // Reducer\n\nimport { dataInitialState, dataReducer } from '../../reducer/DataReducer';\nimport { profileInitialState, profileReducer } from '../../reducer/ProfileReducer'; // Component\n\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = ({\n  match,\n  loginUser\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [dataState, dataDispatch] = useReducer(dataReducer, dataInitialState);\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState(0); // ユーザー情報の取得\n\n  const userInformation = () => {\n    profileDispatch({\n      type: 'fetching'\n    });\n    fetchUser({\n      userId: userId\n    }).then(data => {\n      profileDispatch({\n        type: 'fetchSuccessProfile',\n        payload: {\n          user: data.user,\n          followingIds: data.following_ids,\n          followersIds: data.followiwea_ids,\n          microposts: data.microposts\n        }\n      });\n      dataDispatch({\n        type: 'complete'\n      });\n    });\n  }; // マイクロポスト情報の取得 \n\n\n  const userMicropost = () => {\n    profileDispatch({\n      type: 'fetching'\n    });\n    fetchUser({\n      userId: userId\n    }).then(data => {\n      profileDispatch({\n        type: 'fetchSuccessMicropost',\n        payload: {\n          microposts: data.microposts,\n          likedMicropostIds: data.liked_micropost_ids,\n          comments: data.comments,\n          commentedMicroposts: data.commented_microposts\n        }\n      });\n      dataDispatch({\n        type: 'complete'\n      });\n    });\n  };\n\n  useEffect(() => {\n    userInformation();\n  }, [dataState.user]);\n  useEffect(() => {\n    userMicropost();\n  }, [dataState.user]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      maxWidth: 800\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(UserInfo, {\n          loginUser: loginUser,\n          profile: profileState,\n          profileName: profileState.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tab,\n          onChange: (event, newValue) => setTab(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"\\u3064\\u3076\\u3084\\u304D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"\\u3044\\u3044\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tab,\n        index: 0,\n        children: profileState.microposts.map(micropost => /*#__PURE__*/_jsxDEV(Micropost, {\n          micropost: micropost,\n          loginUser: loginUser,\n          likedStatus: profileState.likedMicropostIds.includes(micropost.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tab,\n        index: 1,\n        children: \"\\u3044\\u3044\\u306D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tab,\n        index: 2,\n        children: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"P23EUW7nUbdyWFmFMiuEcmtwHv4=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx"],"names":["React","useState","useEffect","useReducer","Box","Tabs","Tab","TabPanel","FavoriteIcon","Grid","fetchUser","dataInitialState","dataReducer","profileInitialState","profileReducer","UserInfo","Micropost","Profile","match","loginUser","userId","params","id","dataState","dataDispatch","profileState","profileDispatch","tab","setTab","userInformation","type","then","data","payload","user","followingIds","following_ids","followersIds","followiwea_ids","microposts","userMicropost","likedMicropostIds","liked_micropost_ids","comments","commentedMicroposts","commented_microposts","p","maxWidth","name","borderBottom","borderColor","event","newValue","map","micropost","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport TabPanel from '@mui/lab/TabPanel';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Grid from \"@mui/material/Grid\";\n// Api\nimport { fetchUser } from \"../../apis/users\";\n// Reducer\nimport { dataInitialState, dataReducer } from '../../reducer/DataReducer';\nimport { profileInitialState, profileReducer } from '../../reducer/ProfileReducer';\n// Component\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\nimport { Micropost } from \"../../components/Lists/Micropost\";\n\n\nexport const Profile = ({\n  match,\n  loginUser,\n}) => {\n  const userId = match.params.id\n  const [dataState, dataDispatch] = useReducer(dataReducer, dataInitialState);\n\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState(0);\n\n  // ユーザー情報の取得\n  const userInformation = () => {\n    profileDispatch({ type: 'fetching' });\n    fetchUser({ userId: userId })\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessProfile',\n          payload: {\n            user: data.user,\n            followingIds: data.following_ids,\n            followersIds: data.followiwea_ids,\n            microposts: data.microposts,\n          }\n        })\n        dataDispatch({ type: 'complete' })\n      });\n  }\n\n  // マイクロポスト情報の取得 \n  const userMicropost = () => {\n    profileDispatch({ type: 'fetching' });\n    fetchUser({ userId: userId })\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessMicropost',\n          payload: {\n            microposts: data.microposts,\n            likedMicropostIds: data.liked_micropost_ids,\n            comments: data.comments,\n            commentedMicroposts: data.commented_microposts,\n          }\n        })\n        dataDispatch({ type: 'complete' })\n      });\n  }\n\n  useEffect(() => { userInformation() }, [dataState.user])\n  useEffect(() => { userMicropost() }, [dataState.user])\n\n  return (\n    <Box sx={{\n      p: 2,\n      maxWidth: 800\n    }}>\n      <Box>\n      </Box>\n      <Grid container >\n        <Grid item xs={12}>\n          <UserInfo\n            loginUser={loginUser}\n            profile={profileState}\n            profileName={profileState.user.name}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {/* <SleepInfo /> */}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {/* <RecomendBook/> */}\n        </Grid>\n      </Grid>\n      <Box>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={tab}\n            onChange={(event, newValue) => setTab(newValue)}\n          >\n            <Tab icon={<FavoriteIcon />} iconPosition=\"start\" label=\"つぶやき\" />\n            <Tab icon={<FavoriteIcon />} iconPosition=\"start\" label=\"いいね\" />\n            <Tab icon={<FavoriteIcon />} iconPosition=\"start\" label=\"コメント\" />\n          </Tabs>\n        </Box>\n        <TabPanel value={tab} index={0}>\n          {\n            profileState.microposts.map(micropost =>\n              <Micropost\n                micropost={micropost}\n                loginUser={loginUser}\n                likedStatus={profileState.likedMicropostIds.includes(micropost.id)}\n              />\n            )\n\n          }\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n          いいね\n        </TabPanel>\n        <TabPanel value={tab} index={2}>\n          コメント\n        </TabPanel>\n      </Box>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}