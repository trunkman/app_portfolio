{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/BookSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // styles\n\nimport Grid from \"@mui/material/Grid\"; // api\n\nimport { fetchBooks } from \"../../apis/books\"; // コンポーネント\n\nimport { BookCard } from '../../components/Lists/BookCard';\nimport { Search } from \"../../components/Forms/Search\";\nimport { BookSearchButton } from \"../../components/Buttons/BookSearchButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookSearch = () => {\n  _s();\n\n  const [keyword, setKeyword] = useState('');\n  const [books, setBooks] = useState([]);\n  const dataSet = [];\n\n  const handleSubmit = () => {\n    fetchBooks({\n      keyword: keyword\n    }).then(data => {\n      setKeyword('');\n      data.books.map(book => dataSet.push(book.params));\n      setBooks(data.books);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      maxWidth: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u66F8\\u7C4D\\u540D\\u3067\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        keyword: keyword,\n        handleChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BookSearchButton, {\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.300'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u691C\\u7D22\\u7D50\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u66F8\\u7C4D : \", books.length, \" \\u4EF6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), books.length && books.map(book => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 4,\n      sx: {\n        p: 2,\n        bgcolor: 'grey.100'\n      },\n      children: /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book.params\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)\n    }, book.params.isbn.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"6ItN8FHOtVLnVmByJGj4SqWKLZg=\");\n\n_c = BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/BookSearch.jsx"],"names":["React","useEffect","useState","Grid","fetchBooks","BookCard","Search","BookSearchButton","BookSearch","keyword","setKeyword","books","setBooks","dataSet","handleSubmit","then","data","map","book","push","params","maxWidth","mx","bgcolor","px","e","target","value","length","p","isbn","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// styles\nimport Grid from \"@mui/material/Grid\";\n// api\nimport { fetchBooks } from \"../../apis/books\";\n// コンポーネント\nimport { BookCard } from '../../components/Lists/BookCard'\nimport { Search } from \"../../components/Forms/Search\";\nimport { BookSearchButton } from \"../../components/Buttons/BookSearchButton\"\n\nexport const BookSearch = () => {\n  const [keyword, setKeyword] = useState('')\n  const [books, setBooks] = useState([])\n  const dataSet = []\n  const handleSubmit = () => {\n    fetchBooks({\n      keyword: keyword,\n    }).then(data => {\n      setKeyword('')\n      data.books.map(book =>\n        dataSet.push(book.params)\n      );\n      setBooks(data.books)\n    })\n  }\n\n  return (\n    <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <p>書籍名で検索</p>\n        <Search\n          keyword={keyword}\n          handleChange={e => setKeyword(e.target.value)}\n        />\n        <BookSearchButton\n          handleSubmit={handleSubmit}\n        />\n      </Grid>\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.300' }}>\n        <h3>検索結果</h3>\n        <h4>書籍 : {books.length} 件</h4>\n      </Grid>\n      {\n        books.length && (\n          books.map(book =>\n            <Grid item key={book.params.isbn.toString()}\n              xs={6} sm={4} sx={{ p: 2, bgcolor: 'grey.100' }}>\n              <BookCard\n                book={book.params}\n              />\n            </Grid>\n          )\n        )\n      }\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}