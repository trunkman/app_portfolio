{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Friends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Style\n\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // Api\n\nimport { fetchRooms } from \"../../apis/users\"; // Reducer\n\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer'; // Component\n\nimport { Loading } from '../../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Friends = ({\n  loginUser\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState); // トークルームの一覧を取得する\n\n  const Rooms = () => {\n    fetchRooms(loginUser.id).then(data => {\n      roomDispatch({\n        type: 'fetchSuccess',\n        payload: data.entries\n      });\n    });\n  };\n\n  useEffect(() => {\n    Rooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 800\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C8\\u30FC\\u30AF\\u30EB\\u30FC\\u30E0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), roomState.fetchState != 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          bgcolor: 'background.paper'\n        },\n        children: [roomState.entries.length == 0 && /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"\\u30C8\\u30FC\\u30AF\\u3057\\u3066\\u3044\\u308B\\u4EBA\\u306F\\u3044\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), roomState.entries.length != 0 && roomState.entries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            onClick: () => history.push(`/talk_rooms/${entry.room_id}`),\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n                sx: {\n                  fontSize: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: entry.room_id,\n              secondary: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30EB\\u30FC\\u30E0\\u306E\\u6700\\u5F8C\\u306E\\u6295\\u7A3F\\u3092\\u8A18\\u8F09\\u3059\\u308B\\u4E88\\u5B9A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, entry.id.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Friends, \"3l3AgFMwaTlQHyJgRJ5l8wfdlR4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Friends.jsx"],"names":["React","useEffect","useReducer","useHistory","Box","List","ListItem","ListItemAvatar","ListItemText","AccountCircle","fetchRooms","roomInitialState","roomReducer","Loading","Friends","loginUser","history","roomState","roomDispatch","Rooms","id","then","data","type","payload","entries","maxWidth","fetchState","bgcolor","length","map","entry","push","room_id","fontSize","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,2BAA9C,C,CACA;;AACA,SAASC,OAAT,QAAwB,0BAAxB;;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACxC,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BhB,UAAU,CAACU,WAAD,EAAcD,gBAAd,CAA5C,CAFwC,CAGxC;;AACA,QAAMQ,KAAK,GAAG,MAAM;AAClBT,IAAAA,UAAU,CAACK,SAAS,CAACK,EAAX,CAAV,CACGC,IADH,CACQC,IAAI,IAAI;AACZJ,MAAAA,YAAY,CAAC;AACXK,QAAAA,IAAI,EAAE,cADK;AAEXC,QAAAA,OAAO,EAAEF,IAAI,CAACG;AAFH,OAAD,CAAZ;AAID,KANH;AAOD,GARD;;AAUAxB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACPO,QAAAA,QAAQ,EAAE;AADH,OAAT;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGT,SAAS,CAACU,UAAV,IAAwB,IAAxB,gBAA+B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAA/B,gBACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAV;AAAA,mBACGX,SAAS,CAACQ,OAAV,CAAkBI,MAAlB,IAA4B,CAA5B,iBACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAMGZ,SAAS,CAACQ,OAAV,CAAkBI,MAAlB,IAA4B,CAA5B,IACCZ,SAAS,CAACQ,OAAV,CAAkBK,GAAlB,CAAsBC,KAAK,iBACzB;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,OAAO,MAFT;AAIE,YAAA,OAAO,EAAE,MAAMf,OAAO,CAACgB,IAAR,CAAc,eAAcD,KAAK,CAACE,OAAQ,EAA1C,CAJjB;AAAA,oCAME,QAAC,cAAD;AAAA,qCACE,QAAC,aAAD;AAAe,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eASE,QAAC,YAAD;AACE,cAAA,OAAO,EAAEH,KAAK,CAACE,OADjB;AAEE,cAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAGOF,KAAK,CAACX,EAAN,CAASe,QAAT,EAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsCD,CAxDM;;GAAMrB,O;UACKX,U;;;KADLW,O","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// Api\nimport { fetchRooms } from \"../../apis/users\";\n// Reducer\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\n// Component\nimport { Loading } from '../../components/Loading';\n\nexport const Friends = ({ loginUser }) => {\n  const history = useHistory();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState);\n  // トークルームの一覧を取得する\n  const Rooms = () => {\n    fetchRooms(loginUser.id)\n      .then(data => {\n        roomDispatch({\n          type: 'fetchSuccess',\n          payload: data.entries,\n        });\n      });\n  }\n\n  useEffect(() => {\n    Rooms();\n  }, [])\n\n  return (\n    <>\n      <Box sx={{\n        maxWidth: 800\n      }}>\n        <h2>トークルーム</h2>\n        {roomState.fetchState != 'ok' ? <Loading /> :\n          <List sx={{ bgcolor: 'background.paper' }}>\n            {roomState.entries.length == 0 &&\n              <ListItemText>\n                トークしている人はいません。\n              </ListItemText>\n            }\n            {roomState.entries.length != 0 &&\n              roomState.entries.map(entry =>\n                <div>\n                  <ListItem\n                    button\n                    divider\n                    key={entry.id.toString()}\n                    onClick={() => history.push(`/talk_rooms/${entry.room_id}`)}\n                  >\n                    <ListItemAvatar>\n                      <AccountCircle sx={{ fontSize: 60 }} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={entry.room_id}\n                      secondary='メッセージルームの最後の投稿を記載する予定'\n                    />\n                  </ListItem >\n                </div>\n              )\n            }\n          </List>\n        }\n      </Box>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}