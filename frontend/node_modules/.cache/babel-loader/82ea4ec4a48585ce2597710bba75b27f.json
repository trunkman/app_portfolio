{"ast":null,"code":"import axios from \"axios\";\nimport { diaries, diaryPath, sleepDebt } from \"../urls\"; // 日記を登録するapi\n\nexport const postDiary = params => {\n  return axios.post(diaries, {\n    diary: {\n      date: params.date,\n      sleeping_hours: params.sleepingHours,\n      feeling: params.feeling\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('diaries#create', res);\n    return res.data;\n  }).catch(error => {\n    console.log('diaries#create', error);\n  });\n}; // 日記情報を更新するapi\n\nexport const patchDiary = params => {\n  return axios.patch(diaryPath(params.diaryId), {\n    diary: {\n      date: params.date,\n      sleeping_hours: params.sleepingHours,\n      feeling: params.feeling\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('diaries#update', res);\n    return res.data;\n  }).catch(error => {\n    console.log('diaries#update', error);\n  });\n}; // 日記を削除するapi\n\nexport const deleteDiary = diaryId => {\n  return axios.post(diaryPath(diaryId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('diaries#delete', res);\n    return res.data;\n  }).catch(error => {\n    console.log('diaries#delete', error);\n  });\n}; // SleepDebtを取得するapi\n\nexport const fetchSleepDebt = userId => {\n  return axios.get(sleepDebt(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('diaries#sleep_debt', res);\n    return res.data;\n  }).catch(error => {\n    console.log('diaries#sleep_debt', error);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/diaries.js"],"names":["axios","diaries","diaryPath","sleepDebt","postDiary","params","post","diary","date","sleeping_hours","sleepingHours","feeling","withCredentials","then","res","console","log","data","catch","error","patchDiary","patch","diaryId","deleteDiary","fetchSleepDebt","userId","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,SAA9C,C,CAGA;;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAOL,KAAK,CAACM,IAAN,CAAWL,OAAX,EAAoB;AACzBM,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADR;AAELC,MAAAA,cAAc,EAAEJ,MAAM,CAACK,aAFlB;AAGLC,MAAAA,OAAO,EAAEN,MAAM,CAACM;AAHX;AADkB,GAApB,EAMJ;AACDC,IAAAA,eAAe,EAAE;AADhB,GANI,EASJC,IATI,CASCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAZI,EAaJC,KAbI,CAaEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;AACD,GAfI,CAAP;AAgBD,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,UAAU,GAAIf,MAAD,IAAY;AACpC,SAAOL,KAAK,CAACqB,KAAN,CAAYnB,SAAS,CAACG,MAAM,CAACiB,OAAR,CAArB,EAAuC;AAC5Cf,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADR;AAELC,MAAAA,cAAc,EAAEJ,MAAM,CAACK,aAFlB;AAGLC,MAAAA,OAAO,EAAEN,MAAM,CAACM;AAHX;AADqC,GAAvC,EAMJ;AACDC,IAAAA,eAAe,EAAE;AADhB,GANI,EASJC,IATI,CASCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAZI,EAaJC,KAbI,CAaEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;AACD,GAfI,CAAP;AAgBD,CAjBM,C,CAmBP;;AACA,OAAO,MAAMI,WAAW,GAAID,OAAD,IAAa;AACtC,SAAOtB,KAAK,CAACM,IAAN,CAAWJ,SAAS,CAACoB,OAAD,CAApB,EAA+B;AAAEV,IAAAA,eAAe,EAAE;AAAnB,GAA/B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKLC,KALK,CAKCC,KAAK,IAAI;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMK,cAAc,GAAIC,MAAD,IAAY;AACxC,SAAOzB,KAAK,CAAC0B,GAAN,CAAUvB,SAAS,CAACsB,MAAD,CAAnB,EAA6B;AAAEb,IAAAA,eAAe,EAAE;AAAnB,GAA7B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,KAAlC;AACD,GAPI,CAAP;AAQD,CATM","sourcesContent":["import axios from \"axios\";\nimport { diaries, diaryPath, sleepDebt } from \"../urls\";\n\n\n// 日記を登録するapi\nexport const postDiary = (params) => {\n  return axios.post(diaries, {\n    diary: {\n      date: params.date,\n      sleeping_hours: params.sleepingHours,\n      feeling: params.feeling,\n    }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('diaries#create', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('diaries#create', error);\n    });\n}\n\n// 日記情報を更新するapi\nexport const patchDiary = (params) => {\n  return axios.patch(diaryPath(params.diaryId), {\n    diary: {\n      date: params.date,\n      sleeping_hours: params.sleepingHours,\n      feeling: params.feeling,\n    }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('diaries#update', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('diaries#update', error)\n    })\n}\n\n// 日記を削除するapi\nexport const deleteDiary = (diaryId) => {\n  return axios.post(diaryPath(diaryId), { withCredentials: true })\n    .then(res => {\n      console.log('diaries#delete', res);\n      return res.data;\n    }).\n    catch(error => {\n      console.log('diaries#delete', error);\n    });\n}\n\n// SleepDebtを取得するapi\nexport const fetchSleepDebt = (userId) => {\n  return axios.get(sleepDebt(userId), { withCredentials: true })\n    .then(res => {\n      console.log('diaries#sleep_debt', res)\n      return res.data\n    })\n    .catch(error => {\n      console.log('diaries#sleep_debt', error)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}