{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // styles\n// import Grid from \"@mui/material/Grid\";\n\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid'; // コンポーネント\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Diary = () => {\n  _s();\n\n  const [diary, setDiary] = useState(null);\n  const [open, setOpen] = useState(false); // 日記Dialogを開閉する関数群\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const diaries = []; // const handleClick = () => {\n  //   postDiary()\n  //     .then(data => {\n  //       setDiary(data)\n  //       diaries << diary\n  //     })\n  // }\n  // useEffect(() => {\n  //   handleClick()\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\" // locale=\"ja\"\n      ,\n      events: [{\n        title: \"event 1\",\n        start: \"2021-06-01\"\n      }, {\n        title: \"event 2\",\n        start: \"2021-06-03\",\n        end: \"2021-06-05\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"inherit\",\n      onClick: () => handleOpen,\n      children: \"\\u8A18\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Diary, \"Bk+a/Q5nEwWfMsnoypyR/x68nqI=\");\n\n_c = Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Diaries/Diary.jsx"],"names":["React","useEffect","useState","Button","FullCalendar","dayGridPlugin","DiaryDialog","Diary","diary","setDiary","open","setOpen","handleOpen","handleClose","diaries","title","start","end"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC,CAFyB,CAGzB;;AACA,QAAMU,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AAEA,QAAMG,OAAO,GAAG,EAAhB,CAPyB,CAQzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAACT,aAAD,CADX;AAEE,MAAA,WAAW,EAAC,cAFd,CAGE;AAHF;AAIE,MAAA,MAAM,EAAE,CACN;AAAEU,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE,YAA3B;AAAyCC,QAAAA,GAAG,EAAE;AAA9C,OAFM;AAJV;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAML,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAcE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,WAAW,EAAEG;AAFf;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAqBD,CAzCM;;GAAMN,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// styles\n// import Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\n// コンポーネント\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\n\nexport const Diary = () => {\n  const [diary, setDiary] = useState(null)\n  const [open, setOpen] = useState(false)\n  // 日記Dialogを開閉する関数群\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n\n  const diaries = []\n  // const handleClick = () => {\n  //   postDiary()\n  //     .then(data => {\n  //       setDiary(data)\n  //       diaries << diary\n  //     })\n  // }\n\n  // useEffect(() => {\n  //   handleClick()\n  // }, [])\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        // locale=\"ja\"\n        events={[\n          { title: \"event 1\", start: \"2021-06-01\" },\n          { title: \"event 2\", start: \"2021-06-03\", end: \"2021-06-05\" },\n        ]}\n      />\n\n      <Button variant=\"inherit\" onClick={() => handleOpen}>\n        記録する\n      </Button>\n      <DiaryDialog\n        open={open}\n        handleClose={handleClose}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}