{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/SignUpDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport { postSignUp } from '../apis/users';\nimport { Email } from './Forms/Email';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUpDialog = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    postSignUp({\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirmation\n    }).then(data => {\n      if (data.status === 'created') {\n        props.handleLogin(data);\n        history.push(`/user/${data.user.id}`);\n      } else alert('入力内容に誤りがあります');\n    });\n    event.preventDefault(); // 検討の余地あり\n  }; // 新規登録ダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u65B0\\u898F\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u4E0B\\u8A18\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u3001\\u767B\\u9332\\u3092\\u304A\\u9858\\u3044\\u3057\\u307E\\u3059\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: email,\n        handleChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        type: \"password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"password_confirmation\",\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u78BA\\u8A8D\",\n        type: \"password\",\n        required: true,\n        value: passwordConfirmation,\n        onChange: e => setpasswordConfirmaiton(e.target.value),\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleClose,\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        type: \"submit\",\n        autoFocus: true,\n        children: \"\\u65B0\\u898F\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpDialog, \"CAXR6yeVjZ+b8MbAknwMcL6Kv1M=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/SignUpDialog.jsx"],"names":["React","useState","useHistory","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","TextField","postSignUp","Email","SignUpDialog","props","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setpasswordConfirmaiton","history","handleSubmit","event","password_confirmation","then","data","status","handleLogin","push","user","id","alert","preventDefault","open","handleClose","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport { postSignUp } from '../apis/users';\nimport { Email } from './Forms/Email';\n\nexport const SignUpDialog = (props) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = (event) => {\n    postSignUp({\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirmation,\n    }).then((data) => {\n      if (data.status === 'created') {\n        props.handleLogin(data)\n        history.push(`/user/${data.user.id}`)\n      }\n      else\n        alert('入力内容に誤りがあります')\n    })\n    event.preventDefault() // 検討の余地あり\n  };\n\n  // 新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <DialogTitle>\n        新規登録\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し、登録をお願いします。\n        </DialogContentText>\n\n        <Email\n          email={email}\n          handleChange={e => setName(e.target.value)}\n        />\n        {/* <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"名前\"\n          type=\"text\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n          fullWidth\n          variant=\"standard\"\n        /> */}\n\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"E-mail\"\n          type=\"email\"\n          required\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          fullWidth\n          variant=\"standard\"\n        />\n\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"password\"\n          label=\"パスワード\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          fullWidth\n          variant=\"standard\"\n        />\n\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"password_confirmation\"\n          label=\"パスワードの確認\"\n          type=\"password\"\n          required\n          value={passwordConfirmation}\n          onChange={e => setpasswordConfirmaiton(e.target.value)}\n          fullWidth variant=\"standard\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={props.handleClose}>キャンセル</Button>\n        <Button onClick={handleSubmit} type='submit' autoFocus>新規登録</Button>\n      </DialogActions>\n\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}