{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\"; // styles\n\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel'; // Api\n\nimport { fetchFollowing } from \"../../apis/users\";\nimport { fetchFollowers } from \"../../apis/users\"; // Reducer\n\nimport { followInitialState, followReducer } from '../../reducer/FollowReducer'; // コンポーネント\n\nimport { FollowList } from '../../components/Lists/FollowList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Follow = props => {\n  _s();\n\n  const userId = props.match.params.id;\n  const [tab, setTab] = useState('following');\n  const [followState, followDispatch] = useReducer(followReducer, followInitialState); // フォロー中のユーザーを取得する\n\n  const Following = () => {\n    fetchFollowing(userId).then(data => {\n      followDispatch({\n        type: 'fetchSuccessFollowing',\n        payload: {\n          following: data.users,\n          followingIds: data.followingIds\n        }\n      });\n    });\n  }; // フォロワーを取得する\n\n\n  const Followers = () => {\n    fetchFollowers(userId).then(data => {\n      followDispatch({\n        type: 'fetchSuccessFollowers',\n        payload: {\n          followers: data.users,\n          followingIds: data.followingIds\n        }\n      });\n    });\n  }; // タブ変更毎にデータをfetchする\n\n\n  const handleChange = (event, newTab) => {\n    followDispatch({\n      type: 'fetching'\n    });\n    setTab(newTab);\n    newTab == 'following' ? Following() : Followers();\n  };\n\n  useEffect(() => {\n    Following();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      typography: 'body1'\n    },\n    children: /*#__PURE__*/_jsxDEV(TabContext, {\n      value: tab,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(TabList, {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\",\n            value: \"following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u30D5\\u30A9\\u30ED\\u30EF\\u30FC\",\n            value: \"followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"following\",\n        children: followState.following.map(user => /*#__PURE__*/_jsxDEV(FollowList, {\n          user: user,\n          followingIds: followState.followingIds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"followers\",\n        children: followState.followers.map(user => /*#__PURE__*/_jsxDEV(FollowList, {\n          user: user,\n          followingIds: followState.followingIds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Follow, \"4pj9VT09LJtMoAsw1krGc0dLNlQ=\");\n\n_c = Follow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Follow\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx"],"names":["React","useState","useReducer","useEffect","Box","Tab","TabContext","TabList","TabPanel","fetchFollowing","fetchFollowers","followInitialState","followReducer","FollowList","Follow","props","userId","match","params","id","tab","setTab","followState","followDispatch","Following","then","data","type","payload","following","users","followingIds","Followers","followers","handleChange","event","newTab","width","typography","borderBottom","borderColor","map","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CACA;;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,6BAAlD,C,CACA;;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,WAAD,CAA9B;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCrB,UAAU,CAACU,aAAD,EAAgBD,kBAAhB,CAAhD,CAH+B,CAK/B;;AACA,QAAMa,SAAS,GAAG,MAAM;AACtBf,IAAAA,cAAc,CAACO,MAAD,CAAd,CACGS,IADH,CACQC,IAAI,IAAI;AACZH,MAAAA,cAAc,CAAC;AACbI,QAAAA,IAAI,EAAE,uBADO;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAEH,IAAI,CAACI,KADT;AAEPC,UAAAA,YAAY,EAAEL,IAAI,CAACK;AAFZ;AAFI,OAAD,CAAd;AAOD,KATH;AAUD,GAXD,CAN+B,CAmB/B;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBtB,IAAAA,cAAc,CAACM,MAAD,CAAd,CACGS,IADH,CACQC,IAAI,IAAI;AACZH,MAAAA,cAAc,CAAC;AACbI,QAAAA,IAAI,EAAE,uBADO;AAEbC,QAAAA,OAAO,EAAE;AACPK,UAAAA,SAAS,EAAEP,IAAI,CAACI,KADT;AAEPC,UAAAA,YAAY,EAAEL,IAAI,CAACK;AAFZ;AAFI,OAAD,CAAd;AAOD,KATH;AAUD,GAXD,CApB+B,CAiC/B;;;AACA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtCb,IAAAA,cAAc,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AACAN,IAAAA,MAAM,CAACe,MAAD,CAAN;AACAA,IAAAA,MAAM,IAAI,WAAV,GAAwBZ,SAAS,EAAjC,GAAsCQ,SAAS,EAA/C;AACD,GAJD;;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEa,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,UAAU,EAAE;AAA7B,KAAT;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAElB,GAAnB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEmB,UAAAA,YAAY,EAAE,CAAhB;AAAmBC,UAAAA,WAAW,EAAE;AAAhC,SAAT;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEN,YAAnB;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,gCAAX;AAAmB,YAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,gCAAX;AAAmB,YAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA,kBAEIZ,WAAW,CAACO,SAAZ,CAAsBY,GAAtB,CAA0BC,IAAI,iBAC5B,QAAC,UAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,YAAY,EAAEpB,WAAW,CAACS;AAF5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPF,eAiBE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA,kBAEIT,WAAW,CAACW,SAAZ,CAAsBQ,GAAtB,CAA0BC,IAAI,iBAC5B,QAAC,UAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,YAAY,EAAEpB,WAAW,CAACS;AAF5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA7EM;;GAAMjB,M;;KAAAA,M","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\n// styles\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\n// Api\nimport { fetchFollowing } from \"../../apis/users\";\nimport { fetchFollowers } from \"../../apis/users\";\n// Reducer\nimport { followInitialState, followReducer } from '../../reducer/FollowReducer';\n// コンポーネント\nimport { FollowList } from '../../components/Lists/FollowList';\n\nexport const Follow = (props) => {\n  const userId = props.match.params.id\n  const [tab, setTab] = useState('following');\n  const [followState, followDispatch] = useReducer(followReducer, followInitialState);\n\n  // フォロー中のユーザーを取得する\n  const Following = () => {\n    fetchFollowing(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowing',\n          payload: {\n            following: data.users,\n            followingIds: data.followingIds,\n          }\n        });\n      });\n  }\n\n  // フォロワーを取得する\n  const Followers = () => {\n    fetchFollowers(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowers',\n          payload: {\n            followers: data.users,\n            followingIds: data.followingIds,\n          }\n        });\n      });\n  }\n\n  // タブ変更毎にデータをfetchする\n  const handleChange = (event, newTab) => {\n    followDispatch({ type: 'fetching' });\n    setTab(newTab);\n    newTab == 'following' ? Following() : Followers()\n  };\n\n  useEffect(() => {\n    Following()\n  }, [])\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={tab}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} >\n            <Tab label=\"フォロー中\" value=\"following\" />\n            <Tab label=\"フォロワー\" value=\"followers\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"following\">\n          {\n            followState.following.map(user =>\n              <FollowList\n                user={user}\n                followingIds={followState.followingIds}\n              />\n            )\n          }\n        </TabPanel>\n        <TabPanel value=\"followers\">\n          {\n            followState.followers.map(user =>\n              <FollowList\n                user={user}\n                followingIds={followState.followingIds}\n              />\n            )\n          }\n        </TabPanel>\n      </TabContext>\n    </Box>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}