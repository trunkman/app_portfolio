{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // style\n\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid } from \"@mui/material\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // コンポーネント\n\nimport { SettingDialog } from \"./Dialogs/SettingDialog\";\nimport { MicropostDialog } from \"./Dialogs/MicropostDialog\";\nimport { FollowButton } from \"./Buttons/FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Profile = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false);\n  const [openDialogPost, setOpenDialogPost] = useState(false);\n  const [followStatus, setFollowStatus] = useState(false); // 設定変更Dialogを開閉する関数群\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 投稿Dialogを開閉する関数群\n\n\n  const handleOpenPost = () => {\n    setOpenDialogPost(true);\n  };\n\n  const handleClosePost = () => {\n    setOpenDialogPost(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        width: 56,\n        height: 56\n      },\n      children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 65\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: props.user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u8FFD\\u52A0\\u4E88\\u5B9A\\u3002\\u3053\\u3053\\u306B\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u304C\\u8FFD\\u52A0\\u3055\\u308C\\u307E\\u3059\\u3002\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3067\\u3059\\u3002 \\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u81EA\\u5DF1\\u7D39\\u4ECB\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\\u8DA3\\u5473\\u306A\\u3069\\u304C\\u8A18\\u8F09\\u3055\\u308C\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          component: Link,\n          to: `/users/${props.user.id}/following`,\n          children: [props.following.length, \" \\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          component: Link,\n          to: `/users/${props.user.id}/followers`,\n          children: [props.followers.length, \"\\u30D5\\u30A9\\u30ED\\u30EF\\u30FC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), props.loginUser.id === props.user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOpenSetting,\n          children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u306E\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SettingDialog, {\n          handleClose: handleCloseSetting,\n          open: openSettingDialog,\n          user: props.loginUser,\n          dataFetching: props.dataFetching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleOpenPost,\n          children: \"\\u6295\\u7A3F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n        handleClose: handleClosePost,\n        open: openDialogPost,\n        user: props.loginUser,\n        dataFetching: props.dataFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FollowButton, {\n      followStatus: followStatus,\n      handleFollow: () => {\n        setFollowStatus();\n      },\n      userId: props.userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"d5Hkh8M8UaYWB5UHKh0EKFLFaPA=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Profile.jsx"],"names":["React","Fragment","useState","Link","Avatar","ListItem","Typography","Button","Grid","AccountCircle","SettingDialog","MicropostDialog","FollowButton","Profile","props","openSettingDialog","setOpenSettingDialog","openDialogPost","setOpenDialogPost","followStatus","setFollowStatus","handleOpenSetting","handleCloseSetting","handleOpenPost","handleClosePost","width","height","fontSize","user","name","id","following","length","followers","loginUser","dataFetching","userId"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\"\nimport { Link } from \"react-router-dom\";\n// style\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid } from \"@mui/material\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// コンポーネント\nimport { SettingDialog } from \"./Dialogs/SettingDialog\";\nimport { MicropostDialog } from \"./Dialogs/MicropostDialog\";\nimport { FollowButton } from \"./Buttons/FollowButton\";\n\nexport const Profile = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  const [openDialogPost, setOpenDialogPost] = useState(false)\n  const [followStatus, setFollowStatus] = useState(false)\n  // 設定変更Dialogを開閉する関数群\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n  // 投稿Dialogを開閉する関数群\n  const handleOpenPost = () => { setOpenDialogPost(true) }\n  const handleClosePost = () => { setOpenDialogPost(false) }\n\n  return (\n    <Fragment>\n      <h2>プロフィール</h2>\n      <Avatar sx={{ width: 56, height: 56 }} >\n        <AccountCircle sx={{ fontSize: 65 }} />\n      </Avatar>\n      <Typography variant=\"h6\">\n        {props.user.name}\n      </Typography>\n      <Typography variant=\"body1\">\n        プロフィールを追加予定。ここにプロフィールが追加されます。ユーザーのプロフィールです。\n        ユーザーの自己紹介となります。趣味などが記載されます。\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item sm={6}>\n          <ListItem\n            component={Link}\n            to={`/users/${props.user.id}/following`}>\n            {props.following.length} フォロー中\n          </ListItem>\n        </Grid>\n        <Grid item sm={6}>\n          <ListItem\n            component={Link}\n            to={`/users/${props.user.id}/followers`}>\n            {props.followers.length}\n            フォロワー\n          </ListItem>\n        </Grid>\n      </Grid>\n      {\n        (props.loginUser.id === props.user.id)\n          ? <>\n            <div>\n              <Button onClick={handleOpenSetting}>\n                プロフィールの編集\n              </Button>\n              <SettingDialog\n                handleClose={handleCloseSetting}\n                open={openSettingDialog}\n                user={props.loginUser}\n                dataFetching={props.dataFetching}\n              />\n            </div>\n            <div>\n              <Button variant=\"contained\" onClick={handleOpenPost}>\n                投稿\n              </Button>\n            </div>\n            <MicropostDialog\n              handleClose={handleClosePost}\n              open={openDialogPost}\n              user={props.loginUser}\n              dataFetching={props.dataFetching}\n            />\n          </>\n          :\n          <FollowButton\n            followStatus={followStatus}\n            handleFollow={() => { setFollowStatus() }}\n            userId={props.userId}\n          />\n      }\n    </Fragment >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}