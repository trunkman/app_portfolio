{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport IconButton from \"@mui/material/IconButton\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { deleteComment } from \"../../apis/comments\";\nimport { fetchMicropost } from \"../../apis/microposts\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'; // Component\n\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Comment = ({\n  comment,\n  user\n}) => {\n  _s();\n\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState); // 削除確認ダイアログの開閉\n\n  const [open, setOpen] = useState({\n    isOpen: false,\n    commentId: ''\n  });\n\n  const handleClose = () => setOpen({\n    isOpen: false\n  }); // コメントを削除する\n\n\n  const deleteSubmit = commentId => {\n    deleteComment(commentId);\n    handleClose();\n    alert('コメントを削除しました');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        my: 1,\n        borderTop: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n          sx: {\n            fontSize: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 2,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", user.name, \" \\u3055\\u3093 \\u3011 \", comment.created_at.substr(0, 19).replace('T', ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              my: 2\n            },\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), loginUserId === comment.user_id && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setOpen({\n          isOpen: true,\n          commentId: comment.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, comment.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: handleClose,\n      handleDelete: deleteSubmit,\n      message: 'コメントを削除',\n      open: open.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Comment, \"/4wGgVlDKwKupI3n3W15jP6wGhE=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx"],"names":["React","useContext","useState","AuthContext","Box","Typography","ListItem","ListItemAvatar","IconButton","AccountCircle","DeleteOutlinedIcon","deleteComment","fetchMicropost","dialogReducer","dialogInitialState","postReducer","postInitialState","DeleteDialog","Comment","comment","user","authState","dialogState","dialogDispatch","useReducer","postState","postDispatch","open","setOpen","isOpen","commentId","handleClose","deleteSubmit","alert","display","alignItems","my","borderTop","fontSize","pt","flexGrow","name","created_at","substr","replace","pl","letterSpacing","content","loginUserId","user_id","id","toString"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport IconButton from \"@mui/material/IconButton\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { deleteComment } from \"../../apis/comments\";\nimport { fetchMicropost } from \"../../apis/microposts\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'\n// Component\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\n\n\nexport const Comment = ({\n  comment,\n  user,\n}) => {\n  const { authState } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [postState, postDispatch] = useReducer(postReducer, postInitialState);\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    commentId: '',\n  });\n  const handleClose = () => setOpen({ isOpen: false });\n  // コメントを削除する\n  const deleteSubmit = (commentId) => {\n    deleteComment(commentId)\n    handleClose();\n    alert('コメントを削除しました')\n  }\n\n  return (\n    <>\n      <ListItem\n        key={comment.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          my: 1,\n          borderTop: 0.2,\n        }}>\n        <ListItemAvatar>\n          <AccountCircle sx={{ fontSize: 35 }} />\n        </ListItemAvatar>\n        <Box sx={{ pt: 2, flexGrow: 1 }}>\n          <Typography>\n            【 {user.name} さん 】 {comment.created_at.substr(0, 19).replace('T', ' ')}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, my: 2 }}>{comment.content}</Box>\n          </Typography>\n        </Box>\n        {loginUserId === comment.user_id && (\n          <IconButton onClick={() => setOpen({ isOpen: true, commentId: comment.id })}>\n            <DeleteOutlinedIcon />\n          </IconButton>\n        )}\n      </ListItem >\n      <DeleteDialog\n        handleClose={handleClose}\n        handleDelete={deleteSubmit}\n        message={'コメントを削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}