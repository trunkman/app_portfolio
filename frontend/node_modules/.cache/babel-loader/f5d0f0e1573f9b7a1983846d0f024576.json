{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx\";\nimport React from 'react'; // Style\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Typography from \"@mui/material/Typography\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MicropostDialog = ({\n  comments,\n  handleClose,\n  micropost,\n  open,\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => handleClose(),\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          alignItems: \"center\",\n          borderTop: 0.2,\n          display: 'flex',\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n            sx: {\n              fontSize: 45\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            py: 2,\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"\\u3010 \", user.name, \" \\u3055\\u3093 \\u3011 \", micropost.created_at.substr(0, 19).replace('T', ' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              pl: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                letterSpacing: 2,\n                mt: 2\n              },\n              children: micropost.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, micropost.id.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: comments.length !== 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pl: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            display: 'flex',\n            alignItems: \"center\",\n            my: 1,\n            borderTop: 0.2\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n              sx: {\n                fontSize: 35\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: 2,\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"\\u3010 \", comment.user.name, \" \\u3055\\u3093 \\u3011 \", comment.comment.created_at.substr(0, 19).replace('T', ' ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                pl: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  letterSpacing: 2,\n                  my: 2\n                },\n                children: comment.comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, comment.comment.id.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClose(),\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = MicropostDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MicropostDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx"],"names":["React","Button","Box","Dialog","DialogActions","DialogTitle","DialogContent","ListItem","ListItemAvatar","Typography","AccountCircle","MicropostDialog","comments","handleClose","micropost","open","user","alignItems","borderTop","display","mt","fontSize","py","flexGrow","name","created_at","substr","replace","pl","letterSpacing","content","id","toString","length","map","comment","my","pt"],"mappings":"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","sourcesContent":["import React from 'react';\n// Style\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n\n\nexport const MicropostDialog = ({\n  comments,\n  handleClose,\n  micropost,\n  open,\n  user,\n}) => {\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        <ListItem\n          key={micropost.id.toString()}\n          sx={{\n            alignItems: \"center\",\n            borderTop: 0.2,\n            display: 'flex',\n            mt: 2,\n          }}>\n          <ListItemAvatar>\n            <AccountCircle sx={{ fontSize: 45 }} />\n          </ListItemAvatar>\n          <Box sx={{ py: 2, flexGrow: 1 }}>\n            <Typography variant=\"h6\">\n              【 {user.name} さん 】 {micropost.created_at.substr(0, 19).replace('T', ' ')}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ pl: 1 }}>\n              <Box sx={{ letterSpacing: 2, mt: 2 }}>{micropost.content}</Box>\n            </Typography>\n          </Box>\n        </ListItem >\n      </DialogTitle>\n      <DialogContent>\n        {comments.length !== 0 &&\n          <Box sx={{ pl: 10 }}>\n            <h3>コメント</h3>\n            {\n              comments.map(comment =>\n                <ListItem\n                  key={comment.comment.id.toString()}\n                  sx={{\n                    display: 'flex',\n                    alignItems: \"center\",\n                    my: 1,\n                    borderTop: 0.2,\n                  }}>\n                  <ListItemAvatar>\n                    <AccountCircle sx={{ fontSize: 35 }} />\n                  </ListItemAvatar>\n                  <Box sx={{ pt: 2, flexGrow: 1 }} >\n                    <Typography>\n                      【 {comment.user.name} さん 】 {comment.comment.created_at.substr(0, 19).replace('T', ' ')}\n                    </Typography>\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\n                      <Box sx={{ letterSpacing: 2, my: 2 }}>{comment.comment.content}</Box>\n                    </Typography>\n                  </Box>\n                </ListItem>\n              )\n            }\n          </Box>\n        }\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}