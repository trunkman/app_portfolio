{"ast":null,"code":"import axios from 'axios';\nimport { signUp, userPath } from '../urls/index'; // ユーザーページを表示するapi\n\nexport const fetchUser = userId => {\n  return axios.get(userPath(userId)).then(res => {\n    console.log('user#show', res);\n    return res.data;\n  }).catch(e => console.error(e));\n}; // 新規登録するためのapi\n\nexport const postSignUp = params => {\n  return axios.post(signUp, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    },\n    withCredentials: true\n  }).then(res => {\n    if (res.data.logged_in) {\n      console.log('signup/user#create', res);\n      return res.data;\n    }\n  }).catch(e => {\n    console.error(e);\n    return 'nil';\n  });\n}; // ユーザー情報更新のapi\n\nexport const patchUpdate = params => {\n  return axios.patch(userPath(params.user.id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    },\n    withCredentials: true\n  }).then(res => {\n    if (res.data.logged_in) {\n      console.log('user#update', res);\n      return res.data;\n    }\n  }).catch(e => {\n    console.error(e);\n    return 'nil';\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/users.js"],"names":["axios","signUp","userPath","fetchUser","userId","get","then","res","console","log","data","catch","e","error","postSignUp","params","post","user","name","email","password","password_confirmation","withCredentials","logged_in","patchUpdate","patch","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAOJ,KAAK,CAACK,GAAN,CAAUH,QAAQ,CAACE,MAAD,CAAlB,EACJE,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKGC,CAAD,IAAOJ,OAAO,CAACK,KAAR,CAAcD,CAAd,CALT,CAAP;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAME,UAAU,GAAIC,MAAD,IAAY;AACpC,SAAOf,KAAK,CAACgB,IAAN,CAAWf,MAAX,EAAmB;AACxBgB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADT;AAEJC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFV;AAGJC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QAHb;AAIJC,MAAAA,qBAAqB,EAAEN,MAAM,CAACM;AAJ1B,KADkB;AAOxBC,IAAAA,eAAe,EAAE;AAPO,GAAnB,EASJhB,IATI,CASCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACG,IAAJ,CAASa,SAAb,EAAwB;AACtBf,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACA,aAAOA,GAAG,CAACG,IAAX;AACD;AACF,GAdI,EAeJC,KAfI,CAeEC,CAAC,IAAI;AACVJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,WAAO,KAAP;AACD,GAlBI,CAAP;AAmBD,CApBM,C,CAsBP;;AACA,OAAO,MAAMY,WAAW,GAAIT,MAAD,IAAY;AACrC,SAAOf,KAAK,CAACyB,KAAN,CAAYvB,QAAQ,CAACa,MAAM,CAACE,IAAP,CAAYS,EAAb,CAApB,EAAsC;AAC3CT,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADT;AAEJC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFV;AAGJC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QAHb;AAIJC,MAAAA,qBAAqB,EAAEN,MAAM,CAACM;AAJ1B,KADqC;AAO3CC,IAAAA,eAAe,EAAE;AAP0B,GAAtC,EASJhB,IATI,CASCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACG,IAAJ,CAASa,SAAb,EAAwB;AACtBf,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,aAAOA,GAAG,CAACG,IAAX;AACD;AACF,GAdI,EAeJC,KAfI,CAeEC,CAAC,IAAI;AACVJ,IAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,WAAO,KAAP;AACD,GAlBI,CAAP;AAmBD,CApBM","sourcesContent":["import axios from 'axios'\nimport { signUp, userPath } from '../urls/index'\n\n// ユーザーページを表示するapi\nexport const fetchUser = (userId) => {\n  return axios.get(userPath(userId))\n    .then(res => {\n      console.log('user#show', res)\n      return res.data\n    })\n    .catch((e) => console.error(e))\n}\n\n// 新規登録するためのapi\nexport const postSignUp = (params) => {\n  return axios.post(signUp, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    },\n    withCredentials: true\n  })\n    .then(res => {\n      if (res.data.logged_in) {\n        console.log('signup/user#create', res);\n        return res.data;\n      }\n    })\n    .catch(e => {\n      console.error(e);\n      return 'nil'\n    })\n}\n\n// ユーザー情報更新のapi\nexport const patchUpdate = (params) => {\n  return axios.patch(userPath(params.user.id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    },\n    withCredentials: true\n  })\n    .then(res => {\n      if (res.data.logged_in) {\n        console.log('user#update', res);\n        return res.data;\n      }\n    })\n    .catch(e => {\n      console.error(e);\n      return 'nil'\n    })\n}\n"]},"metadata":{},"sourceType":"module"}