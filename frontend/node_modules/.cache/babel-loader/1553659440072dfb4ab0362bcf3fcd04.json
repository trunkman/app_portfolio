{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton'; // アイコン\n\nimport MenuIcon from '@mui/icons-material/Menu'; // Api\n\nimport { postLogIn } from '../../apis/sessions';\nimport { deleteLogout } from \"../../apis/sessions\";\nimport { postMicropost } from '../../apis/microposts'; // Reducer\n\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'; // Component\n\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton';\nimport { MicropostDialog } from '../../components/Dialogs/MicropostDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n\n  const handleClose = () => authDispatch({\n    type: 'close'\n  });\n\n  const handleLogin = data => {\n    authDispatch({\n      type: 'login',\n      payload: data.user\n    });\n  };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout'\n    });\n  };\n\n  const submitLogin = () => {\n    postLogIn({\n      email: authState.email,\n      password: authState.password,\n      remember_me: authState.remenberMe\n    }).then(data => {\n      handleLogin(data);\n      handleClose();\n    });\n  };\n\n  const submitLogout = () => {\n    deleteLogout().then(() => {\n      handleLogout();\n      history.push(`/`);\n      alert('ログアウトを成功しました');\n    });\n  };\n\n  const {\n    postState,\n    postDispatch\n  } = useReducer(postReducer, postInitialState);\n\n  const submitPost = () => {\n    postMicropost({\n      content: postState.content,\n      user_id: authState.loginUser.id\n    }).then(data => {\n      postDispatch({\n        type: 'reset'\n      });\n    });\n  };\n\n  const open = props.open;\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"open drawer\",\n        onClick: () => props.handleDrawerOpen(),\n        edge: \"start\",\n        sx: {\n          marginRight: '36px',\n          ...(open && {\n            display: 'none'\n          })\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n          sx: {\n            marginRight: '36px',\n            ...(open && {\n              display: 'none'\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        flexGrow: 1,\n        sx: open && {\n          display: 'none'\n        },\n        children: \"\\u7761\\u7720\\u8CA0\\u50B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: Link,\n        onClick: () => postDispatch({\n          type: open\n        }),\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n        open: postState.open,\n        handleClose: () => postDispatch({\n          type: close\n        }),\n        handleSubmit: submitPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          px: 4\n        },\n        variant: \"body1\",\n        component: Link,\n        to: `/booksearch`,\n        children: \"\\u672C\\u306E\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginControlBottun, {\n        handleLogOut: submitLogout,\n        handleLogIn: submitLogin,\n        loginUser: authState.loginUser,\n        isLoggedIn: authState.loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"b4VWOS+dJOTKPYfulhHA3H6f9ss=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx"],"names":["React","useState","useReducer","useContext","Link","useHistory","AuthContext","styled","MuiAppBar","Toolbar","Typography","IconButton","MenuIcon","postLogIn","deleteLogout","postMicropost","postReducer","postInitialState","LoginControlBottun","MicropostDialog","Header","props","history","authState","authDispatch","handleClose","type","handleLogin","data","payload","user","handleLogout","submitLogin","email","password","remember_me","remenberMe","then","submitLogout","push","alert","postState","postDispatch","submitPost","content","user_id","loginUser","id","open","AppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","drawerWidth","width","enteringScreen","handleDrawerOpen","marginRight","display","close","px","loggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n// アイコン\nimport MenuIcon from '@mui/icons-material/Menu';\n// Api\nimport { postLogIn } from '../../apis/sessions';\nimport { deleteLogout } from \"../../apis/sessions\"\nimport { postMicropost } from '../../apis/microposts';\n// Reducer\nimport { postReducer, postInitialState } from '../../reducer/PostReducer'\n// Component\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton'\nimport { MicropostDialog } from '../../components/Dialogs/MicropostDialog';\n\nexport const Header = (props) => {\n  const history = useHistory()\n\n  const { authState, authDispatch } = useContext(AuthContext);\n\n  const handleClose = () => authDispatch({ type: 'close' })\n\n  const handleLogin = (data) => {\n    authDispatch({\n      type: 'login',\n      payload: data.user,\n    });\n  };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout',\n    });\n  };\n\n  const submitLogin = () => {\n    postLogIn({\n      email: authState.email,\n      password: authState.password,\n      remember_me: authState.remenberMe,\n    }).then(data => {\n      handleLogin(data);\n      handleClose();\n    });\n  };\n\n  const submitLogout = () => {\n    deleteLogout()\n      .then(() => {\n        handleLogout();\n        history.push(`/`);\n        alert('ログアウトを成功しました');\n      });\n  };\n\n  const { postState, postDispatch } = useReducer(postReducer, postInitialState);\n\n  const submitPost = () => {\n    postMicropost({\n      content: postState.content,\n      user_id: authState.loginUser.id,\n    }).then(data => {\n      postDispatch({ type: 'reset' });\n    });\n  };\n\n  const open = props.open\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <AppBar position=\"fixed\" open={open}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => props.handleDrawerOpen()}\n          edge=\"start\"\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon\n            sx={{\n              marginRight: '36px',\n              ...(open && { display: 'none' }),\n            }}\n          />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" flexGrow={1}\n          sx={open && { display: 'none' }}\n        >\n          睡眠負債\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          component={Link}\n          onClick={() => postDispatch({ type: open })}\n        >\n          投稿\n        </Typography>\n        <MicropostDialog\n          open={postState.open}\n          handleClose={() => postDispatch({ type: close })}\n          handleSubmit={submitPost}\n        />\n        <Typography\n          sx={{ px: 4 }}\n          variant=\"body1\"\n          component={Link}\n          to={`/booksearch`}\n        >\n          本の検索\n        </Typography>\n        <LoginControlBottun\n          handleLogOut={submitLogout}\n          handleLogIn={submitLogin}\n          loginUser={authState.loginUser}\n          isLoggedIn={authState.loggedIn}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}