{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react'; // Style\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\"; // Icon\n\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications'; // Reducer\n\nimport { notificationReducer, notificationInitialState } from '../../reducer/NotificationReducer'; // Component\n\nimport { NotificationComment } from '../Items/NotificationComment';\nimport { NotificationEntry } from '../Items/NotificationEntry';\nimport { NotificationFollow } from '../Items/NotificationFollow';\nimport { NotificationLike } from '../Items/NotificationLike';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  'title': {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  'button': {\n    background: '#42a5f5',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    padding: '15px 10px'\n  }\n}));\nexport const NotificationDialog = ({\n  fetchDetailMicropost,\n  handleClose,\n  open\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState); // 通知一覧を取得する\n\n  const notifications = () => {\n    fetchNotifications().then(data => {\n      data && notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n    });\n  }; // チェック済み通知をすべて削除する\n\n\n  const allDelete = () => {\n    deleteNotifications().then(data => {\n      notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n      notifications();\n    });\n  };\n\n  useEffect(() => {\n    notifications();\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: \"\\u901A\\u77E5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: allDelete,\n          children: [/*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \"\\u3059\\u3079\\u3066\\u524A\\u9664\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: notificationState.notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u901A\\u77E5\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: notificationState.notifications.map(element => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [element.notification.action === 'like' && /*#__PURE__*/_jsxDEV(NotificationLike, {\n                  handleClick: fetchDetailMicropost,\n                  handleClose: handleClose,\n                  notification: element.notification,\n                  visitor_user: element.visitor_user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this), element.notification.action === 'comment' && /*#__PURE__*/_jsxDEV(NotificationComment, {\n                  handleClick: fetchDetailMicropost,\n                  handleClose: handleClose,\n                  notification: element.notification,\n                  visitor_user: element.visitor_user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this), element.notification.action === 'follow' && /*#__PURE__*/_jsxDEV(NotificationFollow, {\n                  handleClose: handleClose,\n                  notification: element.notification,\n                  visitor_user: element.visitor_user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this), element.notification.action === 'entry' && /*#__PURE__*/_jsxDEV(NotificationEntry, {\n                  handleClose: handleClose,\n                  notification: element.notification,\n                  visitor_user: element.visitor_user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"\\u9589\\u3058\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDialog, \"zB9wciZNRGLdjSaJaDN1awIhZSg=\", false, function () {\n  return [useStyles];\n});\n\n_c = NotificationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx"],"names":["React","useEffect","useReducer","Button","Box","createStyles","makeStyles","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","List","DeleteOutlinedIcon","fetchNotifications","deleteNotifications","notificationReducer","notificationInitialState","NotificationComment","NotificationEntry","NotificationFollow","NotificationLike","useStyles","display","justifyContent","background","border","borderRadius","color","height","padding","NotificationDialog","fetchDetailMicropost","handleClose","open","classes","notificationState","notificationDispatch","notifications","then","data","type","payload","allDelete","title","button","length","map","element","notification","action","visitor_user"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n// Style\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\";\n// Icon\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications';\n// Reducer\nimport { notificationReducer, notificationInitialState } from '../../reducer/NotificationReducer'\n// Component\nimport { NotificationComment } from '../Items/NotificationComment';\nimport { NotificationEntry } from '../Items/NotificationEntry';\nimport { NotificationFollow } from '../Items/NotificationFollow';\nimport { NotificationLike } from '../Items/NotificationLike';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'title': {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    'button': {\n      background: '#42a5f5',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      padding: '15px 10px',\n    }\n  }),\n);\n\nexport const NotificationDialog = ({\n  fetchDetailMicropost,\n  handleClose,\n  open,\n}) => {\n  const classes = useStyles();\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState);\n  // 通知一覧を取得する\n  const notifications = () => {\n    fetchNotifications()\n      .then(data => {\n        data &&\n          notificationDispatch({\n            type: 'fetchSuccess',\n            payload: data.notifications,\n          });\n      });\n  }\n  // チェック済み通知をすべて削除する\n  const allDelete = () => {\n    deleteNotifications()\n      .then(data => {\n        notificationDispatch({\n          type: 'fetchSuccess',\n          payload: data.notifications,\n        });\n        notifications();\n      });\n  }\n\n  useEffect(() => {\n    notifications();\n  }, [open])\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll='paper'\n      >\n        <DialogTitle className={classes.title}>\n          <Box>\n            通知\n          </Box>\n          <Button className={classes.button} onClick={allDelete}>\n            <DeleteOutlinedIcon />\n            すべて削除\n          </Button>\n        </DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText >\n            {notificationState.notifications.length === 0 ? <p>通知はありません</p> :\n              <>\n                <List>\n                  {notificationState.notifications.map(element =>\n                    <>\n                      {element.notification.action === 'like' &&\n                        <NotificationLike\n                          handleClick={fetchDetailMicropost}\n                          handleClose={handleClose}\n                          notification={element.notification}\n                          visitor_user={element.visitor_user}\n                        />\n                      }\n                      {element.notification.action === 'comment' &&\n                        <NotificationComment\n                          handleClick={fetchDetailMicropost}\n                          handleClose={handleClose}\n                          notification={element.notification}\n                          visitor_user={element.visitor_user}\n                        />\n                      }\n                      {element.notification.action === 'follow' &&\n                        <NotificationFollow\n                          handleClose={handleClose}\n                          notification={element.notification}\n                          visitor_user={element.visitor_user}\n                        />\n                      }\n                      {element.notification.action === 'entry' &&\n                        <NotificationEntry\n                          handleClose={handleClose}\n                          notification={element.notification}\n                          visitor_user={element.visitor_user}\n                        />\n                      }\n                    </>\n                  )}\n                </List>\n              </>\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleClose() }}>\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}