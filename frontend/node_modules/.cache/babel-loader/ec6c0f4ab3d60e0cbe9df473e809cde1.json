{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx\";\nimport React from \"react\"; // Style\n\nimport { Emoji } from 'emoji-mart';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Box from '@mui/material/Box'; // Component\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calendar = ({\n  open,\n  handleClose,\n  handleOpen,\n  recordState,\n  recordDispatch\n}) => {\n  // 日記ダイアログを表示\n  const handleClick = eventInfo => {\n    recordDispatch({\n      type: 'preUpdate',\n      payload: {\n        id: eventInfo.event.id,\n        date: eventInfo.event.startStr,\n        sleepingHours: eventInfo.event.groupId,\n        feeling: eventInfo.event.title\n      }\n    });\n    handleOpen();\n  }; // カレンダー内の日記一覧を表示\n\n\n  const renderEventContent = eventInfo => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Emoji, {\n      emoji: eventInfo.event.title,\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      businessHours: true,\n      contentHeight: \"auto\",\n      events: recordState.diaries,\n      eventClick: handleClick,\n      eventContent: renderEventContent,\n      dayCellContent: e => {\n        e.dayNumberText = e.dayNumberText.replace('日', '');\n      },\n      initialView: \"dayGridMonth\",\n      locale: \"ja\",\n      plugins: [dayGridPlugin, interactionPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      handleClose: () => handleClose(),\n      open: open,\n      recordState: recordState,\n      recordDispatch: recordDispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx"],"names":["React","Emoji","FullCalendar","EventContentArg","dayGridPlugin","interactionPlugin","Box","DiaryDialog","Calendar","open","handleClose","handleOpen","recordState","recordDispatch","handleClick","eventInfo","type","payload","id","event","date","startStr","sleepingHours","groupId","feeling","title","renderEventContent","textAlign","diaries","e","dayNumberText","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,qBAA9C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,IADuB;AAEvBC,EAAAA,WAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA,WAJuB;AAKvBC,EAAAA;AALuB,CAAD,KAMlB;AACJ;AACA,QAAMC,WAAW,GAAIC,SAAD,IAAgC;AAClDF,IAAAA,cAAc,CAAC;AACbG,MAAAA,IAAI,EAAE,WADO;AAEbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAEH,SAAS,CAACI,KAAV,CAAgBD,EADb;AAEPE,QAAAA,IAAI,EAAEL,SAAS,CAACI,KAAV,CAAgBE,QAFf;AAGPC,QAAAA,aAAa,EAAEP,SAAS,CAACI,KAAV,CAAgBI,OAHxB;AAIPC,QAAAA,OAAO,EAAET,SAAS,CAACI,KAAV,CAAgBM;AAJlB;AAFI,KAAD,CAAd;AASAd,IAAAA,UAAU;AACX,GAXD,CAFI,CAcJ;;;AACA,QAAMe,kBAAkB,GAAIX,SAAD,iBACzB,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KAAT;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEZ,SAAS,CAACI,KAAV,CAAgBM,KADzB;AAEE,MAAA,IAAI,EAAE;AAFR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,aAAa,EAAE,IADjB;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,MAAM,EAAEb,WAAW,CAACgB,OAHtB;AAIE,MAAA,UAAU,EAAEd,WAJd;AAKE,MAAA,YAAY,EAAEY,kBALhB;AAME,MAAA,cAAc,EAAGG,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACC,aAAF,GAAkBD,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAAlB;AAAoD,OAN/E;AAOE,MAAA,WAAW,EAAC,cAPd;AAQE,MAAA,MAAM,EAAC,IART;AASE,MAAA,OAAO,EAAE,CAAC3B,aAAD,EAAgBC,iBAAhB;AATX;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAE,WAAF;AACE,MAAA,WAAW,EAAE,MAAMK,WAAW,EADhC;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,WAAW,EAAEG,WAHf;AAIE,MAAA,cAAc,EAAEC;AAJlB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApDM;KAAML,Q","sourcesContent":["import React from \"react\";\n// Style\nimport { Emoji } from 'emoji-mart';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Box from '@mui/material/Box';\n// Component\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\n\nexport const Calendar = ({\n  open,\n  handleClose,\n  handleOpen,\n  recordState,\n  recordDispatch,\n}) => {\n  // 日記ダイアログを表示\n  const handleClick = (eventInfo: EventContentArg) => {\n    recordDispatch({\n      type: 'preUpdate',\n      payload: {\n        id: eventInfo.event.id,\n        date: eventInfo.event.startStr,\n        sleepingHours: eventInfo.event.groupId,\n        feeling: eventInfo.event.title,\n      },\n    });\n    handleOpen();\n  }\n  // カレンダー内の日記一覧を表示\n  const renderEventContent = (eventInfo: EventContentArg) => (\n    <Box sx={{ textAlign: \"center\" }}>\n      <Emoji\n        emoji={eventInfo.event.title}\n        size={20}\n      />\n    </Box>\n  )\n\n  return (\n    <Box>\n      <FullCalendar\n        businessHours={true}\n        contentHeight='auto'\n        events={recordState.diaries}\n        eventClick={handleClick}\n        eventContent={renderEventContent}\n        dayCellContent={(e) => { e.dayNumberText = e.dayNumberText.replace('日', '') }}\n        initialView=\"dayGridMonth\"\n        locale=\"ja\"\n        plugins={[dayGridPlugin, interactionPlugin]}\n      />\n\n      < DiaryDialog\n        handleClose={() => handleClose()}\n        open={open}\n        recordState={recordState}\n        recordDispatch={recordDispatch}\n      />\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}