{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/LogInDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { postLogIn } from '../apis/users'; // ダイアログのstyle\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LogInDialog = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory(); // ログインapiを呼び出すCallback関数\n\n  const handleSubmit = () => {\n    postLogIn({\n      email: email,\n      password: password\n    }).then(data => {\n      if (data.status === 'created') {\n        props.handleLogin(data);\n        history.push(`/user/${data.user.id}`);\n      } else alert('メールアドレスまたはパスワードに誤りがあります');\n    });\n  }; // 返り値：新規登録ダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u4E0B\\u8A18\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u3001\\u30ED\\u30B0\\u30A4\\u30F3\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        type: \"password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleClose,\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        autoFocus: true,\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogInDialog, \"KhoxFlMWxXkzg9TaS9xidBqZqGw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogInDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/LogInDialog.jsx"],"names":["React","useState","useHistory","postLogIn","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","TextField","LogInDialog","props","email","setEmail","password","setPassword","history","handleSubmit","then","data","status","handleLogin","push","user","id","alert","open","handleClose","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { postLogIn } from '../apis/users';\n\n// ダイアログのstyle\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n\n\nexport const LogInDialog = (props) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  // ログインapiを呼び出すCallback関数\n  const handleSubmit = () => {\n    postLogIn({\n      email: email,\n      password: password,\n    }).then((data) => {\n      if (data.status === 'created') {\n        props.handleLogin(data)\n        history.push(`/user/${data.user.id}`)\n      }\n      else\n        alert('メールアドレスまたはパスワードに誤りがあります');\n    })\n  };\n\n  // 返り値：新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <DialogTitle>\n        ログイン\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し、ログインください。\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"email\"\n          label=\"E-mail\"\n          type=\"email\"\n          required\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          fullWidth variant=\"standard\"\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"password\"\n          label=\"パスワード\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          fullWidth\n          variant=\"standard\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose}>キャンセル</Button>\n        <Button type='submit' onClick={handleSubmit} autoFocus>ログイン</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}