{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/ImageButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Style\n\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"; // Api\n\nimport { fetchPresigned, postS3, postAvatarImage } from \"../../apis/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  'button': {\n    background: '#444',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    marginLeft: 8,\n    padding: '15px 20px'\n  }\n}));\nexport const ImageButton = props => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleChange = e => {\n    const file = e.target.files[0];\n    const formData = new FormData(); // 対象の書名付きURLを取得する\n\n    fetchPresigned(file.name) // S3にPOSTする form に持たせるデータを生成する\n    .then(data => {\n      const object = data.fields;\n\n      for (let key in object) {\n        formData.append(key, object[key]);\n      }\n\n      formData.append('file', file); // S3に画像をアップロード\n\n      postS3({\n        presignedObjectUrl: data.url,\n        formData: formData\n      }).then(data => {\n        const matchedObject = data.match(/<Location>(.*?)<\\/Location>/);\n        const s3Url = unescape(matchedObject[1]); // DBに画像URLを登録\n\n        console.log(s3Url); // postAvatarImage({ avatarUrl: s3Url });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"span\",\n      className: classes.button,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        id: \"upload-file\",\n        type: \"file\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ImageButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImageButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/ImageButton.jsx"],"names":["React","Button","createStyles","makeStyles","fetchPresigned","postS3","postAvatarImage","useStyles","background","border","borderRadius","color","height","marginLeft","padding","ImageButton","props","classes","handleChange","e","file","target","files","formData","FormData","name","then","data","object","fields","key","append","presignedObjectUrl","url","matchedObject","match","s3Url","unescape","console","log","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,MAAzB,EAAiCC,eAAjC,QAAwD,kBAAxD;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,MAC3BD,YAAY,CAAC;AACX,YAAU;AACRM,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,MAAM,EAAE,CAFA;AAGRC,IAAAA,YAAY,EAAE,CAHN;AAIRC,IAAAA,KAAK,EAAE,OAJC;AAKRC,IAAAA,MAAM,EAAE,EALA;AAMRC,IAAAA,UAAU,EAAE,CANJ;AAORC,IAAAA,OAAO,EAAE;AAPD;AADC,CAAD,CADc,CAA5B;AAcA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFwB,CAGxB;;AACApB,IAAAA,cAAc,CAACgB,IAAI,CAACK,IAAN,CAAd,CACE;AADF,KAEGC,IAFH,CAEQC,IAAI,IAAI;AACZ,YAAMC,MAAM,GAAGD,IAAI,CAACE,MAApB;;AACA,WAAK,IAAIC,GAAT,IAAgBF,MAAhB,EAAwB;AACtBL,QAAAA,QAAQ,CAACQ,MAAT,CAAgBD,GAAhB,EAAqBF,MAAM,CAACE,GAAD,CAA3B;AACD;;AACDP,MAAAA,QAAQ,CAACQ,MAAT,CAAgB,MAAhB,EAAwBX,IAAxB,EALY,CAMZ;;AACAf,MAAAA,MAAM,CAAC;AACL2B,QAAAA,kBAAkB,EAAEL,IAAI,CAACM,GADpB;AAELV,QAAAA,QAAQ,EAAEA;AAFL,OAAD,CAAN,CAIGG,IAJH,CAIQC,IAAI,IAAI;AACZ,cAAMO,aAAa,GAAGP,IAAI,CAACQ,KAAL,CAAW,6BAAX,CAAtB;AACA,cAAMC,KAAK,GAAGC,QAAQ,CAACH,aAAa,CAAC,CAAD,CAAd,CAAtB,CAFY,CAGZ;;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAJY,CAKZ;AACD,OAVH;AAWD,KApBH;AAqBD,GAzBD;;AA4BA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,SAAS,EAAEnB,OAAO,CAACuB,MAHrB;AAAA,6BAKE;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,EAAE,EAAC,aAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAErB,CAAC,IAAID,YAAY,CAACC,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CA/CM;;GAAMJ,W;UACKR,S;;;KADLQ,W","sourcesContent":["import React from \"react\";\n// Style\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// Api\nimport { fetchPresigned, postS3, postAvatarImage } from \"../../apis/image\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'button': {\n      background: '#444',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      marginLeft: 8,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const ImageButton = (props) => {\n  const classes = useStyles();\n\n  const handleChange = e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    // 対象の書名付きURLを取得する\n    fetchPresigned(file.name)\n      // S3にPOSTする form に持たせるデータを生成する\n      .then(data => {\n        const object = data.fields\n        for (let key in object) {\n          formData.append(key, object[key]);\n        }\n        formData.append('file', file)\n        // S3に画像をアップロード\n        postS3({\n          presignedObjectUrl: data.url,\n          formData: formData,\n        })\n          .then(data => {\n            const matchedObject = data.match(/<Location>(.*?)<\\/Location>/);\n            const s3Url = unescape(matchedObject[1]);\n            // DBに画像URLを登録\n            console.log(s3Url)\n            // postAvatarImage({ avatarUrl: s3Url });\n          })\n      })\n  }\n\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        component=\"span\"\n        className={classes.button}\n      >\n        <input\n          accept=\"image/*\"\n          id='upload-file'\n          type='file'\n          onChange={e => handleChange(e)}\n        />\n      </Button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}