{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // styles\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\"; // Icon\n\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined'; // Api\n\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications'; // Reducer\n\nimport { notificationReducer, notificationInitialState } from '../../reducer/NotificationReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  'title': {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  'button': {\n    background: '#42a5f5',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 30,\n    padding: '15px 10px'\n  }\n}));\nexport const NotificationDialog = ({\n  handleClose,\n  open\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState); // 通知一覧を取得する\n\n  const notifications = () => {\n    fetchNotifications().then(data => {\n      data && notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n    });\n  }; // チェック済み通知をすべて削除する\n\n\n  const allDelete = () => {\n    deleteNotifications().then(data => {\n      notificationDispatch({\n        type: 'fetchSuccess',\n        payload: data.notifications\n      });\n      notifications();\n    });\n  };\n\n  useEffect(() => {\n    notifications();\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: \"\\u901A\\u77E5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: allDelete,\n          children: [/*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), \"\\u3059\\u3079\\u3066\\u524A\\u9664\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: notificationState.notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u901A\\u77E5\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: notificationState.notifications.map(notification => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [notification.notification.action === 'like' && /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    component: button,\n                    to: `/users/${notification.visitor_user.id}`,\n                    onClick: () => handleClose(),\n                    children: notification.visitor_user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, this), \"\\u3055\\u3093\\u304C\", authState.loginUser.name, \"\\u3055\\u3093\\u306E\", notification.notification.micropost_id, \"\\u306B\\u3044\\u3044\\u306D\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n                }, notification.notification.id.toString(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this), notification.notification.action === 'comment' && /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/users/${notification.visitor_user.id}`,\n                    onClick: () => handleClose(),\n                    children: notification.visitor_user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 27\n                  }, this), \"\\u3055\\u3093\\u304C\", authState.loginUser.name, \"\\u3055\\u3093\\u306E\", notification.notification.comment_id, \"\\u306B\\u30B3\\u30E1\\u30F3\\u30C8\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n                }, notification.notification.id.toString(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this), notification.notification.action === 'follow' && /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/users/${notification.visitor_user.id}`,\n                    onClick: () => handleClose(),\n                    children: notification.visitor_user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 27\n                  }, this), \"\\u3055\\u3093\\u304C\", authState.loginUser.name, \"\\u3055\\u3093\\u3092\\u30D5\\u30A9\\u30ED\\u30FC\\u3057\\u307E\\u3057\\u305F\\u3002\"]\n                }, notification.notification.id.toString(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this), notification.notification.action === 'entry' && /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/users/${notification.visitor_user.id}`,\n                    onClick: () => handleClose(),\n                    children: notification.visitor_user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 27\n                  }, this), \"\\u3055\\u3093\\u304C\", authState.loginUser.name, \"\\u3055\\u3093\", notification.notification.entry_id, \"\\u3068\\u306E\\u30C8\\u30FC\\u30AF\\u30EB\\u30FC\\u30E0\\u3092\\u4F5C\\u308A\\u307E\\u3057\\u305F\\u3002\"]\n                }, notification.notification.id.toString(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleClose();\n          },\n          children: \"\\u9589\\u3058\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDialog, \"QiHCcucFUlqCkbuq9kXajor1tNA=\", false, function () {\n  return [useStyles];\n});\n\n_c = NotificationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx"],"names":["React","useContext","useEffect","useReducer","Link","AuthContext","Button","Box","createStyles","makeStyles","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","List","ListItem","DeleteOutlinedIcon","fetchNotifications","deleteNotifications","notificationReducer","notificationInitialState","useStyles","display","justifyContent","background","border","borderRadius","color","height","padding","NotificationDialog","handleClose","open","classes","authState","notificationState","notificationDispatch","notifications","then","data","type","payload","allDelete","title","button","length","map","notification","action","visitor_user","id","name","loginUser","micropost_id","toString","comment_id","entry_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// styles\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n// Icon\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n// Api\nimport { fetchNotifications, deleteNotifications } from '../../apis/notifications';\n// Reducer\nimport { notificationReducer, notificationInitialState } from '../../reducer/NotificationReducer'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'title': {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    'button': {\n      background: '#42a5f5',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      padding: '15px 10px',\n    }\n  }),\n);\n\nexport const NotificationDialog = ({\n  handleClose,\n  open,\n}) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState);\n\n  // 通知一覧を取得する\n  const notifications = () => {\n    fetchNotifications()\n      .then(data => {\n        data &&\n          notificationDispatch({\n            type: 'fetchSuccess',\n            payload: data.notifications,\n          });\n      });\n  }\n  // チェック済み通知をすべて削除する\n  const allDelete = () => {\n    deleteNotifications()\n      .then(data => {\n        notificationDispatch({\n          type: 'fetchSuccess',\n          payload: data.notifications,\n        });\n        notifications();\n      });\n  }\n\n  useEffect(() => {\n    notifications();\n  }, [open])\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll='paper'\n      >\n        <DialogTitle className={classes.title}>\n          <Box>\n            通知\n          </Box>\n          <Button className={classes.button} onClick={allDelete}>\n            <DeleteOutlinedIcon />\n            すべて削除\n          </Button>\n        </DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText >\n            {notificationState.notifications.length === 0 ? <p>通知はありません</p> :\n              <>\n                <List>\n                  {notificationState.notifications.map(notification =>\n                    <>\n                      {\n                        notification.notification.action === 'like' &&\n                        <ListItem\n                          key={notification.notification.id.toString()}\n                        >\n                          <Link\n                            component={button}\n                            to={`/users/${notification.visitor_user.id}`}\n                            onClick={() => handleClose()}\n                          >\n                            {notification.visitor_user.name}\n                          </Link>\n                          さんが{authState.loginUser.name}さんの\n                          {notification.notification.micropost_id}にいいねしました。\n                        </ListItem>\n                      }\n                      {\n                        notification.notification.action === 'comment' &&\n                        <ListItem\n                          key={notification.notification.id.toString()}\n                        >\n                          <Link\n                            to={`/users/${notification.visitor_user.id}`}\n                            onClick={() => handleClose()}\n                          >\n                            {notification.visitor_user.name}\n                          </Link>\n                          さんが{authState.loginUser.name}さんの\n                          {notification.notification.comment_id}にコメントしました。\n\n                        </ListItem>\n                      }\n                      {\n                        notification.notification.action === 'follow' &&\n                        <ListItem\n                          key={notification.notification.id.toString()}\n                        >\n                          <Link\n                            to={`/users/${notification.visitor_user.id}`}\n                            onClick={() => handleClose()}\n                          >\n                            {notification.visitor_user.name}\n                          </Link>\n                          さんが{authState.loginUser.name}さんをフォローしました。\n                        </ListItem>\n                      }\n                      {\n                        notification.notification.action === 'entry' &&\n                        <ListItem\n                          key={notification.notification.id.toString()}\n                        >\n                          <Link\n                            to={`/users/${notification.visitor_user.id}`}\n                            onClick={() => handleClose()}\n                          >\n                            {notification.visitor_user.name}\n                          </Link>\n                          さんが{authState.loginUser.name}さん\n                          {notification.notification.entry_id}とのトークルームを作りました。\n                        </ListItem>\n                      }\n                    </>\n                  )}\n                </List>\n              </>\n            }\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { handleClose() }}>\n            閉じる\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}