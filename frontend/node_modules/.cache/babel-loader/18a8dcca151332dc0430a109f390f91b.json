{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/SideProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // style\n\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid } from \"@mui/material\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // コンポーネント\n\nimport { MicropostDialog } from \"./Dialogs/MicropostDialog\";\nimport { FollowButton } from \"./Buttons/FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SideProfile = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false);\n  const [openDialogPost, setOpenDialogPost] = useState(false);\n  const [followStatus, setFollowStatus] = useState(false); // 設定変更Dialogを開閉する関数群\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 投稿Dialogを開閉する関数群\n\n\n  const handleOpenPost = () => {\n    setOpenDialogPost(true);\n  };\n\n  const handleClosePost = () => {\n    setOpenDialogPost(false);\n  }; // useEffect(() => {\n  //   fetchFollow({ userId: props.user.id })\n  //     .then(data => setFollowStatus(data))\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        width: 56,\n        height: 56\n      },\n      component: Link,\n      to: `/users/${props.user.id}`,\n      children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 65\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: props.user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"props.user.profile.\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u8FFD\\u52A0\\u4E88\\u5B9A\\u3002\\u3053\\u3053\\u306B\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u304C\\u8FFD\\u52A0\\u3055\\u308C\\u307E\\u3059\\u3002\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3067\\u3059\\u3002 \\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u81EA\\u5DF1\\u7D39\\u4ECB\\u3068\\u306A\\u308A\\u307E\\u3059\\u3002\\u8DA3\\u5473\\u306A\\u3069\\u304C\\u8A18\\u8F09\\u3055\\u308C\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          component: Link,\n          to: `/users/${props.user.id}/following`,\n          children: [props.following.length, \" \\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          component: Link,\n          to: `/users/${props.user.id}/followers`,\n          children: [props.followers.length, \" \\u30D5\\u30A9\\u30ED\\u30EF\\u30FC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        component: Link,\n        to: `/users/${props.user.id}/microposts`,\n        children: [props.microposts.length, \" \\u3064\\u3076\\u3084\\u304D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), props.loginUser.id === props.user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleOpenPost,\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n        handleClose: handleClosePost,\n        open: openDialogPost,\n        user: props.loginUser,\n        dataFetching: props.dataFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FollowButton, {\n      followStatus: followStatus,\n      handleFollow: () => {\n        setFollowStatus();\n      },\n      userId: props.userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SideProfile, \"d5Hkh8M8UaYWB5UHKh0EKFLFaPA=\");\n\n_c = SideProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideProfile\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/SideProfile.jsx"],"names":["React","useState","Link","Avatar","ListItem","Typography","Button","Grid","AccountCircle","MicropostDialog","FollowButton","SideProfile","props","openSettingDialog","setOpenSettingDialog","openDialogPost","setOpenDialogPost","followStatus","setFollowStatus","handleOpenSetting","handleCloseSetting","handleOpenPost","handleClosePost","width","height","user","id","fontSize","name","following","length","followers","microposts","loginUser","dataFetching","userId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\";\n// style\nimport { Avatar, ListItem, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid } from \"@mui/material\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// コンポーネント\nimport { MicropostDialog } from \"./Dialogs/MicropostDialog\";\nimport { FollowButton } from \"./Buttons/FollowButton\";\n\nexport const SideProfile = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  const [openDialogPost, setOpenDialogPost] = useState(false)\n  const [followStatus, setFollowStatus] = useState(false)\n  // 設定変更Dialogを開閉する関数群\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n  // 投稿Dialogを開閉する関数群\n  const handleOpenPost = () => { setOpenDialogPost(true) }\n  const handleClosePost = () => { setOpenDialogPost(false) }\n\n  // useEffect(() => {\n  //   fetchFollow({ userId: props.user.id })\n  //     .then(data => setFollowStatus(data))\n  // }, [])\n\n  return (\n    <>\n      <h2>プロフィール</h2>\n      <Avatar\n        sx={{ width: 56, height: 56 }}\n        component={Link}\n        to={`/users/${props.user.id}`}\n      >\n        <AccountCircle sx={{ fontSize: 65 }} />\n      </Avatar>\n      <Typography variant=\"h6\">\n        {props.user.name}\n      </Typography>\n      <Typography variant=\"body1\">\n        props.user.profile.プロフィールを追加予定。ここにプロフィールが追加されます。ユーザーのプロフィールです。\n        ユーザーの自己紹介となります。趣味などが記載されます。\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item sm={6}>\n          <ListItem\n            component={Link}\n            to={`/users/${props.user.id}/following`}\n          >\n            {props.following.length} フォロー中\n          </ListItem>\n        </Grid>\n        <Grid item sm={6}>\n          <ListItem\n            component={Link}\n            to={`/users/${props.user.id}/followers`}\n          >\n            {props.followers.length} フォロワー\n          </ListItem>\n        </Grid>\n      </Grid>\n      <Grid item sm={12}>\n        <ListItem\n          component={Link}\n          to={`/users/${props.user.id}/microposts`}\n        >\n          {props.microposts.length} つぶやき\n        </ListItem>\n      </Grid>\n      {\n        (props.loginUser.id === props.user.id)\n          ? <>\n            <Button variant=\"contained\" onClick={handleOpenPost}>\n              投稿\n            </Button>\n            <MicropostDialog\n              handleClose={handleClosePost}\n              open={openDialogPost}\n              user={props.loginUser}\n              dataFetching={props.dataFetching}\n            />\n          </>\n          :\n          <FollowButton\n            followStatus={followStatus}\n            handleFollow={() => { setFollowStatus() }}\n            userId={props.userId}\n          />\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}