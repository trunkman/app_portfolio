{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Users/Microposts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link'; // styled\n\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { deleteMicropost } from \"../../apis/microposts\";\nimport { fetchMicroposts } from \"../../apis/users\"; // コンポーネント\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Microposts = props => {\n  _s();\n\n  const userId = props.macth.params.id;\n  const [microposts, setMicroposts] = useState([]); // 投稿を削除する（管理者のみ実行可能）\n\n  const deleteSubmit = micropostId => {\n    deleteMicropost(micropostId); //     .then(props.dataFetching())\n  }; // 投稿一覧を取得する\n\n\n  useEffect(() => {\n    fetchMicroposts({\n      userId: userId\n    }).then(data => setMicroposts(data.microposts));\n    return () => setMicroposts([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [microposts.length, \" \\u3064\\u3076\\u3084\\u304D\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        bgcolor: 'background.paper'\n      },\n      children: microposts.map(micropost => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            component: \"div\",\n            primary: micropost.id,\n            secondary: micropost.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), props.loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n            component: \"div\",\n            onClick: () => deleteSubmit(micropost.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          pl: 2,\n          children: micropost.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, micropost.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Microposts, \"Lqx8mNlEXDJ59aHLe728iBU3H0Y=\");\n\n_c = Microposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Microposts\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Users/Microposts.jsx"],"names":["React","useState","useEffect","Link","ListItemAvatar","Typography","ListItem","List","ListItemText","AccountCircle","deleteMicropost","fetchMicroposts","Microposts","props","userId","macth","params","id","microposts","setMicroposts","deleteSubmit","micropostId","then","data","length","width","bgcolor","map","micropost","fontSize","created_at","loginUser","user_id","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,eAAT,QAAgC,kBAAhC,C,CACA;;;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C,CAFmC,CAGnC;;AACA,QAAMmB,YAAY,GAAIC,WAAD,IAAiB;AACpCX,IAAAA,eAAe,CAACW,WAAD,CAAf,CADoC,CAEpC;AACD,GAHD,CAJmC,CAQnC;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,eAAe,CAAC;AAAEG,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAf,CACGQ,IADH,CACQC,IAAI,IAAIJ,aAAa,CAACI,IAAI,CAACL,UAAN,CAD7B;AAEA,WAAO,MAAMC,aAAa,CAAC,EAAD,CAA1B;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAID,UAAU,CAACM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAV;AAAA,gBAEIR,UAAU,CAACS,GAAX,CAAeC,SAAS,iBACtB,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,kCACE,QAAC,YAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,OAAO,EAAED,SAAS,CAACX,EAFrB;AAGE,YAAA,SAAS,EAAEW,SAAS,CAACE;AAHvB;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGjB,KAAK,CAACkB,SAAN,CAAgBd,EAAhB,KAAuBW,SAAS,CAACI,OAAjC,iBACC,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,YAAA,OAAO,EAAE,MAAMZ,YAAY,CAACQ,SAAS,CAACX,EAAX,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAA,oBACGW,SAAS,CAACK;AADb;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA,SAAeL,SAAS,CAACX,EAAzB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgCD,CA/CM;;GAAML,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link';\n// styled\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { deleteMicropost } from \"../../apis/microposts\";\nimport { fetchMicroposts } from \"../../apis/users\";\n// コンポーネント\n\nexport const Microposts = (props) => {\n  const userId = props.macth.params.id\n  const [microposts, setMicroposts] = useState([])\n  // 投稿を削除する（管理者のみ実行可能）\n  const deleteSubmit = (micropostId) => {\n    deleteMicropost(micropostId)\n    //     .then(props.dataFetching())\n  }\n  // 投稿一覧を取得する\n  useEffect(() => {\n    fetchMicroposts({ userId: userId })\n      .then(data => setMicroposts(data.microposts))\n    return () => setMicroposts([])\n  }, [])\n\n  return (\n    <>\n      <h2>投稿一覧</h2>\n      <p>{microposts.length} つぶやき</p>\n      <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        {\n          microposts.map(micropost =>\n            <ListItem key={micropost.id}>\n              <ListItemAvatar>\n                <AccountCircle sx={{ fontSize: 40 }} />\n              </ListItemAvatar>\n              <div>\n                <ListItemText\n                  component=\"div\"\n                  primary={micropost.id}\n                  secondary={micropost.created_at}\n                />\n                {props.loginUser.id === micropost.user_id && (\n                  <Link component=\"div\" onClick={() => deleteSubmit(micropost.id)}>\n                    delete\n                  </Link>\n                )}\n              </div>\n              <Typography variant=\"body1\" pl={2}>\n                {micropost.content}\n              </Typography>\n            </ListItem >\n          )\n        }\n      </List>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}