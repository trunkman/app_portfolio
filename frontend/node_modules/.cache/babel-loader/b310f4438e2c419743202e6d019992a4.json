{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'; // styled\n\nimport { Grid } from \"@mui/material\"; // api\n\nimport { fetchUser } from \"../apis/users\"; // コンポーネント\n\nimport { SideProfile } from \"../components/SideProfile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\nimport { Followers } from \"../components/Followers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [microposts, setMicroposts] = useState([]);\n  const [following, setFollowing] = useState([]);\n  const [followers, setFollowers] = useState([]);\n  const [isFetching, setIsFetching] = useState(false); // ユーザー情報の取得\n\n  useEffect(() => {\n    fetchUser({\n      userId: props.match.params.id\n    }).then(data => {\n      setUser(data.user);\n      setMicroposts(data.microposts);\n      setFollowing(data.following);\n      setFollowers(data.followers);\n      setIsFetching(false);\n    });\n    return () => {\n      setUser([]);\n      setMicroposts([]);\n      setFollowing([]);\n      setFollowers([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        maxWidth: 1000,\n        mx: \"auto\",\n        bgcolor: 'grey.300'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        sx: {\n          px: 2,\n          bgcolor: 'grey.200'\n        },\n        children: /*#__PURE__*/_jsxDEV(SideProfile, {\n          dataFetching: () => setIsFetching(true),\n          loginUser: props.loginUser,\n          isLoggedIn: props.isLoggedIn,\n          user: user,\n          following: following,\n          followers: followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        sx: {\n          px: 2,\n          bgcolor: 'grey.100'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${props.match.url}`,\n            children: /*#__PURE__*/_jsxDEV(Microposts, {\n              dataFetching: () => setIsFetching(true),\n              loginUser: props.loginUser,\n              microposts: microposts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${props.match.url}/following`,\n            children: /*#__PURE__*/_jsxDEV(Following, {\n              dataFetching: () => setIsFetching(true),\n              following: following\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${props.match.url}/followers`,\n            children: /*#__PURE__*/_jsxDEV(Followers, {\n              dataFetching: () => setIsFetching(true),\n              followers: followers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"550ZfxPGDkwpcd2zzJpHh+YCR8s=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Grid","fetchUser","SideProfile","Microposts","Following","Followers","User","props","user","setUser","microposts","setMicroposts","following","setFollowing","followers","setFollowers","isFetching","setIsFetching","userId","match","params","id","then","data","maxWidth","mx","bgcolor","px","loginUser","isLoggedIn","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CACA;;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C,CAL6B,CAM7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAAC;AAAEiB,MAAAA,MAAM,EAAEX,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBC;AAA7B,KAAD,CAAT,CACGC,IADH,CACQC,IAAI,IAAI;AACZd,MAAAA,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP;AACAG,MAAAA,aAAa,CAACY,IAAI,CAACb,UAAN,CAAb;AACAG,MAAAA,YAAY,CAACU,IAAI,CAACX,SAAN,CAAZ;AACAG,MAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAPH;AAQA,WAAO,MAAM;AACXR,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KALD;AAMD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE;AAAES,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,EAAE,EAAE,MAAtB;AAA8BC,QAAAA,OAAO,EAAE;AAAvC,OAApB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASD,UAAAA,OAAO,EAAE;AAAlB,SAA9B;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,YAAY,EAAE,MAAMT,aAAa,CAAC,IAAD,CADnC;AAEE,UAAA,SAAS,EAAEV,KAAK,CAACqB,SAFnB;AAGE,UAAA,UAAU,EAAErB,KAAK,CAACsB,UAHpB;AAIE,UAAA,IAAI,EAAErB,IAJR;AAKE,UAAA,SAAS,EAAEI,SALb;AAME,UAAA,SAAS,EAAEE;AANb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAAEa,UAAAA,EAAE,EAAE,CAAN;AAASD,UAAAA,OAAO,EAAE;AAAlB,SAA9B;AAAA,gCAEE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAG,GAAEnB,KAAK,CAACY,KAAN,CAAYW,GAAI,EAAtC;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,YAAY,EAAE,MAAMb,aAAa,CAAC,IAAD,CADnC;AAEE,cAAA,SAAS,EAAEV,KAAK,CAACqB,SAFnB;AAGE,cAAA,UAAU,EAAElB;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAG,GAAEH,KAAK,CAACY,KAAN,CAAYW,GAAI,YAAtC;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,YAAY,EAAE,MAAMb,aAAa,CAAC,IAAD,CADnC;AAEE,cAAA,SAAS,EAAEL;AAFb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAqBE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAG,GAAEL,KAAK,CAACY,KAAN,CAAYW,GAAI,YAAtC;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,YAAY,EAAE,MAAMb,aAAa,CAAC,IAAD,CADnC;AAEE,cAAA,SAAS,EAAEH;AAFb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAvEM;;GAAMR,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n// styled\nimport { Grid } from \"@mui/material\";\n// api\nimport { fetchUser } from \"../apis/users\";\n// コンポーネント\nimport { SideProfile } from \"../components/SideProfile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\nimport { Followers } from \"../components/Followers\";\n\nexport const User = (props) => {\n  const [user, setUser] = useState([])\n  const [microposts, setMicroposts] = useState([])\n  const [following, setFollowing] = useState([])\n  const [followers, setFollowers] = useState([])\n  const [isFetching, setIsFetching] = useState(false)\n  // ユーザー情報の取得\n  useEffect(() => {\n    fetchUser({ userId: props.match.params.id })\n      .then(data => {\n        setUser(data.user)\n        setMicroposts(data.microposts)\n        setFollowing(data.following)\n        setFollowers(data.followers)\n        setIsFetching(false)\n      })\n    return () => {\n      setUser([])\n      setMicroposts([])\n      setFollowing([])\n      setFollowers([])\n    }\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n        <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.200' }}>\n          <SideProfile\n            dataFetching={() => setIsFetching(true)}\n            loginUser={props.loginUser}\n            isLoggedIn={props.isLoggedIn}\n            user={user}\n            following={following}\n            followers={followers}\n          />\n        </Grid>\n        <Grid item xs={12} sm={8} sx={{ px: 2, bgcolor: 'grey.100' }}>\n\n          <Switch>\n            <Route exact path={`${props.match.url}`}>\n              <Microposts\n                dataFetching={() => setIsFetching(true)}\n                loginUser={props.loginUser}\n                microposts={microposts}\n              />\n            </Route>\n          </Switch>\n\n          <Switch>\n            <Route exact path={`${props.match.url}/following`}>\n              <Following\n                dataFetching={() => setIsFetching(true)}\n                following={following}\n              />\n            </Route>\n          </Switch>\n\n          <Switch>\n            <Route exact path={`${props.match.url}/followers`}>\n              <Followers\n                dataFetching={() => setIsFetching(true)}\n                followers={followers}\n              />\n            </Route>\n          </Switch>\n\n        </Grid>\n      </Grid>\n    </BrowserRouter>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}