{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // styles\n\nimport Button from \"@mui/material/Button\"; //api\n\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FollowButton = ({\n  userId,\n  followingIds\n}) => {\n  _s();\n\n  const [followStatus, setFollowStatus] = useState(InitiateFollowStatus); // フォローする\n\n  const submitFollow = () => {\n    postFollow({\n      userId: userId\n    }).then(setFollowStatus(true));\n  }; // フォローを解除する\n\n\n  const submitUnfollow = () => {\n    deleteUnfollow({\n      relationshipId: userId\n    }).then(setFollowStatus(false));\n  };\n\n  useEffect(() => {\n    // フォロー有無の確認\n    setFollowStatus(followingIds.includes(userId));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: followStatus === true ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitUnfollow,\n      variant: \"contained\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitFollow,\n      variant: \"contained\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(FollowButton, \"OnSRGd6ILN0KyZJiEXpG+TkchM0=\");\n\n_c = FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx"],"names":["React","useState","useEffect","axios","Button","postFollow","deleteUnfollow","fetchFollow","FollowButton","userId","followingIds","followStatus","setFollowStatus","InitiateFollowStatus","submitFollow","then","submitUnfollow","relationshipId","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AAAA;;AACxD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAACY,oBAAD,CAAhD,CADwD,CAExD;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBT,IAAAA,UAAU,CAAC;AAAEI,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAV,CACGM,IADH,CACQH,eAAe,CAAC,IAAD,CADvB;AAED,GAHD,CAHwD,CAOxD;;;AACA,QAAMI,cAAc,GAAG,MAAM;AAC3BV,IAAAA,cAAc,CAAC;AAAEW,MAAAA,cAAc,EAAER;AAAlB,KAAD,CAAd,CACGM,IADH,CACQH,eAAe,CAAC,KAAD,CADvB;AAED,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,eAAe,CAACF,YAAY,CAACQ,QAAb,CAAsBT,MAAtB,CAAD,CAAf;AACD,GAHQ,CAAT;AAKA,sBACE;AAAA,cACGE,YAAY,KAAK,IAAjB,gBAAyB,QAAC,MAAD;AACxB,MAAA,OAAO,EAAEK,cADe;AAExB,MAAA,OAAO,EAAC,WAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,gBAOC,QAAC,MAAD;AACE,MAAA,OAAO,EAAEF,YADX;AAEE,MAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AAmBD,CArCM;;GAAMN,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// styles\nimport Button from \"@mui/material/Button\";\n//api\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\";\n\n\nexport const FollowButton = ({ userId, followingIds }) => {\n  const [followStatus, setFollowStatus] = useState(InitiateFollowStatus)\n  // フォローする\n  const submitFollow = () => {\n    postFollow({ userId: userId })\n      .then(setFollowStatus(true))\n  }\n  // フォローを解除する\n  const submitUnfollow = () => {\n    deleteUnfollow({ relationshipId: userId })\n      .then(setFollowStatus(false))\n  }\n\n  useEffect(() => {\n    // フォロー有無の確認\n    setFollowStatus(followingIds.includes(userId))\n  })\n\n  return (\n    <>\n      {followStatus === true ? (<Button\n        onClick={submitUnfollow}\n        variant=\"contained\"\n      >\n        フォロー中\n      </Button>\n      ) : (\n        <Button\n          onClick={submitFollow}\n          variant=\"contained\"\n        >\n          フォローする\n        </Button>\n      )\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}