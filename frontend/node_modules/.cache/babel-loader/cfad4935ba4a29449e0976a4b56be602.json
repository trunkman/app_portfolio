{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'; // styles\n\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\"; // api\n\nimport { patchPasswordReset } from \"../../apis/passwordResets\"; // コンポーネント\n\nimport { Password } from '../../components/Forms/Password';\nimport { PasswordConfirmation } from '../../components/Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PasswordReset = props => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    patchPasswordReset({\n      id: props.match.params.id,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }).then(data => {\n      history.push(`/`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u518D\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Password, {\n          password: password,\n          handleChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n          passwordConfirmation: passwordConfirmation,\n          handleChange: e => setpasswordConfirmaiton(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u518D\\u767B\\u9332\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PasswordReset, \"OYG2aQbPOQ2J9MXbhNGwz0TLkrE=\", false, function () {\n  return [useHistory];\n});\n\n_c = PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx"],"names":["React","useState","useHistory","Grid","Button","Typography","patchPasswordReset","Password","PasswordConfirmation","PasswordReset","props","password","setPassword","passwordConfirmation","setpasswordConfirmaiton","history","handleSubmit","id","match","params","then","data","push","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,2BAAnC,C,CACA;;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,oBAAT,QAAqC,6CAArC;;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;;AACA,QAAMc,YAAY,GAAG,MAAM;AACzBV,IAAAA,kBAAkB,CAAC;AACjBW,MAAAA,EAAE,EAAEP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBF,EADN;AAEjBN,MAAAA,QAAQ,EAAEA,QAFO;AAGjBE,MAAAA,oBAAoB,EAAEA;AAHL,KAAD,CAAlB,CAIGO,IAJH,CAIQC,IAAI,IAAI;AACdN,MAAAA,OAAO,CAACO,IAAR,CAAc,GAAd;AACD,KAND;AAOD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AACE,UAAA,QAAQ,EAAEX,QADZ;AAEE,UAAA,YAAY,EAAEY,CAAC,IAAIX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE,QAAC,oBAAD;AACE,UAAA,oBAAoB,EAAEZ,oBADxB;AAEE,UAAA,YAAY,EAAEU,CAAC,IAAIT,uBAAuB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAF5C;AAAA;AAAA;AAAA;AAAA,gBARF,eAYE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAET,YAAjB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAuBD,CArCM;;GAAMP,a;UAGKP,U;;;KAHLO,a","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n// styles\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\n// api\nimport { patchPasswordReset } from \"../../apis/passwordResets\";\n// コンポーネント\nimport { Password } from '../../components/Forms/Password';\nimport { PasswordConfirmation } from '../../components/Forms/PasswordConfirmation';\n\nexport const PasswordReset = (props) => {\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('')\n  const history = useHistory()\n  const handleSubmit = () => {\n    patchPasswordReset({\n      id: props.match.params.id,\n      password: password,\n      passwordConfirmation: passwordConfirmation,\n    }).then(data => {\n      history.push(`/`)\n    })\n  }\n\n  return (\n    <>\n      <h1>パスワード再設定</h1>\n      <Grid container>\n        <Grid item>\n          <Typography>\n            新しいパスワードを入力してください\n          </Typography>\n          <Password\n            password={password}\n            handleChange={e => setPassword(e.target.value)}\n          />\n          <PasswordConfirmation\n            passwordConfirmation={passwordConfirmation}\n            handleChange={e => setpasswordConfirmaiton(e.target.value)}\n          />\n          <Button onClick={handleSubmit} type='submit'>\n            パスワードを再登録する\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}