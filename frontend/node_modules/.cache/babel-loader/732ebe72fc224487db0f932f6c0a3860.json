{"ast":null,"code":"import axios from 'axios';\nimport { users, signup, userPath, userMicroposts, following, followers, userDiaries, userTImeline, userBooks, userRooms, userRanking, userTimeline } from '../urls/index'; // ユーザー一覧を取得するapi\n\nexport const fetchUsers = () => {\n  return axios.get(users, {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#index', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#index', error);\n  });\n}; // ユーザーページを取得するapi\n\nexport const fetchUser = userId => {\n  return axios.get(userPath(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#show', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#show', error);\n  });\n}; // 新規登録するapi\n\nexport const postSignUp = params => {\n  return axios.post(signup, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('signup', res);\n    return res.data;\n  }).catch(error => {\n    console.log('signup', error);\n    return 'nil';\n  });\n}; // ユーザー情報を更新するapi\n\nexport const patchUpdate = params => {\n  return axios.patch(userPath(params.user_id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    if (res.data) {\n      console.log('users#update', res);\n      return res.data;\n    }\n  }).catch(error => {\n    console.log('users#update', error);\n  });\n}; // ユーザーを削除するapi\n\nexport const deleteUser = userId => {\n  return axios.delete(userPath(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#destroy', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#destroy', error);\n  });\n}; // 投稿一覧(いいね&コメント)を取得するapi\n\nexport const fetchMicroposts = params => {\n  return axios.get(userMicroposts(params.userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#microposts', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#microposts', error);\n  });\n}; // フォロー中のユーザーを取得するapi\n\nexport const fetchFollowing = userId => {\n  return axios.get(following(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('user#following', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#following', error);\n  });\n}; // フォロワーを取得するapi\n\nexport const fetchFollowers = userId => {\n  return axios.get(followers(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('user#followers', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#following', error);\n  });\n}; // 日記を取得するapi\n\nexport const fetchUserDiaries = userId => {\n  return axios.get(userDiaries(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#diaries', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#diaries', error);\n  });\n}; // 未実装\n// タイムラインを取得するapi\n\nexport const fetchUserTimeline = userId => {\n  return axios.get(userTimeline(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#timeline', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#timeline', error);\n  });\n}; // ユーザーが登録する本一覧を取得するapi\n\nexport const fetchUserBooks = userId => {\n  return axios.get(userBooks(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#books', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#books', error);\n  });\n}; // トークルームの一覧を取得するapi\n\nexport const fetchRooms = userId => {\n  return axios.get(userRooms(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#rooms', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#rooms', error);\n  });\n}; // 未実装\n// ランキング一覧を取得するapi\n\nexport const fetchRnking = params => {\n  return axios.get(userRnking(userId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('users#rooms', res);\n    return res.data;\n  }).catch(error => {\n    console.log('users#rooms', error);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/users.js"],"names":["axios","users","signup","userPath","userMicroposts","following","followers","userDiaries","userTImeline","userBooks","userRooms","userRanking","userTimeline","fetchUsers","get","withCredentials","then","res","console","log","data","catch","error","fetchUser","userId","postSignUp","params","post","user","name","email","password","password_confirmation","patchUpdate","patch","user_id","deleteUser","delete","fetchMicroposts","fetchFollowing","fetchFollowers","fetchUserDiaries","fetchUserTimeline","fetchUserBooks","fetchRooms","fetchRnking","userRnking"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EACSC,MADT,EACiBC,QADjB,EAEEC,cAFF,EAEkBC,SAFlB,EAE6BC,SAF7B,EAGEC,WAHF,EAGeC,YAHf,EAG6BC,SAH7B,EAIEC,SAJF,EAIaC,WAJb,EAI0BC,YAJ1B,QAKO,eALP,C,CAOA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOb,KAAK,CAACc,GAAN,CAAUb,KAAV,EAAiB;AAAEc,IAAAA,eAAe,EAAE;AAAnB,GAAjB,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAOxB,KAAK,CAACc,GAAN,CAAUX,QAAQ,CAACqB,MAAD,CAAlB,EAA4B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA5B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,KAA1B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMG,UAAU,GAAIC,MAAD,IAAY;AACpC,SAAO1B,KAAK,CAAC2B,IAAN,CAAWzB,MAAX,EAAmB;AACxB0B,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADT;AAEJC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFV;AAGJC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QAHb;AAIJC,MAAAA,qBAAqB,EAAEN,MAAM,CAACM;AAJ1B;AADkB,GAAnB,EAOJ;AACDjB,IAAAA,eAAe,EAAE;AADhB,GAPI,EAUJC,IAVI,CAUCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAbI,EAcJC,KAdI,CAcEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB;AACA,WAAO,KAAP;AACD,GAjBI,CAAP;AAkBD,CAnBM,C,CAqBP;;AACA,OAAO,MAAMW,WAAW,GAAIP,MAAD,IAAY;AACrC,SAAO1B,KAAK,CAACkC,KAAN,CAAY/B,QAAQ,CAACuB,MAAM,CAACS,OAAR,CAApB,EAAsC;AAC3CP,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IADT;AAEJC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFV;AAGJC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QAHb;AAIJC,MAAAA,qBAAqB,EAAEN,MAAM,CAACM;AAJ1B;AADqC,GAAtC,EAOJ;AACDjB,IAAAA,eAAe,EAAE;AADhB,GAPI,EAUJC,IAVI,CAUCC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACG,IAAR,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AACA,aAAOA,GAAG,CAACG,IAAX;AACD;AACF,GAfI,EAgBJC,KAhBI,CAgBEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,KAA5B;AACD,GAlBI,CAAP;AAmBD,CApBM,C,CAsBP;;AACA,OAAO,MAAMc,UAAU,GAAIZ,MAAD,IAAY;AACpC,SAAOxB,KAAK,CAACqC,MAAN,CAAalC,QAAQ,CAACqB,MAAD,CAArB,EAA+B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA/B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMgB,eAAe,GAAIZ,MAAD,IAAY;AACzC,SAAO1B,KAAK,CAACc,GAAN,CAAUV,cAAc,CAACsB,MAAM,CAACF,MAAR,CAAxB,EAAyC;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAAzC,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,KAAhC;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMiB,cAAc,GAAIf,MAAD,IAAY;AACxC,SAAOxB,KAAK,CAACc,GAAN,CAAUT,SAAS,CAACmB,MAAD,CAAnB,EAA6B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA7B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,KAA/B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMkB,cAAc,GAAIhB,MAAD,IAAY;AACxC,SAAOxB,KAAK,CAACc,GAAN,CAAUR,SAAS,CAACkB,MAAD,CAAnB,EAA6B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA7B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,KAA/B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMmB,gBAAgB,GAAIjB,MAAD,IAAY;AAC1C,SAAOxB,KAAK,CAACc,GAAN,CAAUP,WAAW,CAACiB,MAAD,CAArB,EAA+B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA/B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;AACA;;AACA,OAAO,MAAMoB,iBAAiB,GAAIlB,MAAD,IAAY;AAC3C,SAAOxB,KAAK,CAACc,GAAN,CAAUF,YAAY,CAACY,MAAD,CAAtB,EAAgC;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAAhC,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMqB,cAAc,GAAInB,MAAD,IAAY;AACxC,SAAOxB,KAAK,CAACc,GAAN,CAAUL,SAAS,CAACe,MAAD,CAAnB,EAA6B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA7B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMsB,UAAU,GAAIpB,MAAD,IAAY;AACpC,SAAOxB,KAAK,CAACc,GAAN,CAAUJ,SAAS,CAACc,MAAD,CAAnB,EAA6B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA7B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;AACA;;AACA,OAAO,MAAMuB,WAAW,GAAInB,MAAD,IAAY;AACrC,SAAO1B,KAAK,CAACc,GAAN,CAAUgC,UAAU,CAACtB,MAAD,CAApB,EAA8B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA9B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B;AACD,GAPI,CAAP;AAQD,CATM","sourcesContent":["import axios from 'axios'\nimport {\n  users, signup, userPath,\n  userMicroposts, following, followers,\n  userDiaries, userTImeline, userBooks,\n  userRooms, userRanking, userTimeline,\n} from '../urls/index'\n\n// ユーザー一覧を取得するapi\nexport const fetchUsers = () => {\n  return axios.get(users, { withCredentials: true })\n    .then(res => {\n      console.log('users#index', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#index', error);\n    });\n}\n\n// ユーザーページを取得するapi\nexport const fetchUser = (userId) => {\n  return axios.get(userPath(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#show', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#show', error);\n    });\n}\n\n// 新規登録するapi\nexport const postSignUp = (params) => {\n  return axios.post(signup, {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('signup', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('signup', error);\n      return 'nil';\n    });\n}\n\n// ユーザー情報を更新するapi\nexport const patchUpdate = (params) => {\n  return axios.patch(userPath(params.user_id), {\n    user: {\n      name: params.name,\n      email: params.email,\n      password: params.password,\n      password_confirmation: params.password_confirmation,\n    }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      if (res.data) {\n        console.log('users#update', res);\n        return res.data;\n      }\n    })\n    .catch(error => {\n      console.log('users#update', error);\n    });\n}\n\n// ユーザーを削除するapi\nexport const deleteUser = (userId) => {\n  return axios.delete(userPath(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#destroy', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#destroy', error);\n    });\n}\n\n// 投稿一覧(いいね&コメント)を取得するapi\nexport const fetchMicroposts = (params) => {\n  return axios.get(userMicroposts(params.userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#microposts', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#microposts', error);\n    });\n}\n\n// フォロー中のユーザーを取得するapi\nexport const fetchFollowing = (userId) => {\n  return axios.get(following(userId), { withCredentials: true })\n    .then(res => {\n      console.log('user#following', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#following', error);\n    });\n}\n\n// フォロワーを取得するapi\nexport const fetchFollowers = (userId) => {\n  return axios.get(followers(userId), { withCredentials: true })\n    .then(res => {\n      console.log('user#followers', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#following', error);\n    });\n}\n\n// 日記を取得するapi\nexport const fetchUserDiaries = (userId) => {\n  return axios.get(userDiaries(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#diaries', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#diaries', error);\n    });\n}\n\n// 未実装\n// タイムラインを取得するapi\nexport const fetchUserTimeline = (userId) => {\n  return axios.get(userTimeline(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#timeline', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#timeline', error);\n    });\n}\n\n// ユーザーが登録する本一覧を取得するapi\nexport const fetchUserBooks = (userId) => {\n  return axios.get(userBooks(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#books', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#books', error);\n    });\n}\n\n// トークルームの一覧を取得するapi\nexport const fetchRooms = (userId) => {\n  return axios.get(userRooms(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#rooms', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#rooms', error);\n    });\n}\n\n// 未実装\n// ランキング一覧を取得するapi\nexport const fetchRnking = (params) => {\n  return axios.get(userRnking(userId), { withCredentials: true })\n    .then(res => {\n      console.log('users#rooms', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('users#rooms', error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}