{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Friends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Style\n\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\"; // Icon\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // Api\n\nimport { fetchRooms } from \"../../apis/users\"; // Reducer\n\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Friends = props => {\n  _s();\n\n  const history = useHistory();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState); // トークルームの一覧を取得する\n\n  const Rooms = () => {\n    fetchRooms(props.loginUser.id).then(data => {\n      roomDispatch({\n        type: fetchSuccess,\n        payload: data.entries\n      });\n    });\n  };\n\n  useEffect(() => {\n    Rooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 800\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C8\\u30FC\\u30AF\\u30EB\\u30FC\\u30E0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          bgcolor: 'background.paper'\n        },\n        children: roomState.entries.length === 0 ? /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: \"\\u30C8\\u30FC\\u30AF\\u3057\\u3066\\u3044\\u308B\\u4EBA\\u306F\\u3044\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : roomState.entries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            onClick: () => history.push(`/talk_rooms/${entry.room_id}`),\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n                sx: {\n                  fontSize: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: entry.room_id,\n              secondary: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u30EB\\u30FC\\u30E0\\u306E\\u6700\\u5F8C\\u306E\\u6295\\u7A3F\\u3092\\u8A18\\u8F09\\u3059\\u308B\\u4E88\\u5B9A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Friends, \"3l3AgFMwaTlQHyJgRJ5l8wfdlR4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Friends.jsx"],"names":["React","useState","useEffect","useHistory","List","ListItem","ListItemAvatar","ListItemText","AccountCircle","fetchRooms","roomInitialState","roomReducer","Friends","props","history","roomState","roomDispatch","useReducer","Rooms","loginUser","id","then","data","type","fetchSuccess","payload","entries","maxWidth","bgcolor","length","map","entry","push","room_id","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,YAAzC,QAA6D,eAA7D,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,2BAA9C;;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BC,UAAU,CAACN,WAAD,EAAcD,gBAAd,CAA5C,CAFgC,CAGhC;;AACA,QAAMQ,KAAK,GAAG,MAAM;AAClBT,IAAAA,UAAU,CAACI,KAAK,CAACM,SAAN,CAAgBC,EAAjB,CAAV,CACGC,IADH,CACQC,IAAI,IAAI;AACZN,MAAAA,YAAY,CAAC;AACXO,QAAAA,IAAI,EAAEC,YADK;AAEXC,QAAAA,OAAO,EAAEH,IAAI,CAACI;AAFH,OAAD,CAAZ;AAID,KANH;AAOD,GARD;;AAUAxB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACPS,QAAAA,QAAQ,EAAE;AADH,OAAT;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAV;AAAA,kBACGb,SAAS,CAACW,OAAV,CAAkBG,MAAlB,KAA6B,CAA7B,gBACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAKCd,SAAS,CAACW,OAAV,CAAkBI,GAAlB,CAAsBC,KAAK,iBACzB;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,OAAO,MAFT;AAIE,YAAA,OAAO,EAAE,MAAMjB,OAAO,CAACkB,IAAR,CAAc,eAAcD,KAAK,CAACE,OAAQ,EAA1C,CAJjB;AAAA,oCAME,QAAC,cAAD;AAAA,qCACE,QAAC,aAAD;AAAe,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eASE,QAAC,YAAD;AACE,cAAA,OAAO,EAAEH,KAAK,CAACE,OADjB;AAEE,cAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAGOF,KAAK,CAACX,EAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AANJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoCD,CAtDM;;GAAMR,O;UACKT,U;;;KADLS,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// Style\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// Api\nimport { fetchRooms } from \"../../apis/users\";\n// Reducer\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\n\nexport const Friends = (props) => {\n  const history = useHistory()\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState)\n  // トークルームの一覧を取得する\n  const Rooms = () => {\n    fetchRooms(props.loginUser.id)\n      .then(data => {\n        roomDispatch({\n          type: fetchSuccess,\n          payload: data.entries,\n        })\n      })\n  }\n\n  useEffect(() => {\n    Rooms()\n  }, [])\n\n  return (\n    <>\n      <Box sx={{\n        maxWidth: 800\n      }}>\n        <h2>トークルーム</h2>\n        <List sx={{ bgcolor: 'background.paper' }}>\n          {roomState.entries.length === 0 ? (\n            <ListItemText>\n              トークしている人はいません。\n            </ListItemText>\n          ) : (\n            roomState.entries.map(entry =>\n              <div>\n                <ListItem\n                  button\n                  divider\n                  key={entry.id}\n                  onClick={() => history.push(`/talk_rooms/${entry.room_id}`)}\n                >\n                  <ListItemAvatar>\n                    <AccountCircle sx={{ fontSize: 60 }} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={entry.room_id}\n                    secondary='メッセージルームの最後の投稿を記載する予定'\n                  />\n                </ListItem >\n              </div>\n            )\n          )\n          }\n        </List>\n      </Box>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}