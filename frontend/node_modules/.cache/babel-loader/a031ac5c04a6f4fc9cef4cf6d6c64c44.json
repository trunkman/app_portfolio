{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport { useCallback } from 'react'; // Style\n\nimport { Emoji } from 'emoji-mart';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction';\nimport Box from '@mui/material/Box'; // Api\n\nimport { fetchUserDiaries } from \"../../apis/users\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Calendar = ({\n  userId,\n  open\n}) => {\n  _s();\n\n  const [diaries, setDiaries] = useState([]);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  const handleClose = () => dialogDispatch({\n    type: 'close'\n  });\n\n  const renderEventContent = eventInfo => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Emoji, {\n      emoji: eventInfo.event.title,\n      size: 32,\n      onClick: () => dialogDispatch({\n        type: 'diary'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"7.5 h\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  useEffect(() => {\n    fetchUserDiaries(userId).then(data => {\n      setDiaries(data.diaries);\n    });\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      locale: \"ja\",\n      events: diaries,\n      businessHours: true,\n      daycellContent: e => {\n        e.dayNumberText = e.dayNumberText.replace('日', '');\n      },\n      eventClick: () => dialogDispatch({\n        type: 'diary'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      handleClose: handleClose,\n      open: dialogState.diary // date={arg.dateStr}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"pMETf7YnUK8RLccgeZF/2DIkTtA=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx"],"names":["React","useEffect","useState","useReducer","useCallback","Emoji","FullCalendar","EventContentArg","dayGridPlugin","interactionPlugin","DateClickArg","Box","fetchUserDiaries","dialogReducer","dialogInitialState","DiaryDialog","Calendar","userId","open","diaries","setDiaries","dialogState","dialogDispatch","handleClose","type","renderEventContent","eventInfo","event","title","then","data","e","dayNumberText","replace","diary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CACA;;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,qBAA9C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,IAA4BC,YAA5B,QAAgD,2BAAhD;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,6BAAlD,C,CACA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,MADuB;AAEvBC,EAAAA;AAFuB,CAAD,KAGlB;AAAA;;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCnB,UAAU,CAACU,aAAD,EAAgBC,kBAAhB,CAAhD;;AACA,QAAMS,WAAW,GAAG,MAAMD,cAAc,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;;AAGA,QAAMC,kBAAkB,GAAIC,SAAD,iBACzB;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEA,SAAS,CAACC,KAAV,CAAgBC,KADzB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,OAAO,EAAE,MAAMN,cAAc,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD;AAH/B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,gBAAgB,CAACK,MAAD,CAAhB,CACGY,IADH,CACQC,IAAI,IAAI;AACZV,MAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACD,KAHH;AAID,GALQ,EAKN,CAACD,IAAD,CALM,CAAT;AAQA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAACV,aAAD,EAAgBC,iBAAhB,CADX;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,MAAM,EAAEU,OAJV;AAKE,MAAA,aAAa,EAAE,IALjB;AAME,MAAA,cAAc,EAAGY,CAAD,IAAO;AAAEA,QAAAA,CAAC,CAACC,aAAF,GAAkBD,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAAlB;AAAoD,OAN/E;AAOE,MAAA,UAAU,EAAE,MAAMX,cAAc,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD;AAPlC;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAE,WAAF;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,IAAI,EAAEF,WAAW,CAACa,KAFpB,CAGA;;AAHA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhDM;;GAAMlB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState, useReducer } from \"react\";\nimport { useCallback } from 'react';\n// Style\nimport { Emoji } from 'emoji-mart';\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction';\nimport Box from '@mui/material/Box';\n// Api\nimport { fetchUserDiaries } from \"../../apis/users\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// Component\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\n\nexport const Calendar = ({\n  userId,\n  open,\n}) => {\n  const [diaries, setDiaries] = useState([])\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' })\n\n\n  const renderEventContent = (eventInfo: EventContentArg) => (\n    <>\n      <Emoji\n        emoji={eventInfo.event.title}\n        size={32}\n        onClick={() => dialogDispatch({ type: 'diary' })}\n      />\n      <p>7.5 h</p>\n    </>\n  )\n\n  useEffect(() => {\n    fetchUserDiaries(userId)\n      .then(data => {\n        setDiaries(data.diaries)\n      })\n  }, [open])\n\n\n  return (\n    <Box>\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        locale=\"ja\"\n        events={diaries}\n        businessHours={true}\n        daycellContent={(e) => { e.dayNumberText = e.dayNumberText.replace('日', '') }}\n        eventClick={() => dialogDispatch({ type: 'diary' })}\n      />\n\n\n      < DiaryDialog\n        handleClose={handleClose}\n        open={dialogState.diary}\n      // date={arg.dateStr}\n      />\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}