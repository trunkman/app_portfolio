{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { theme } from '../../styled/theme'; // Icon\n\nimport MenuIcon from '@mui/icons-material/Menu'; // Api\n\nimport { deleteLogout } from \"../../apis/sessions\";\nimport { deleteUser } from \"../../apis/users\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { AccountButton } from '../../components/Buttons/AccountButton';\nimport { LogoLink } from '../../components/Links/LogoLink';\nimport { NotificationButton } from '../../components/Buttons/NotificationButton';\nimport { NotificationDialog } from \"../../components/Dialogs/NotificationDialog\";\nimport { PostButton } from '../../components/Buttons/PostButton';\nimport { RecordButton } from '../../components/Buttons/RecordButton';\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { TweetDialog } from '../../components/Dialogs/TweetDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Header = ({\n  open,\n  drawerWidth,\n  handleDrawerOpen\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState); // ダイアログを閉じる\n\n  const handleClose = () => dialogDispatch({\n    type: 'close'\n  }); // ログアウトする\n\n\n  const submitLogout = () => {\n    deleteLogout().then(() => {\n      authDispatch({\n        type: 'logout'\n      });\n      history.push(`/`);\n    });\n  }; // アカウント削除を行う\n\n\n  const submitDelete = () => {\n    deleteUser(authState.loginUser.id).then(() => {\n      authDispatch({\n        type: 'deleteUser'\n      });\n      history.push(`/`);\n    });\n  }; // AppBarのstyle\n\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    backgroundColor: '#001e3c',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [authState.loggedIn && /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            color: \"primary\",\n            onClick: () => handleDrawerOpen(),\n            sx: {\n              fontSize: 20,\n              ...(open && {\n                display: 'none'\n              })\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 5,\n            ...(open && {\n              display: 'none'\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(LogoLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), authState.loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PostButton, {\n            handleClick: () => dialogDispatch({\n              type: 'micropost'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n            handleClick: () => dialogDispatch({\n              type: 'record'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NotificationButton, {\n            handleClick: () => dialogDispatch({\n              type: 'notification'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccountButton, {\n            handleLogout: submitLogout,\n            handleDelete: submitDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TweetDialog, {\n      handleClose: handleClose,\n      open: dialogState.micropost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecordDialog, {\n      handleClose: handleClose,\n      open: dialogState.record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationDialog, {\n      handleClose: handleClose,\n      open: dialogState.notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      handleClose: () => authDispatch({\n        type: 'closeSnackbar'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"WpKMvtye72SSXEx9eUXqfPQIeBE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx"],"names":["React","useReducer","useContext","useHistory","AuthContext","styled","MuiAppBar","Toolbar","Typography","IconButton","Box","theme","MenuIcon","deleteLogout","deleteUser","dialogReducer","dialogInitialState","AccountButton","LogoLink","NotificationButton","NotificationDialog","PostButton","RecordButton","RecordDialog","SnackBar","TweetDialog","Header","open","drawerWidth","handleDrawerOpen","history","authState","authDispatch","dialogState","dialogDispatch","handleClose","type","submitLogout","then","push","submitDelete","loginUser","id","AppBar","shouldForwardProp","prop","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","loggedIn","fontSize","display","pl","micropost","record","notification"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { theme } from '../../styled/theme'\n// Icon\nimport MenuIcon from '@mui/icons-material/Menu';\n// Api\nimport { deleteLogout } from \"../../apis/sessions\"\nimport { deleteUser } from \"../../apis/users\"\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// Component\nimport { AccountButton } from '../../components/Buttons/AccountButton'\nimport { LogoLink } from '../../components/Links/LogoLink';\nimport { NotificationButton } from '../../components/Buttons/NotificationButton';\nimport { NotificationDialog } from \"../../components/Dialogs/NotificationDialog\"\nimport { PostButton } from '../../components/Buttons/PostButton';\nimport { RecordButton } from '../../components/Buttons/RecordButton';\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\"\nimport { TweetDialog } from '../../components/Dialogs/TweetDialog';\n\nexport const Header = ({\n  open,\n  drawerWidth,\n  handleDrawerOpen\n}) => {\n  const history = useHistory()\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  // ダイアログを閉じる\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  // ログアウトする\n  const submitLogout = () => {\n    deleteLogout()\n      .then(() => {\n        authDispatch({ type: 'logout' });\n        history.push(`/`);\n      });\n  };\n  // アカウント削除を行う\n  const submitDelete = () => {\n    deleteUser(authState.loginUser.id)\n      .then(() => {\n        authDispatch({ type: 'deleteUser' });\n        history.push(`/`);\n      });\n  };\n  // AppBarのstyle\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    backgroundColor: '#001e3c',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <>\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          {authState.loggedIn &&\n            <IconButton>\n              <MenuIcon\n                color=\"primary\"\n                onClick={() => handleDrawerOpen()}\n                sx={{\n                  fontSize: 20,\n                  ...(open && { display: 'none' }),\n                }}\n              />\n            </IconButton>\n          }\n          <Typography\n            variant=\"h6\"\n            sx={{\n              pl: 5,\n              ...(open && { display: 'none' }),\n            }}\n          >\n            <LogoLink />\n          </Typography>\n          <Box flexGrow={1}></Box>\n          {authState.loggedIn &&\n            <>\n              <PostButton handleClick={() => dialogDispatch({ type: 'micropost' })} />\n              <RecordButton handleClick={() => dialogDispatch({ type: 'record' })} />\n              <NotificationButton handleClick={() => dialogDispatch({ type: 'notification' })} />\n              <AccountButton\n                handleLogout={submitLogout}\n                handleDelete={submitDelete}\n              />\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n\n      <TweetDialog\n        handleClose={handleClose}\n        open={dialogState.micropost}\n      />\n      <RecordDialog\n        handleClose={handleClose}\n        open={dialogState.record}\n      />\n      <NotificationDialog\n        handleClose={handleClose}\n        open={dialogState.notification}\n      />\n\n      <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}