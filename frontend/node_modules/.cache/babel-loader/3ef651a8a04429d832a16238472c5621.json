{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/SettingDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router'; // api\n\nimport { patchUpdate } from '../apis/users'; // ダイアログのstyles\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText'; // Formsコンポーネント\n\nimport { Name } from './Forms/Name';\nimport { Email } from './Forms/Email';\nimport { Password } from './Forms/Password';\nimport { PasswordConfirmation } from './Forms/PasswordConfirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingDialog = props => {\n  _s();\n\n  const [name, setName] = useState(props.user.name);\n  const [email, setEmail] = useState(props.user.email);\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    patchUpdate({\n      user_id: props.user.id,\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirmation\n    }).then(data => {\n      setName('');\n      setEmail('');\n      setPassword('');\n      setpasswordConfirmaiton('');\n      alert('ユーザー情報の更新に成功しました');\n      history.push(`/user/${data.user.id}`);\n    }).catch(() => {\n      alert('ユーザー情報の更新失敗');\n    });\n  }; // Settingダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u60C5\\u5831\\u66F4\\u65B0\\u3059\\u308B\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u3001\\u9001\\u4FE1\\u30DC\\u30BF\\u30F3\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        name: name,\n        handleChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: email,\n        handleChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        password: password,\n        handleChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmation, {\n        passwordConfirmation: passwordConfirmation,\n        handleChange: e => setpasswordConfirmaiton(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.handleClose,\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        type: \"submit\",\n        autoFocus: true,\n        children: \"\\u60C5\\u5831\\u306E\\u66F4\\u65B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingDialog, \"yMptZj3cB5hG3dDOvY1zUJBDGT4=\", false, function () {\n  return [useHistory];\n});\n\n_c = SettingDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/SettingDialog.jsx"],"names":["React","useState","useHistory","patchUpdate","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","Name","Email","Password","PasswordConfirmation","SettingDialog","props","name","setName","user","email","setEmail","password","setPassword","passwordConfirmation","setpasswordConfirmaiton","history","handleSubmit","user_id","id","password_confirmation","then","data","alert","push","catch","open","handleClose","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\n// api\nimport { patchUpdate } from '../apis/users';\n\n// ダイアログのstyles\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\n// Formsコンポーネント\nimport { Name } from './Forms/Name';\nimport { Email } from './Forms/Email';\nimport { Password } from './Forms/Password';\nimport { PasswordConfirmation } from './Forms/PasswordConfirmation';\n\nexport const SettingDialog = (props) => {\n  const [name, setName] = useState(props.user.name)\n  const [email, setEmail] = useState(props.user.email)\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setpasswordConfirmaiton] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = () => {\n    patchUpdate({\n      user_id: props.user.id,\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirmation,\n    }).then((data) => {\n      setName('')\n      setEmail('')\n      setPassword('')\n      setpasswordConfirmaiton('')\n      alert('ユーザー情報の更新に成功しました')\n      history.push(`/user/${data.user.id}`)\n    }).catch(() => {\n      alert('ユーザー情報の更新失敗')\n    })\n  }\n\n  // Settingダイアログの内容を返す\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <DialogTitle>設定</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          情報更新する項目を入力し、送信ボタンを押してください。\n        </DialogContentText>\n\n        <Name\n          name={name}\n          handleChange={e => setName(e.target.value)}\n        />\n        <Email\n          email={email}\n          handleChange={e => setEmail(e.target.value)}\n        />\n        <Password\n          password={password}\n          handleChange={e => setPassword(e.target.value)}\n        />\n        <PasswordConfirmation\n          passwordConfirmation={passwordConfirmation}\n          handleChange={e => setpasswordConfirmaiton(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose}>\n          キャンセル\n        </Button>\n        <Button\n          onClick={handleSubmit}\n          type='submit'\n          autoFocus\n        >\n          情報の更新\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}