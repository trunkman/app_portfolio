{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Microposts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Link from '@mui/material/Link'; // styled\n\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\"; // コンポーネント\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Microposts = props => {\n  _s();\n\n  const [microposts, setMicroposts] = useState([]); // 投稿一覧を更新する。※未完成\n\n  useEffect(() => {\n    fetchUser({\n      user_id: props.urlUserId\n    }).then(data => {\n      setMicroposts(data.microposts);\n    });\n  }, []); // 返り値：投稿内容の一覧\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        bgcolor: 'background.paper'\n      },\n      children: microposts.map(micropost => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            component: \"div\",\n            primary: micropost.id,\n            secondary: micropost.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), props.loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n            component: \"div\",\n            onClick: () => deleteMicropost(micropost.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          pl: 2,\n          children: micropost.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, micropost.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Microposts, \"Lqx8mNlEXDJ59aHLe728iBU3H0Y=\");\n\n_c = Microposts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Microposts\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Microposts.jsx"],"names":["React","useState","useEffect","Fragment","Link","ListItemAvatar","Typography","ListItem","List","ListItemText","AccountCircle","fetchUser","deleteMicropost","Microposts","props","microposts","setMicroposts","user_id","urlUserId","then","data","width","bgcolor","map","micropost","fontSize","id","created_at","loginUser","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CACA;;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C,CADmC,CAEnC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAAC;AAAEM,MAAAA,OAAO,EAAEH,KAAK,CAACI;AAAjB,KAAD,CAAT,CACGC,IADH,CACQC,IAAI,IAAI;AACZJ,MAAAA,aAAa,CAACI,IAAI,CAACL,UAAN,CAAb;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT,CAHmC,CAUnC;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEM,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAV;AAAA,gBAEIP,UAAU,CAACQ,GAAX,CAAeC,SAAS,iBACtB,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,kCACE,QAAC,YAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,OAAO,EAAED,SAAS,CAACE,EAFrB;AAGE,YAAA,SAAS,EAAEF,SAAS,CAACG;AAHvB;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGb,KAAK,CAACc,SAAN,CAAgBF,EAAhB,KAAuBF,SAAS,CAACP,OAAjC,iBACC,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,YAAA,OAAO,EAAE,MAAML,eAAe,CAACY,SAAS,CAACE,EAAX,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAA,oBACGF,SAAS,CAACK;AADb;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA,SAAeL,SAAS,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA1CM;;GAAMb,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Link from '@mui/material/Link';\n// styled\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\";\n// コンポーネント\n\nexport const Microposts = (props) => {\n  const [microposts, setMicroposts] = useState([])\n  // 投稿一覧を更新する。※未完成\n  useEffect(() => {\n    fetchUser({ user_id: props.urlUserId })\n      .then(data => {\n        setMicroposts(data.microposts)\n      })\n  }, [])\n\n  // 返り値：投稿内容の一覧\n  return (\n    <Fragment>\n      <h2>投稿一覧</h2>\n      <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        {\n          microposts.map(micropost =>\n            <ListItem key={micropost.id}>\n              <ListItemAvatar>\n                <AccountCircle sx={{ fontSize: 40 }} />\n              </ListItemAvatar>\n              <div>\n                <ListItemText\n                  component=\"div\"\n                  primary={micropost.id}\n                  secondary={micropost.created_at}\n                />\n                {props.loginUser.id === micropost.user_id && (\n                  <Link component=\"div\" onClick={() => deleteMicropost(micropost.id)}>\n                    delete\n                  </Link>\n                )}\n              </div>\n              <Typography variant=\"body1\" pl={2}>\n                {micropost.content}\n              </Typography>\n            </ListItem >\n          )\n        }\n      </List>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}