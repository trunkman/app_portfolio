{"ast":null,"code":"export const profileInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  user: {},\n  followingIds: [],\n  followersIds: [],\n  microposts: [],\n  likedMicropostIds: [],\n  comments: [],\n  commentedMicroposts: []\n};\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return { ...state,\n        fetchState: 'loading'\n      };\n\n    case 'fetchSuccessProfile':\n      return { ...state,\n        fetchState: 'ok',\n        reRender: false,\n        user: action.payload.user,\n        followingIds: action.payload.followingIds,\n        followersIds: action.payload.followiweaIds\n      };\n\n    case 'fetchSuccessMicropost':\n      return { ...state,\n        fetchState: 'ok',\n        reRender: false,\n        microposts: action.payload.microposts,\n        likedMicropostIds: action.payload.likedMicropostIds,\n        comments: action.payload.comments,\n        commentedMicroposts: action.payload.commentedMicroposts\n      };\n\n    case 'reRender':\n      return { ...state,\n        reRender: true\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx"],"names":["profileInitialState","fetchState","reRender","user","followingIds","followersIds","microposts","likedMicropostIds","comments","commentedMicroposts","profileReducer","state","action","type","payload","followiweaIds","Error"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG;AACjCC,EAAAA,UAAU,EAAE,SADqB;AAEjCC,EAAAA,QAAQ,EAAE,KAFuB;AAGjCC,EAAAA,IAAI,EAAE,EAH2B;AAIjCC,EAAAA,YAAY,EAAE,EAJmB;AAKjCC,EAAAA,YAAY,EAAE,EALmB;AAMjCC,EAAAA,UAAU,EAAE,EANqB;AAOjCC,EAAAA,iBAAiB,EAAE,EAPc;AAQjCC,EAAAA,QAAQ,EAAE,EARuB;AASjCC,EAAAA,mBAAmB,EAAE;AATY,CAA5B;AAYP,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELV,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELV,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,IAAI,EAAES,MAAM,CAACE,OAAP,CAAeX,IAJhB;AAKLC,QAAAA,YAAY,EAAEQ,MAAM,CAACE,OAAP,CAAeV,YALxB;AAMLC,QAAAA,YAAY,EAAEO,MAAM,CAACE,OAAP,CAAeC;AANxB,OAAP;;AAQF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELV,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILI,QAAAA,UAAU,EAAEM,MAAM,CAACE,OAAP,CAAeR,UAJtB;AAKLC,QAAAA,iBAAiB,EAAEK,MAAM,CAACE,OAAP,CAAeP,iBAL7B;AAMLC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QANpB;AAOLC,QAAAA,mBAAmB,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAP/B,OAAP;;AASF,SAAK,UAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELT,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF;AACE,YAAM,IAAIc,KAAJ,EAAN;AA/BJ;AAiCD,CAlCM","sourcesContent":["export const profileInitialState = {\n  fetchState: 'initial',\n  reRender: false,\n  user: {},\n  followingIds: [],\n  followersIds: [],\n  microposts: [],\n  likedMicropostIds: [],\n  comments: [],\n  commentedMicroposts: [],\n}\n\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return {\n        ...state,\n        fetchState: 'loading',\n      };\n    case 'fetchSuccessProfile':\n      return {\n        ...state,\n        fetchState: 'ok',\n        reRender: false,\n        user: action.payload.user,\n        followingIds: action.payload.followingIds,\n        followersIds: action.payload.followiweaIds,\n      };\n    case 'fetchSuccessMicropost':\n      return {\n        ...state,\n        fetchState: 'ok',\n        reRender: false,\n        microposts: action.payload.microposts,\n        likedMicropostIds: action.payload.likedMicropostIds,\n        comments: action.payload.comments,\n        commentedMicroposts: action.payload.commentedMicroposts,\n      };\n    case 'reRender':\n      return {\n        ...state,\n        reRender: true,\n      };\n    default:\n      throw new Error();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}