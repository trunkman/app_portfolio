{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/LogInDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; //api\n\nimport { postLogIn } from '../apis/sessions'; // ダイアログのstyle\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText'; // Formsコンポーネント\n\nimport { Email } from './Forms/Email';\nimport { Password } from './Forms/Password';\nimport { RememberMe } from './Forms/RememberMe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LogInDialog = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [remenberMe, setRememberMe] = useState('1');\n  const history = useHistory(); // ログインapiを呼び出すCallback関数\n\n  const handleSubmit = () => {\n    postLogIn({\n      email: email,\n      password: password,\n      remember_me: remenberMe\n    }).then(data => {\n      props.handleLogIn(data.user);\n      setEmail('');\n      setPassword('');\n      history.push(`/user/${data.user.id}`);\n    });\n  }; // 返り値：新規登録ダイアログの内容を返す\n\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"\\u4E0B\\u8A18\\u9805\\u76EE\\u3092\\u5165\\u529B\\u3057\\u3001\\u30ED\\u30B0\\u30A4\\u30F3\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        email: email,\n        handleChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        password: password,\n        handleChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RememberMe, {\n        remenberMe: remenberMe,\n        handleChange: e => setRememberMe(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          props.handleClose();\n        },\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogInDialog, \"5npnrd1mwkCu35kQukt2lYHC5ys=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogInDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInDialog\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/LogInDialog.jsx"],"names":["React","useState","useHistory","postLogIn","Button","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","Email","Password","RememberMe","LogInDialog","props","email","setEmail","password","setPassword","remenberMe","setRememberMe","history","handleSubmit","remember_me","then","data","handleLogIn","user","push","id","open","handleClose","e","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n//api\nimport { postLogIn } from '../apis/sessions';\n// ダイアログのstyle\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n// Formsコンポーネント\nimport { Email } from './Forms/Email';\nimport { Password } from './Forms/Password';\nimport { RememberMe } from './Forms/RememberMe';\n\nexport const LogInDialog = (props) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [remenberMe, setRememberMe] = useState('1')\n  const history = useHistory()\n  // ログインapiを呼び出すCallback関数\n  const handleSubmit = () => {\n    postLogIn({\n      email: email,\n      password: password,\n      remember_me: remenberMe,\n    }).then(data => {\n      props.handleLogIn(data.user);\n      setEmail('');\n      setPassword('');\n      history.push(`/user/${data.user.id}`);\n    })\n  }\n\n  // 返り値：新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <DialogTitle>ログイン画面</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し、ログインください。\n        </DialogContentText>\n        <Email\n          email={email}\n          handleChange={e => setEmail(e.target.value)}\n        />\n        <Password\n          password={password}\n          handleChange={e => setPassword(e.target.value)}\n        />\n        <RememberMe\n          remenberMe={remenberMe}\n          handleChange={e => setRememberMe(e.target.checked)}\n        />\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { props.handleClose() }}>\n          キャンセル\n        </Button>\n        <Button type='submit' onClick={handleSubmit}>\n          ログインする\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}