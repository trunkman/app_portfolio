{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport List from \"@mui/material/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  \"messages\": {\n    height: \"400px\",\n    padding: \"0\",\n    overflow: \"auto\"\n  }\n}));\nexport const MessageRoom = props => {\n  _s();\n\n  const classes = useStyles();\n  const [messages, setMessages] = useState([]); // メッセージルーム一覧を取得する\n\n  useEffect(() => {\n    fetchMessages({\n      userId: props.loginUser.id\n    }).then(data => setMessages(data.messages));\n    return () => setMessages([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.loginUser.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.messages,\n      id: \"scroll-area\",\n      children: messages.map((message, index) => {\n        /*#__PURE__*/\n        _jsxDEV(Message, {\n          text: message.content,\n          loginUserId: props.loginUser.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MessageRoom, \"7JZPnxp5nmeSos9vIXw9km+oEIc=\", false, function () {\n  return [useStyles];\n});\n\n_c = MessageRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageRoom\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx"],"names":["React","List","useStyles","makeStyles","createStyles","height","padding","overflow","MessageRoom","props","classes","messages","setMessages","useState","useEffect","fetchMessages","userId","loginUser","id","then","data","name","map","message","index","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAC3BC,YAAY,CAAC;AACX,cAAY;AACVC,IAAAA,MAAM,EAAE,OADE;AAEVC,IAAAA,OAAO,EAAE,GAFC;AAGVC,IAAAA,QAAQ,EAAE;AAHA;AADD,CAAD,CADc,CAA5B;AAUA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC,CAFoC,CAGpC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,CAAC;AAAEC,MAAAA,MAAM,EAAEP,KAAK,CAACQ,SAAN,CAAgBC;AAA1B,KAAD,CAAb,CACGC,IADH,CACQC,IAAI,IAAIR,WAAW,CAACQ,IAAI,CAACT,QAAN,CAD3B;AAEA,WAAO,MAAMC,WAAW,CAAC,EAAD,CAAxB;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA,gBAAKH,KAAK,CAACQ,SAAN,CAAgBI;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEX,OAAO,CAACC,QAAzB;AAAmC,MAAA,EAAE,EAAE,aAAvC;AAAA,gBAEIA,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/B;AAAA,gBAAC,OAAD;AACE,UAAA,IAAI,EAAED,OAAO,CAACE,OADhB;AAGE,UAAA,WAAW,EAAEhB,KAAK,CAACQ,SAAN,CAAgBC;AAH/B,WAEOM,KAFP;AAAA;AAAA;AAAA;AAAA;AAKD,OAND;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD,CA1BM;;GAAMhB,W;UACKN,S;;;KADLM,W","sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \"messages\": {\n      height: \"400px\",\n      padding: \"0\",\n      overflow: \"auto\"\n    }\n  }),\n);\n\nexport const MessageRoom = (props) => {\n  const classes = useStyles();\n  const [messages, setMessages] = useState([])\n  // メッセージルーム一覧を取得する\n  useEffect(() => {\n    fetchMessages({ userId: props.loginUser.id })\n      .then(data => setMessages(data.messages))\n    return () => setMessages([])\n  }, [])\n\n  return (\n    <>\n      <h3>{props.loginUser.name}</h3>\n      <List className={classes.messages} id={\"scroll-area\"}>\n        {\n          messages.map((message, index) => {\n            <Message\n              text={message.content}\n              key={index}\n              loginUserId={props.loginUser.id}\n            />\n          })\n        }\n      </List>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}