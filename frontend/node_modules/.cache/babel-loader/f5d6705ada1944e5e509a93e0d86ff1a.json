{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // styles\n\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton'; // アイコン\n\nimport MenuIcon from '@mui/icons-material/Menu'; // api\n\nimport { postLogIn } from '../../apis/sessions';\nimport { deleteLogout } from \"../../apis/sessions\"; // reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // コンポーネント\n\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = props => {\n  _s();\n\n  const [openState, openDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  const handleClose = () => openDispatch({\n    type: 'close'\n  }); // const handleLogin = () => loginDispatch({ type: 'login' })\n  // const handleLogout = () => loginDispatch({ type: 'logout' })\n\n\n  const haddleOpenLogin = () => openDispatch({\n    type: 'login'\n  });\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const initialState = {\n    email: '',\n    password: '',\n    rememberMe: '1',\n    openLogin: false\n  };\n  const [state, setState] = useState(initialState);\n\n  const handleLogin = data => {\n    authDispatch({\n      type: 'login',\n      payload: data.user\n    });\n  };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout'\n    });\n  };\n\n  const submitLogout = () => {\n    deleteLogout().then(() => {\n      handleLogout();\n      history.push(`/`);\n      alert('ログアウトを成功しました');\n    });\n  };\n\n  const submitLogin = () => {\n    postLogIn({\n      email: state.email,\n      password: state.password,\n      remember_me: state.remenberMe\n    }).then(data => {\n      handleLogin(data);\n      setState({\n        openLogin: false\n      });\n    });\n  };\n\n  const open = props.open;\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"open drawer\",\n        onClick: () => props.handleDrawerOpen(),\n        edge: \"start\",\n        sx: {\n          marginRight: '36px',\n          ...(open && {\n            display: 'none'\n          })\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n          sx: {\n            marginRight: '36px',\n            ...(open && {\n              display: 'none'\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        flexGrow: 1,\n        sx: open && {\n          display: 'none'\n        },\n        children: \"\\u7761\\u7720\\u8CA0\\u50B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          px: 4\n        },\n        variant: \"body1\",\n        component: Link,\n        to: `/booksearch`,\n        children: \"\\u672C\\u306E\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginControlBottun, {\n        handleLogOut: submitLogout,\n        handleLogIn: submitLogin,\n        loginUser: props.loginUser,\n        isLoggedIn: props.isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"7ig+NuuJpbipGFq9jq5ff0T4YHU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx"],"names":["React","useReducer","useContext","Link","useHistory","AuthContext","styled","MuiAppBar","Toolbar","Typography","IconButton","MenuIcon","postLogIn","deleteLogout","dialogReducer","dialogInitialState","LoginControlBottun","Header","props","openState","openDispatch","handleClose","type","haddleOpenLogin","history","authState","authDispatch","initialState","email","password","rememberMe","openLogin","state","setState","useState","handleLogin","data","payload","user","handleLogout","submitLogout","then","push","alert","submitLogin","remember_me","remenberMe","open","AppBar","shouldForwardProp","prop","theme","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","drawerWidth","width","enteringScreen","handleDrawerOpen","marginRight","display","px","loginUser","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// styles\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n// アイコン\nimport MenuIcon from '@mui/icons-material/Menu';\n// api\nimport { postLogIn } from '../../apis/sessions';\nimport { deleteLogout } from \"../../apis/sessions\"\n// reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// コンポーネント\nimport { LoginControlBottun } from '../../components/Buttons/LoginControlButton'\n\nexport const Header = (props) => {\n  const [openState, openDispatch] = useReducer(dialogReducer, dialogInitialState)\n  const handleClose = () => openDispatch({ type: 'close' })\n  // const handleLogin = () => loginDispatch({ type: 'login' })\n  // const handleLogout = () => loginDispatch({ type: 'logout' })\n  const haddleOpenLogin = () => openDispatch({ type: 'login' })\n\n  const history = useHistory()\n  const { authState, authDispatch } = useContext(AuthContext)\n  const initialState = {\n    email: '',\n    password: '',\n    rememberMe: '1',\n    openLogin: false,\n  };\n  const [state, setState] = useState(initialState);\n\n  const handleLogin = (data) => {\n    authDispatch({\n      type: 'login',\n      payload: data.user,\n    });\n  };\n\n  const handleLogout = () => {\n    authDispatch({\n      type: 'logout',\n    });\n  };\n\n  const submitLogout = () => {\n    deleteLogout()\n      .then(() => {\n        handleLogout();\n        history.push(`/`);\n        alert('ログアウトを成功しました');\n      })\n  }\n\n  const submitLogin = () => {\n    postLogIn({\n      email: state.email,\n      password: state.password,\n      remember_me: state.remenberMe,\n    }).then(data => {\n      handleLogin(data)\n      setState({ openLogin: false })\n    }\n    )\n  }\n\n  const open = props.open\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: props.drawerWidth,\n      width: `calc(100% - ${props.drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <AppBar position=\"fixed\" open={open}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => props.handleDrawerOpen()}\n          edge=\"start\"\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon\n            sx={{\n              marginRight: '36px',\n              ...(open && { display: 'none' }),\n            }}\n          />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" flexGrow={1}\n          sx={open && { display: 'none' }}\n        >\n          睡眠負債\n        </Typography>\n        <Typography\n          sx={{ px: 4 }}\n          variant=\"body1\"\n          component={Link}\n          to={`/booksearch`}\n        >\n          本の検索\n        </Typography>\n        <LoginControlBottun\n          handleLogOut={submitLogout}\n          handleLogIn={submitLogin}\n          loginUser={props.loginUser}\n          isLoggedIn={props.isLoggedIn}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}