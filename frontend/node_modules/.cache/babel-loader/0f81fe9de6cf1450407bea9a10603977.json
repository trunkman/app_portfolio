{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link'; // ユーザーページのstyle\n\nimport { Avatar, ListItemAvatar, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid, ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\"; // コンポーネント\n\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false);\n  const [openDialogPost, setOpenDialogPost] = useState(false);\n  const [microposts, setMicroposts] = useState([]); // 設定変更Dialogを開閉する関数群\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 投稿Dialogを開閉する関数群\n\n\n  const handleOpenPost = () => {\n    setOpenDialogPost(true);\n  };\n\n  const handleClosePost = () => {\n    setOpenDialogPost(false);\n  }; // 投稿一覧を表示する画面\n\n\n  const MicropostsList = microposts.map(micropost => /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        component: \"div\",\n        primary: micropost.content,\n        secondary: micropost.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), props.user.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n        component: \"div\",\n        onClick: () => deleteMicropost(micropost.id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      pl: 2,\n      children: micropost.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, micropost.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)); // レンダーされた際に投稿内容を描画する。※未完成\n\n  useEffect(() => {\n    fetchUser({\n      user_id: props.user.id\n    }).then(data => {\n      setMicroposts(data.microposts);\n    });\n    return setMicroposts([]);\n  }, []); // 返り値：ユーザー画面\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      width: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          width: 56,\n          height: 56\n        },\n        children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n          sx: {\n            fontSize: 65\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: props.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u8FFD\\u52A0\\u4E88\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), props.isLoggedIn && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleOpenSetting,\n            children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u306E\\u7DE8\\u96C6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SettingDialog, {\n            handleClose: handleCloseSetting,\n            open: openSettingDialog,\n            user: props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleOpenPost,\n            children: \"\\u6295\\u7A3F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n        handleClose: handleClosePost,\n        open: openDialogPost,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.100'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: '100%',\n            bgcolor: 'background.paper'\n          },\n          children: MicropostsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"DeqXmrYGmEUuFQr8hRSzI86+JLg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","useEffect","Link","Avatar","ListItemAvatar","Typography","Button","Grid","ListItem","List","ListItemText","AccountCircle","fetchUser","deleteMicropost","SettingDialog","MicropostDialog","User","props","openSettingDialog","setOpenSettingDialog","openDialogPost","setOpenDialogPost","microposts","setMicroposts","handleOpenSetting","handleCloseSetting","handleOpenPost","handleClosePost","MicropostsList","map","micropost","fontSize","content","created_at","user","id","user_id","then","data","width","mx","bgcolor","px","height","name","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,UAAjC,QAAmD,eAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CACA;;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C,CAH6B,CAI7B;;AACA,QAAMwB,iBAAiB,GAAG,MAAM;AAAEL,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AAA4B,GAA9D;;AACA,QAAMM,kBAAkB,GAAG,MAAM;AAAEN,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AAA6B,GAAhE,CAN6B,CAO7B;;;AACA,QAAMO,cAAc,GAAG,MAAM;AAAEL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAyB,GAAxD;;AACA,QAAMM,eAAe,GAAG,MAAM;AAAEN,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0B,GAA1D,CAT6B,CAU7B;;;AACA,QAAMO,cAAc,GAAGN,UAAU,CAACO,GAAX,CAAeC,SAAS,iBAC7C,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,EAAED,SAAS,CAACE,OAFrB;AAGE,QAAA,SAAS,EAAEF,SAAS,CAACG;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,EAMGhB,KAAK,CAACiB,IAAN,CAAWC,EAAX,KAAkBL,SAAS,CAACM,OAA5B,iBACC,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAsB,QAAA,OAAO,EAAE,MAAMvB,eAAe,CAACiB,SAAS,CAACK,EAAX,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,EAAE,EAAE,CAAhC;AAAA,gBACGL,SAAS,CAACE;AADb;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,KAAeF,SAAS,CAACK,EAAzB;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB,CAX6B,CA+B7B;;AACAlC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS,CAAC;AAAEwB,MAAAA,OAAO,EAAEnB,KAAK,CAACiB,IAAN,CAAWC;AAAtB,KAAD,CAAT,CACGE,IADH,CACQC,IAAI,IAAI;AACZf,MAAAA,aAAa,CAACe,IAAI,CAAChB,UAAN,CAAb;AACD,KAHH;AAIA,WAAOC,aAAa,CAAC,EAAD,CAApB;AACD,GANQ,EAMN,EANM,CAAT,CAhC6B,CAwC7B;;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE;AAAEgB,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAEF,UAAAA,KAAK,EAAE,EAAT;AAAaI,UAAAA,MAAM,EAAE;AAArB,SAAZ;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,EAAE,EAAE;AAAEZ,YAAAA,QAAQ,EAAE;AAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBACGd,KAAK,CAACiB,IAAN,CAAWU;AADd;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAYI3B,KAAK,CAAC4B,UAAN,iBACA,QAAC,QAAD;AAAA,gCACE;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAErB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,aAAD;AACE,YAAA,WAAW,EAAEC,kBADf;AAEE,YAAA,IAAI,EAAEP,iBAFR;AAGE,YAAA,IAAI,EAAED,KAAK,CAACiB;AAHd;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAER,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eA+BE,QAAC,eAAD;AACE,QAAA,WAAW,EAAEC,eADf;AAEE,QAAA,IAAI,EAAEP,cAFR;AAGE,QAAA,IAAI,EAAEH,KAAK,CAACiB;AAHd;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAsCE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEQ,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAAEF,YAAAA,KAAK,EAAE,MAAT;AAAiBE,YAAAA,OAAO,EAAE;AAA1B,WAAV;AAAA,oBACGb;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CA1FM;;GAAMZ,I;;KAAAA,I","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link';\n// ユーザーページのstyle\nimport { Avatar, ListItemAvatar, Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport { Grid, ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\";\n// コンポーネント\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\n\nexport const User = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  const [openDialogPost, setOpenDialogPost] = useState(false)\n  const [microposts, setMicroposts] = useState([])\n  // 設定変更Dialogを開閉する関数群\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n  // 投稿Dialogを開閉する関数群\n  const handleOpenPost = () => { setOpenDialogPost(true) }\n  const handleClosePost = () => { setOpenDialogPost(false) }\n  // 投稿一覧を表示する画面\n  const MicropostsList = microposts.map(micropost =>\n    <ListItem key={micropost.id}>\n      <ListItemAvatar>\n        <AccountCircle sx={{ fontSize: 40 }} />\n      </ListItemAvatar>\n      <div>\n        <ListItemText\n          component=\"div\"\n          primary={micropost.content}\n          secondary={micropost.created_at}\n        />\n        {props.user.id === micropost.user_id && (\n          <Link component=\"div\" onClick={() => deleteMicropost(micropost.id)}>delete</Link>\n        )}\n      </div>\n      <Typography variant=\"body1\" pl={2}>\n        {micropost.content}\n      </Typography>\n    </ListItem >\n  )\n  // レンダーされた際に投稿内容を描画する。※未完成\n  useEffect(() => {\n    fetchUser({ user_id: props.user.id })\n      .then(data => {\n        setMicroposts(data.microposts)\n      })\n    return setMicroposts([])\n  }, [])\n\n  // 返り値：ユーザー画面\n  return (\n    <Grid container sx={{ width: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <h2>プロフィール</h2>\n        <Avatar sx={{ width: 56, height: 56 }} >\n          <AccountCircle sx={{ fontSize: 65 }} />\n        </Avatar>\n        <Typography variant=\"h6\">\n          {props.user.name}\n        </Typography>\n        <Typography variant=\"body1\">\n          プロフィールを追加予定\n        </Typography>\n        {\n          props.isLoggedIn &&\n          <Fragment>\n            <div>\n              <Button onClick={handleOpenSetting}>\n                プロフィールの編集\n              </Button>\n              <SettingDialog\n                handleClose={handleCloseSetting}\n                open={openSettingDialog}\n                user={props.user}\n              />\n            </div>\n            <div>\n              <Button variant=\"contained\" onClick={handleOpenPost}>\n                投稿\n              </Button>\n            </div>\n          </Fragment>\n        }\n        <MicropostDialog\n          handleClose={handleClosePost}\n          open={openDialogPost}\n          user={props.user}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} sx={{ px: 2, bgcolor: 'grey.100' }}>\n        <div>\n          <h2>投稿一覧</h2>\n          <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {MicropostsList}\n          </List>\n        </div>\n      </Grid>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}