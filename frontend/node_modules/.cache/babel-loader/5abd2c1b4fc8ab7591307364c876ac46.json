{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { Home } from './containers/Home';\nimport { User } from './containers/User';\nimport { fetchLoggedIn } from './apis/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedInStatus, setLoggedInStatus] = useState(\"未ログイン\");\n  const [user, setUser] = useState({}); // ログインのコールバック関数\n\n  const handleLogin = data => {\n    setLoggedInStatus(\"ログイン済み\");\n    setUser(data.user);\n  }; // ログアウトのコールバック関数\n\n\n  const handleLogout = () => {\n    setLoggedInStatus(\"未ログイン\");\n    setUser({});\n  }; // ログイン状態を追跡するコールバック関数\n\n\n  const checkLoginStatus = () => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && loggedInStatus === \"未ログイン\") {\n        handleLogin(data);\n      } else if (!data.logged_in && loggedInStatus === \"ログイン済み\") {\n        handleLogout();\n      } else console.log('ログインエラー', error);\n    });\n  };\n\n  useEffect(() => checkLoginStatus());\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          loggedInStatus: loggedInStatus,\n          handleLogin: handleLogin,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/user/:id\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(User, {\n          match: match,\n          loggedInStatus: loggedInStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TnBT+peZv1nuk3cSmOG6khg8Rpc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Home","User","fetchLoggedIn","App","loggedInStatus","setLoggedInStatus","user","setUser","handleLogin","data","handleLogout","checkLoginStatus","then","logged_in","console","log","error","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAO,WAAP;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,cAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,OAAD,CAApD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CAHa,CAKb;;AACA,QAAMa,WAAW,GAAIC,IAAD,IAAU;AAC5BJ,IAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACAE,IAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACD,GAHD,CANa,CAWb;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzBL,IAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD,CAZa,CAiBb;;;AACA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,aAAa,GACXU,IADF,CACOH,IAAI,IAAI;AACb,UAAIA,IAAI,CAACI,SAAL,IAAkBT,cAAc,KAAK,OAAzC,EAAkD;AAChDI,QAAAA,WAAW,CAACC,IAAD,CAAX;AACD,OAFD,MAEO,IAAI,CAACA,IAAI,CAACI,SAAN,IAAmBT,cAAc,KAAK,QAA1C,EAAoD;AACzDM,QAAAA,YAAY;AACb,OAFM,MAILI,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACH,KATD;AAUD,GAXD;;AAaAtB,EAAAA,SAAS,CAAC,MACRiB,gBAAgB,EADT,CAAT;AAIA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACE,QAAA,IAAI,EAAC,GADP;AAAA,+BAEE,QAAC,IAAD;AACE,UAAA,cAAc,EAAEP,cADlB;AAEE,UAAA,WAAW,EAAEI,WAFf;AAGE,UAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,MAAM,EAAE,CAAC;AAAEO,UAAAA;AAAF,SAAD,kBACN,QAAC,IAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAEE,UAAA,cAAc,EAAEb;AAFlB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA5DQD,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport { Home } from './containers/Home'\nimport { User } from './containers/User'\nimport { fetchLoggedIn } from './apis/users'\n\nfunction App() {\n\n  const [loggedInStatus, setLoggedInStatus] = useState(\"未ログイン\");\n  const [user, setUser] = useState({});\n\n  // ログインのコールバック関数\n  const handleLogin = (data) => {\n    setLoggedInStatus(\"ログイン済み\")\n    setUser(data.user)\n  }\n\n  // ログアウトのコールバック関数\n  const handleLogout = () => {\n    setLoggedInStatus(\"未ログイン\")\n    setUser({})\n  }\n\n  // ログイン状態を追跡するコールバック関数\n  const checkLoginStatus = () => {\n    fetchLoggedIn(\n    ).then(data => {\n      if (data.logged_in && loggedInStatus === \"未ログイン\") {\n        handleLogin(data)\n      } else if (!data.logged_in && loggedInStatus === \"ログイン済み\") {\n        handleLogout()\n      }\n      else\n        console.log('ログインエラー', error)\n    })\n  }\n\n  useEffect(() =>\n    checkLoginStatus()\n  )\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact\n          path=\"/\">\n          <Home\n            loggedInStatus={loggedInStatus}\n            handleLogin={handleLogin}\n            handleLogout={handleLogout}\n          />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route exact\n          path=\"/user/:id\"\n          render={({ match }) =>\n            <User\n              match={match}\n              loggedInStatus={loggedInStatus}\n            />\n          }>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}