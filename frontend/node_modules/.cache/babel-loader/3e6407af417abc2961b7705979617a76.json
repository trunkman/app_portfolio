{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link'; // ユーザーページのstyle\n\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport { Grid, ListItem } from \"@mui/material\";\nimport ListItemText from '@mui/material/ListItemText'; // api\n\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\"; // コンポーネント\n\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false);\n  const [openDialogPost, setOpenDialogPost] = useState(false);\n  const [microposts, setMicroposts] = useState([]); // 設定変更Dialogを開閉する関数群\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 投稿Dialogを開閉する関数群\n\n\n  const handleOpenPost = () => {\n    setOpenDialogPost(true);\n  };\n\n  const handleClosePost = () => {\n    setOpenDialogPost(false);\n  }; // 投稿一覧を表示する画面\n\n\n  const MicropostsList = microposts.map(micropost => /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: micropost.content,\n      secondary: micropost.created_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), props.user.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n      component: \"button\",\n      onClick: () => deleteMicropost(micropost.id),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, micropost.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)); // レンダーされた際に投稿内容を描画する。※未完成\n\n  useEffect(() => {\n    fetchUser({\n      user_id: props.user.id\n    }).then(data => {\n      setMicroposts(data.microposts);\n    });\n    return setMicroposts([]);\n  }, [props.user.id]); // 返り値：ユーザー画面\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my_profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID:\", props.user.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u540D\\u524D:\", props.user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u203B\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u306E\\u8FFD\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u203B\\u753B\\u50CF\\u306E\\u8FFD\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), props.isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleOpenSetting,\n              children: \"\\u8A2D\\u5B9A\\uFF08\\u30E6\\u30FC\\u30B6\\u30FC\\u60C5\\u5831\\u306E\\u66F4\\u65B0\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SettingDialog, {\n              handleClose: handleCloseSetting,\n              open: openSettingDialog,\n              user: props.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleOpenPost,\n          children: \"\\u6295\\u7A3F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n          handleClose: handleClosePost,\n          open: openDialogPost,\n          user: props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: '100%',\n              maxWidth: 360,\n              bgcolor: 'background.paper'\n            },\n            children: MicropostsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"DeqXmrYGmEUuFQr8hRSzI86+JLg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","useEffect","Link","Button","List","Grid","ListItem","ListItemText","fetchUser","deleteMicropost","SettingDialog","MicropostDialog","User","props","openSettingDialog","setOpenSettingDialog","openDialogPost","setOpenDialogPost","microposts","setMicroposts","handleOpenSetting","handleCloseSetting","handleOpenPost","handleClosePost","MicropostsList","map","micropost","content","created_at","user","id","user_id","then","data","name","isLoggedIn","width","maxWidth","bgcolor"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link';\n// ユーザーページのstyle\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport { Grid, ListItem } from \"@mui/material\";\nimport ListItemText from '@mui/material/ListItemText';\n// api\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\";\n// コンポーネント\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\n\nexport const User = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  const [openDialogPost, setOpenDialogPost] = useState(false)\n  const [microposts, setMicroposts] = useState([])\n  // 設定変更Dialogを開閉する関数群\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n  // 投稿Dialogを開閉する関数群\n  const handleOpenPost = () => { setOpenDialogPost(true) }\n  const handleClosePost = () => { setOpenDialogPost(false) }\n  // 投稿一覧を表示する画面\n  const MicropostsList = microposts.map(micropost =>\n    <ListItem key={micropost.id}>\n      <ListItemText\n        primary={micropost.content}\n        secondary={micropost.created_at}\n      />\n      {\n        props.user.id === micropost.user_id &&\n        <Link component=\"button\" onClick={() => deleteMicropost(micropost.id)}>delete</Link>\n      }\n    </ListItem >\n  )\n  // レンダーされた際に投稿内容を描画する。※未完成\n  useEffect(() => {\n    fetchUser({ user_id: props.user.id })\n      .then(data => {\n        setMicroposts(data.microposts)\n      })\n    return setMicroposts([])\n  }, [props.user.id])\n\n  // 返り値：ユーザー画面\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n          <h1>My Profile</h1>\n          <div className=\"my_profile\">\n            <p>ID:{props.user.id}</p>\n            <p>名前:{props.user.name}</p>\n            <p>※プロフィールの追加</p>\n            <p>※画像の追加</p>\n            {\n              props.isLoggedIn &&\n              <div>\n                <Button variant=\"outlined\" onClick={handleOpenSetting}>\n                  設定（ユーザー情報の更新）\n                </Button>\n                <SettingDialog\n                  handleClose={handleCloseSetting}\n                  open={openSettingDialog}\n                  user={props.user}\n                />\n              </div>\n            }\n          </div>\n          <Button variant=\"outlined\" onClick={handleOpenPost}>\n            投稿\n          </Button>\n          <MicropostDialog\n            handleClose={handleClosePost}\n            open={openDialogPost}\n            user={props.user}\n          />\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <div>\n            <h2>投稿一覧</h2>\n            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n              {MicropostsList}\n            </List>\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}