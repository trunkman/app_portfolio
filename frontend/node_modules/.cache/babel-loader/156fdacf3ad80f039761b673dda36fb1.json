{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // styles\n\nimport { Divider } from \"@mui/material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; // アイコン\n\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow'; // api\n\nimport { postMessage } from \"../../apis/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chat = props => {\n  _s();\n\n  const [chat, setChat] = useState(null);\n\n  const handleSubmit = () => {\n    postMessage({\n      content: chat,\n      user_id: props.user_id,\n      room_id: props.room_id\n    }).then(() => {\n      setChat('');\n      props.dataFatching();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      type: \"text\",\n      multiline: true,\n      rows: 3,\n      value: chat,\n      onChange: e => setChat(e.target.value),\n      fullWidth: true,\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      variant: \"contained\",\n      children: [\"\\u9001\\u4FE1\", /*#__PURE__*/_jsxDEV(DoubleArrowIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"qfNzfpNcplg6GFcfXGbpuq+eiu4=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx"],"names":["React","useState","Divider","TextField","Button","DoubleArrowIcon","postMessage","Chat","props","chat","setChat","handleSubmit","content","user_id","room_id","then","dataFatching","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,iCAA5B,C,CACA;;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMU,YAAY,GAAG,MAAM;AACzBL,IAAAA,WAAW,CAAC;AACVM,MAAAA,OAAO,EAAEH,IADC;AAEVI,MAAAA,OAAO,EAAEL,KAAK,CAACK,OAFL;AAGVC,MAAAA,OAAO,EAAEN,KAAK,CAACM;AAHL,KAAD,CAAX,CAIGC,IAJH,CAIQ,MAAM;AACZL,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,MAAAA,KAAK,CAACQ,YAAN;AACD,KAPD;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAE,CALR;AAME,MAAA,KAAK,EAAEP,IANT;AAOE,MAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAPxB;AAQE,MAAA,SAAS,MARX;AASE,MAAA,OAAO,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE,QAAC,MAAD;AACE,MAAA,OAAO,EAAER,YADX;AAEE,MAAA,OAAO,EAAC,WAFV;AAAA,8CAKE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAwBD,CArCM;;GAAMJ,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\n// styles\nimport { Divider } from \"@mui/material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n// アイコン\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\n// api\nimport { postMessage } from \"../../apis/messages\";\n\nexport const Chat = (props) => {\n  const [chat, setChat] = useState(null)\n  const handleSubmit = () => {\n    postMessage({\n      content: chat,\n      user_id: props.user_id,\n      room_id: props.room_id,\n    }).then(() => {\n      setChat('')\n      props.dataFatching()\n    })\n  }\n\n  return (\n    <>\n      <Divider />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        type=\"text\"\n        multiline\n        rows={3}\n        value={chat}\n        onChange={e => setChat(e.target.value)}\n        fullWidth\n        variant=\"standard\"\n      />\n      {/* <MessageButton /> */}\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n      >\n        送信\n        <DoubleArrowIcon />\n      </Button>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}