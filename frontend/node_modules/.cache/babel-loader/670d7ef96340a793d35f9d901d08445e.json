{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // styles\n\nimport Grid from \"@mui/material/Grid\";\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel'; // api\n\nimport { fetchUserBooks } from '../../apis/users'; // コンポーネント\n\nimport { BookCard } from '../../components/Books/BookCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Mybooks = props => {\n  _s();\n\n  const [readBooks, setReadBooks] = useState(true);\n  const [stackBooks, setStackBooks] = useState(true);\n  const [value, setValue] = useState('read'); // タブ機能\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }; // ユーザーの本一覧を取得\n\n\n  const fetchBooks = () => {\n    fetchUserBooks(props.loginUser.id).then(data => {\n      setReadBooks(data.read_books);\n      setStackBooks(data.stack_books);\n      console.log(readBooks);\n    });\n  };\n\n  useEffect(() => {\n    fetchBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      maxWidth: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30DE\\u30A4\\u30D6\\u30C3\\u30AF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 12,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.300'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u8AAD\\u3093\\u3060\\u672C\\uFF08\", readBooks.length, \"\\u518A\\uFF09\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u7A4D\\u3093\\u3067\\u3044\\u308B\\u672C\\uFF08\", stackBooks.length, \"\\u518A\\uFF09\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        typography: 'body1'\n      },\n      children: /*#__PURE__*/_jsxDEV(TabContext, {\n        value: value,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            onChange: handleChange,\n            \"aria-label\": \"lab API tabs example\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"\\u8AAD\\u3093\\u3060\\u672C(\\uFF1F\\u518A)\",\n              value: \"read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"\\u7A4D\\u3093\\u3067\\u3044\\u308B\\u672C(\\uFF1F\\u518A)\",\n              value: \"stack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"read\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u8AAD\\u3093\\u3060\\u672C\", readBooks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"stack\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u7A4D\\u3093\\u3067\\u3044\\u308B\\u672C\", stackBooks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mybooks, \"wOaVRxpjBoM27LTqdbWx2uP96iw=\");\n\n_c = Mybooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mybooks\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx"],"names":["React","useState","useEffect","Grid","Box","Tab","TabContext","TabList","TabPanel","fetchUserBooks","BookCard","Mybooks","props","readBooks","setReadBooks","stackBooks","setStackBooks","value","setValue","handleChange","event","newValue","fetchBooks","loginUser","id","then","data","read_books","stack_books","console","log","maxWidth","mx","bgcolor","px","length","width","typography","borderBottom","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// styles\nimport Grid from \"@mui/material/Grid\";\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\n// api\nimport { fetchUserBooks } from '../../apis/users'\n// コンポーネント\nimport { BookCard } from '../../components/Books/BookCard'\n\nexport const Mybooks = (props) => {\n  const [readBooks, setReadBooks] = useState(true)\n  const [stackBooks, setStackBooks] = useState(true)\n  const [value, setValue] = useState('read');\n  // タブ機能\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  // ユーザーの本一覧を取得\n  const fetchBooks = () => {\n    fetchUserBooks(props.loginUser.id)\n      .then(data => {\n        setReadBooks(data.read_books)\n        setStackBooks(data.stack_books)\n        console.log(readBooks)\n      })\n  }\n\n  useEffect(() => {\n    fetchBooks()\n  }, [])\n\n  return (\n    <Grid container sx={{ maxWidth: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <h1>マイブック</h1>\n      </Grid>\n\n      <Grid item sm={12} sx={{ px: 2, bgcolor: 'grey.300' }}>\n        <h3>読んだ本（{readBooks.length}冊）</h3>\n        <h3>積んでいる本（{stackBooks.length}冊）</h3>\n      </Grid>\n      <Box sx={{ width: '100%', typography: 'body1' }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n              <Tab label=\"読んだ本(？冊)\" value=\"read\" />\n              <Tab label=\"積んでいる本(？冊)\" value=\"stack\" />\n            </TabList>\n          </Box>\n          <TabPanel value=\"read\">\n            <p>読んだ本{readBooks.length}</p>\n            {/* <p>{readBooks[0].created_at}</p> */}\n            {/* {\n              readBooks && (\n                readBooks.map(book =>\n                  <Grid item key={book.id}\n                    xs={6} sm={4} sx={{ p: 2, bgcolor: 'grey.100' }}>\n                    <BookCard\n                      book={book}\n                    />\n                  </Grid>\n                )\n              )\n            } */}\n          </TabPanel>\n          <TabPanel value=\"stack\">\n            <p>積んでいる本{stackBooks.length}</p>\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Grid >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}