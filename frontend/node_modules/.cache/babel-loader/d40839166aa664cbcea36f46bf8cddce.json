{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\"; // ユーザーページのstyle\n\nimport Button from '@mui/material/Button'; // api\n\nimport { fetchUser } from \"../apis/users\"; // コンポーネント\n\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false);\n  const [openDialogPost, setOpenDialogPost] = useState(false);\n  const [microposts, setMicroposts] = useState([]); // 設定変更Dialogを開閉する関数\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  };\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 投稿Dialogを開閉する関数\n\n\n  const handleOpenPost = () => {\n    setOpenDialogPost(true);\n  };\n\n  const handleClosePost = () => {\n    setOpenDialogPost(false);\n  }; // 投稿一覧の画面\n\n\n  const MicropostsList = microposts.map(micropost => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: micropost.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: micropost.created\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), props.user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, micropost.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)); // 投稿内容が更新した際にレンダーする\n\n  useEffect(() => {\n    fetchUser(1).then(data => {\n      setMicroposts(data.microposts);\n    });\n  }, []); // 返り値：ユーザー画面\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my_profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID:\", props.user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u540D\\u524D:\", props.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u203B\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u306E\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u203B\\u753B\\u50CF\\u306E\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), props.isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleOpenSetting,\n          children: \"\\u8A2D\\u5B9A\\uFF08\\u30E6\\u30FC\\u30B6\\u30FC\\u60C5\\u5831\\u306E\\u66F4\\u65B0\\uFF09\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SettingDialog, {\n          handleClose: handleCloseSetting,\n          open: openSettingDialog,\n          user: props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleOpenPost,\n      children: \"\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MicropostDialog, {\n      handleClose: handleClosePost,\n      open: openDialogPost,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u6295\\u7A3F\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: MicropostsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"DeqXmrYGmEUuFQr8hRSzI86+JLg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","useEffect","Button","fetchUser","SettingDialog","MicropostDialog","User","props","openSettingDialog","setOpenSettingDialog","openDialogPost","setOpenDialogPost","microposts","setMicroposts","handleOpenSetting","handleCloseSetting","handleOpenPost","handleClosePost","MicropostsList","map","micropost","content","created","user","id","then","data","name","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAH6B,CAI7B;;AACA,QAAMc,iBAAiB,GAAG,MAAM;AAAEL,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AAA4B,GAA9D;;AACA,QAAMM,kBAAkB,GAAG,MAAM;AAAEN,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AAA6B,GAAhE,CAN6B,CAO7B;;;AACA,QAAMO,cAAc,GAAG,MAAM;AAAEL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAyB,GAAxD;;AACA,QAAMM,eAAe,GAAG,MAAM;AAAEN,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0B,GAA1D,CAT6B,CAU7B;;;AACA,QAAMO,cAAc,GAAGN,UAAU,CAACO,GAAX,CAAgBC,SAAD,iBACpC;AAAA,4BACE;AAAA,gBAAKA,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAID,SAAS,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,YAHF,EAKIf,KAAK,CAACgB,IAAN,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KAASH,SAAS,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB,CAX6B,CAuB7B;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAAC,CAAD,CAAT,CACGsB,IADH,CACQC,IAAI,IAAI;AACZb,MAAAA,aAAa,CAACa,IAAI,CAACd,UAAN,CAAb;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT,CAxB6B,CA+B7B;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,0BAAOL,KAAK,CAACgB,IAAN,CAAWC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAOjB,KAAK,CAACgB,IAAN,CAAWI,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAMIpB,KAAK,CAACqB,UAAN,iBACA;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,OAAO,EAAEd,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AACE,UAAA,WAAW,EAAEC,kBADf;AAEE,UAAA,IAAI,EAAEP,iBAFR;AAGE,UAAA,IAAI,EAAED,KAAK,CAACgB;AAHd;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEP,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAwBE,QAAC,eAAD;AACE,MAAA,WAAW,EAAEC,eADf;AAEE,MAAA,IAAI,EAAEP,cAFR;AAGE,MAAA,IAAI,EAAEH,KAAK,CAACgB;AAHd;AAAA;AAAA;AAAA;AAAA,YAxBF,eA6BE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArEM;;GAAMZ,I;;KAAAA,I","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n// ユーザーページのstyle\nimport Button from '@mui/material/Button';\n// api\nimport { fetchUser } from \"../apis/users\";\n// コンポーネント\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { MicropostDialog } from \"../components/MicropostDialog\";\n\nexport const User = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n  const [openDialogPost, setOpenDialogPost] = useState(false)\n  const [microposts, setMicroposts] = useState([])\n  // 設定変更Dialogを開閉する関数\n  const handleOpenSetting = () => { setOpenSettingDialog(true) }\n  const handleCloseSetting = () => { setOpenSettingDialog(false) }\n  // 投稿Dialogを開閉する関数\n  const handleOpenPost = () => { setOpenDialogPost(true) }\n  const handleClosePost = () => { setOpenDialogPost(false) }\n  // 投稿一覧の画面\n  const MicropostsList = microposts.map((micropost) =>\n    <li key={micropost.id}>\n      <h3>{micropost.content}</h3>\n      {/* <p>{micropost.user.name}</p> */}\n      <p>{micropost.created}</p>\n      {\n        props.user &&\n        <p >delete</p>\n      }\n    </li >\n  )\n\n  // 投稿内容が更新した際にレンダーする\n  useEffect(() => {\n    fetchUser(1)\n      .then(data => {\n        setMicroposts(data.microposts)\n      })\n  }, [])\n\n  // 返り値：ユーザー画面\n  return (\n    <Fragment>\n      <h1>My Profile</h1>\n      <div className=\"my_profile\">\n        <p>ID:{props.user.id}</p>\n        <p>名前:{props.user.name}</p>\n        <p>※プロフィールの追加</p>\n        <p>※画像の追加</p>\n        {\n          props.isLoggedIn &&\n          <div>\n            <Button variant=\"outlined\" onClick={handleOpenSetting}>\n              設定（ユーザー情報の更新）\n            </Button>\n            <SettingDialog\n              handleClose={handleCloseSetting}\n              open={openSettingDialog}\n              user={props.user}\n            />\n          </div>\n        }\n      </div>\n      <Button variant=\"outlined\" onClick={handleOpenPost}>\n        投稿\n      </Button>\n      <MicropostDialog\n        handleClose={handleClosePost}\n        open={openDialogPost}\n        user={props.user}\n      />\n      <div>\n        <h1>投稿一覧</h1>\n        <ul>{MicropostsList}</ul>\n      </div>\n\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}