{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { fetchLoggedIn } from './apis/sessions'; // コンテイナー\n\nimport { Home } from './containers/Home';\nimport { User } from './containers/User';\nimport { Users } from './containers/Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState({}); // ログインのコールバック関数\n\n  const handleLogIn = user => {\n    setIsLoggedIn(true);\n    setUser(user);\n  }; // ログアウトのコールバック関数\n\n\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setUser({});\n  }; // ログイン状態を追跡するコールバック関数\n\n\n  const checkLoginStatus = () => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && isLoggedIn) {\n        handleLogIn(data);\n      } else if (!data.logged_in && isLoggedIn) {\n        handleLogOut();\n      }\n    }).catch(e => {\n      console.error(e);\n    });\n  }; // useEffect(() => {\n  //   checkLoginStatus();\n  // }, [IsLoggedIn])\n\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          isLoggedIn: isLoggedIn,\n          handleLogIn: handleLogIn,\n          handleLogOut: handleLogOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/user/:id\",\n        render: ({\n          match\n        }) => /*#__PURE__*/_jsxDEV(User, {\n          isLoggedIn: isLoggedIn,\n          handleLogIn: handleLogIn,\n          handleLogOut: handleLogOut,\n          match: match,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/users\",\n        children: /*#__PURE__*/_jsxDEV(Users, {\n          isLoggedIn: isLoggedIn,\n          handleLogIn: handleLogIn,\n          handleLogOut: handleLogOut,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KKrU6klBsnrE89ggLSHsRTYQrQo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.jsx"],"names":["React","useEffect","useState","BrowserRouter","Switch","Route","fetchLoggedIn","Home","User","Users","App","isLoggedIn","setIsLoggedIn","user","setUser","handleLogIn","handleLogOut","checkLoginStatus","then","data","logged_in","catch","e","console","error","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CAEA;;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CAF4B,CAI5B;;AACA,QAAMa,WAAW,GAAIF,IAAD,IAAU;AAC5BD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD,CAL4B,CAU5B;;;AACA,QAAMG,YAAY,GAAG,MAAM;AACzBJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD,CAX4B,CAiB5B;;;AACA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BX,IAAAA,aAAa,GACVY,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,SAAL,IAAkBT,UAAtB,EAAkC;AAChCI,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD,MAEO,IAAI,CAACA,IAAI,CAACC,SAAN,IAAmBT,UAAvB,EAAmC;AACxCK,QAAAA,YAAY;AACb;AACF,KAPH,EAOKK,KAPL,CAOWC,CAAC,IAAI;AAAEC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AAAkB,KAPpC;AAQD,GATD,CAlB4B,CA6B5B;AACA;AACA;;;AAEA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACE,QAAA,IAAI,EAAC,GADP;AAAA,+BAEE,QAAC,IAAD;AACE,UAAA,UAAU,EAAEX,UADd;AAEE,UAAA,WAAW,EAAEI,WAFf;AAGE,UAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,MAAM,EAAE,CAAC;AAAES,UAAAA;AAAF,SAAD,kBACN,QAAC,IAAD;AACE,UAAA,UAAU,EAAEd,UADd;AAEE,UAAA,WAAW,EAAEI,WAFf;AAGE,UAAA,YAAY,EAAEC,YAHhB;AAIE,UAAA,KAAK,EAAES,KAJT;AAKE,UAAA,IAAI,EAAEZ;AALR;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAyBE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACE,QAAA,IAAI,EAAC,QADP;AAAA,+BAEE,QAAC,KAAD;AACE,UAAA,UAAU,EAAEF,UADd;AAEE,UAAA,WAAW,EAAEI,WAFf;AAGE,UAAA,YAAY,EAAEC,YAHhB;AAIE,UAAA,IAAI,EAAEH;AAJR;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAxEuBH,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport { fetchLoggedIn } from './apis/sessions'\n\n// コンテイナー\nimport { Home } from './containers/Home'\nimport { User } from './containers/User'\nimport { Users } from './containers/Users'\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  // ログインのコールバック関数\n  const handleLogIn = (user) => {\n    setIsLoggedIn(true);\n    setUser(user);\n  }\n\n  // ログアウトのコールバック関数\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setUser({});\n  }\n\n\n  // ログイン状態を追跡するコールバック関数\n  const checkLoginStatus = () => {\n    fetchLoggedIn()\n      .then((data) => {\n        if (data.logged_in && isLoggedIn) {\n          handleLogIn(data)\n        } else if (!data.logged_in && isLoggedIn) {\n          handleLogOut()\n        }\n      }).catch(e => { console.error(e) })\n  }\n\n  // useEffect(() => {\n  //   checkLoginStatus();\n  // }, [IsLoggedIn])\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact\n          path=\"/\">\n          <Home\n            isLoggedIn={isLoggedIn}\n            handleLogIn={handleLogIn}\n            handleLogOut={handleLogOut}\n          />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route exact\n          path=\"/user/:id\"\n          render={({ match }) =>\n            <User\n              isLoggedIn={isLoggedIn}\n              handleLogIn={handleLogIn}\n              handleLogOut={handleLogOut}\n              match={match}\n              user={user}\n            />\n          }>\n        </Route>\n      </Switch>\n      <Switch>\n        <Route exact\n          path=\"/users\">\n          <Users\n            isLoggedIn={isLoggedIn}\n            handleLogIn={handleLogIn}\n            handleLogOut={handleLogOut}\n            user={user}\n          />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}