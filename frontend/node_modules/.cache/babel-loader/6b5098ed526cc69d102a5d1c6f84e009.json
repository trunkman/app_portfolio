{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Typography from \"@mui/material/Typography\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { useHistory } from \"react-router\"; // api\n\nimport { deleteMicropost } from \"../../apis/microposts\"; // コンポーネント\n\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\";\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost\n}) => {\n  _s();\n\n  const history = useHistory(); // 削除確認ダイアログの開閉\n\n  const [open, setOpen] = useState({\n    isOpen: false,\n    micropostId: ''\n  }); // 投稿を削除する\n\n  const deleteSubmit = micropostId => {\n    deleteMicropost(micropostId);\n    history.push(`/users/${loginUser.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: loginUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: micropost.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: micropost.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(LikeButton, {\n          loginUserId: loginUser.id,\n          micropostId: micropost.id,\n          Status: likeStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CommentButton, {\n          loginUserId: loginUser.id,\n          micropostId: micropost.id,\n          commentCount: commentCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(Link, {\n        component: \"div\",\n        onClick: () => setOpen({\n          isOpen: true,\n          roomId: micropost.id\n        }),\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, micropost.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteDialog, {\n      handleClose: () => setOpen({\n        isOpen: false\n      }),\n      handleDelete: deleteSubmit(open.micropostId),\n      message: '投稿を削除',\n      open: open.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Micropost, \"MEsDhxYkUIEf5/s4iViJDTlJGZQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Micropost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Micropost\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx"],"names":["React","Box","Link","Typography","AccountCircle","useHistory","deleteMicropost","LikeButton","CommentButton","DeleteDialog","Micropost","commentCount","likeStatus","loginUser","micropost","history","open","setOpen","useState","isOpen","micropostId","deleteSubmit","push","id","display","alignItems","my","ml","name","created_at","content","user_id","roomId","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Typography from \"@mui/material/Typography\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { useHistory } from \"react-router\";\n// api\nimport { deleteMicropost } from \"../../apis/microposts\";\n// コンポーネント\nimport { LikeButton } from \"../Buttons/LikeButton\";\nimport { CommentButton } from \"../Buttons/CommentButton\"\nimport { DeleteDialog } from \"../Dialogs/DeleteDialog\";\n\nexport const Micropost = ({\n  commentCount,\n  likeStatus,\n  loginUser,\n  micropost,\n}) => {\n  const history = useHistory();\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    micropostId: '',\n  });\n\n  // 投稿を削除する\n  const deleteSubmit = (micropostId) => {\n    deleteMicropost(micropostId)\n    history.push(`/users/${loginUser.id}`)\n  }\n\n  return (\n    <>\n      <Box\n        key={micropost.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          my: 4,\n        }}>\n        <AccountCircle />\n\n        <Box sx={{ ml: 2 }}>\n          <Typography>\n            <b>{loginUser.name}</b>\n            <p>{micropost.created_at}</p>\n          </Typography>\n          <Typography>\n            {micropost.content}\n          </Typography>\n        </Box>\n\n        <Box sx={{ ml: 2 }}>\n          <LikeButton\n            loginUserId={loginUser.id}\n            micropostId={micropost.id}\n            Status={likeStatus}\n          />\n        </Box>\n\n        <Box sx={{ ml: 2 }}>\n          <CommentButton\n            loginUserId={loginUser.id}\n            micropostId={micropost.id}\n            commentCount={commentCount}\n          />\n        </Box>\n\n        {loginUser.id === micropost.user_id && (\n          <Link\n            component=\"div\"\n            onClick={() => setOpen({ isOpen: true, roomId: micropost.id })}\n          >\n            削除\n          </Link>\n        )}\n      </Box >\n\n      <DeleteDialog\n        handleClose={() => setOpen({ isOpen: false })}\n        handleDelete={deleteSubmit(open.micropostId)}\n        message={'投稿を削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}