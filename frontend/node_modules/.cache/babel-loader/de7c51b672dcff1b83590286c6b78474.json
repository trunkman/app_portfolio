{"ast":null,"code":"// 日付を整える\nconst formatDate = date => {\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n};\n\nexport const recordInitialState = {\n  fetchState: 'initial',\n  postState: 'initial',\n  id: '',\n  date: formatDate(new Date()),\n  sleepingHours: '',\n  feeling: 'satisfied',\n  user: {},\n  diaries: []\n};\nexport const recordReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return { ...state,\n        fetchState: 'loading'\n      };\n\n    case 'fetchSuccess':\n      return { ...state,\n        fetchState: 'ok',\n        user: action.payload.user,\n        diaries: action.payload.diaries\n      };\n\n    case 'date':\n      return { ...state,\n        date: action.payload\n      };\n\n    case 'sleepingHours':\n      return { ...state,\n        sleepingHours: action.payload\n      };\n\n    case 'feeling':\n      return { ...state,\n        feeling: action.payload\n      };\n\n    case 'reset':\n      return recordInitialState;\n\n    case 'preUpdate':\n      return {\n        id: action.payload.id,\n        date: action.payload.date,\n        sleepingHours: action.payload.sleepingHours,\n        feeling: action.payload.feeling\n      };\n\n    default:\n      return recordInitialState;\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/reducer/RecordReducer.jsx"],"names":["formatDate","date","getFullYear","getMonth","getDate","recordInitialState","fetchState","postState","id","Date","sleepingHours","feeling","user","diaries","recordReducer","state","action","type","payload"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAC3B,SACEA,IAAI,CAACC,WAAL,KAAqB,GAArB,IACCD,IAAI,CAACE,QAAL,KAAkB,CADnB,IACwB,GADxB,GAEAF,IAAI,CAACG,OAAL,EAHF;AAKD,CAND;;AAQA,OAAO,MAAMC,kBAAkB,GAAG;AAChCC,EAAAA,UAAU,EAAE,SADoB;AAEhCC,EAAAA,SAAS,EAAE,SAFqB;AAGhCC,EAAAA,EAAE,EAAE,EAH4B;AAIhCP,EAAAA,IAAI,EAAED,UAAU,CAAC,IAAIS,IAAJ,EAAD,CAJgB;AAKhCC,EAAAA,aAAa,EAAE,EALiB;AAMhCC,EAAAA,OAAO,EAAE,WANuB;AAOhCC,EAAAA,IAAI,EAAE,EAP0B;AAQhCC,EAAAA,OAAO,EAAE;AARuB,CAA3B;AAWP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELT,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELT,QAAAA,UAAU,EAAE,IAFP;AAGLM,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeN,IAHhB;AAILC,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAJnB,OAAP;;AAMF,SAAK,MAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELd,QAAAA,IAAI,EAAEe,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,aAAa,EAAEM,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAK,SAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAK,OAAL;AACE,aAAOb,kBAAP;;AACF,SAAK,WAAL;AACE,aAAO;AACLG,QAAAA,EAAE,EAAEQ,MAAM,CAACE,OAAP,CAAeV,EADd;AAELP,QAAAA,IAAI,EAAEe,MAAM,CAACE,OAAP,CAAejB,IAFhB;AAGLS,QAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAeR,aAHzB;AAILC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAJnB,OAAP;;AAMF;AACE,aAAON,kBAAP;AAtCJ;AAwCD,CAzCM","sourcesContent":["// 日付を整える\nconst formatDate = (date) => {\n  return (\n    date.getFullYear() + '-' +\n    (date.getMonth() + 1) + '-' +\n    date.getDate()\n  )\n}\n\nexport const recordInitialState = {\n  fetchState: 'initial',\n  postState: 'initial',\n  id: '',\n  date: formatDate(new Date()),\n  sleepingHours: '',\n  feeling: 'satisfied',\n  user: {},\n  diaries: [],\n}\n\nexport const recordReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetching':\n      return {\n        ...state,\n        fetchState: 'loading',\n      };\n    case 'fetchSuccess':\n      return {\n        ...state,\n        fetchState: 'ok',\n        user: action.payload.user,\n        diaries: action.payload.diaries,\n      };\n    case 'date':\n      return {\n        ...state,\n        date: action.payload,\n      };\n    case 'sleepingHours':\n      return {\n        ...state,\n        sleepingHours: action.payload,\n      };\n    case 'feeling':\n      return {\n        ...state,\n        feeling: action.payload,\n      };\n    case 'reset':\n      return recordInitialState;\n    case 'preUpdate':\n      return {\n        id: action.payload.id,\n        date: action.payload.date,\n        sleepingHours: action.payload.sleepingHours,\n        feeling: action.payload.feeling,\n      };\n    default:\n      return recordInitialState;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}