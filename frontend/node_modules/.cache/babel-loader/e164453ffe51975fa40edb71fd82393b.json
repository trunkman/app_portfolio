{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/SideBar.jsx\";\nimport React from 'react'; // styles\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton'; // アイコン\n\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'; // コンポーネント\n\nimport { HomeButton } from '../../components/Navigations/HomeButton';\nimport { ProfileButton } from '../../components/Navigations/ProfileButton';\nimport { FollowsButton } from '../../components/Navigations/FollowsButton';\nimport { MessageButton } from '../../components/Navigations/MessageButton';\nimport { PostsButton } from '../../components/Navigations/PostsButton';\nimport { AvatarButton } from '../../components/Navigations/AvatarButton';\nimport { RankingButton } from '../../components/Navigations/RankingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SideBar = props => {\n  const open = props.open;\n  const theme = props.theme;\n\n  const openedMixin = theme => ({\n    width: props.drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    overflowX: 'hidden'\n  });\n\n  const closedMixin = theme => ({\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(${theme.spacing(9)} + 1px)`\n    }\n  });\n\n  const Drawer = styled(MuiDrawer, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    width: props.drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && { ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme)\n    }),\n    ...(!open && { ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme)\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(props.DrawerHeader, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: props.handleDrawerClose,\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvatarButton, {\n      user: props.loginUser,\n      size: \"45\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HomeButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FollowsButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RankingButton, {\n      loginUserId: props.loginUser.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/SideBar.jsx"],"names":["React","styled","useTheme","MuiDrawer","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","HomeButton","ProfileButton","FollowsButton","MessageButton","PostsButton","AvatarButton","RankingButton","SideBar","props","open","theme","openedMixin","width","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","Drawer","shouldForwardProp","prop","flexShrink","whiteSpace","boxSizing","handleDrawerClose","direction","loginUser","id"],"mappings":"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","sourcesContent":["import React from 'react';\n// styles\nimport { styled, useTheme } from '@mui/material/styles';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\n// アイコン\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n// コンポーネント\nimport { HomeButton } from '../../components/Navigations/HomeButton'\nimport { ProfileButton } from '../../components/Navigations/ProfileButton';\nimport { FollowsButton } from '../../components/Navigations/FollowsButton';\nimport { MessageButton } from '../../components/Navigations/MessageButton';\nimport { PostsButton } from '../../components/Navigations/PostsButton';\nimport { AvatarButton } from '../../components/Navigations/AvatarButton';\nimport { RankingButton } from '../../components/Navigations/RankingButton';\n\nexport const SideBar = (props) => {\n  const open = props.open\n  const theme = props.theme\n\n  const openedMixin = (theme) => ({\n    width: props.drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n  });\n  const closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n  });\n\n  const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      width: props.drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      ...(open && {\n        ...openedMixin(theme),\n        '& .MuiDrawer-paper': openedMixin(theme),\n      }),\n      ...(!open && {\n        ...closedMixin(theme),\n        '& .MuiDrawer-paper': closedMixin(theme),\n      }),\n    }),\n  );\n\n  return (\n    <Drawer variant=\"permanent\" open={open}>\n      <props.DrawerHeader>\n        <IconButton onClick={props.handleDrawerClose}>\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n        </IconButton>\n      </props.DrawerHeader>\n      <Divider />\n      <AvatarButton user={props.loginUser} size=\"45\" />\n      <Divider />\n      <HomeButton loginUserId={props.loginUser.id} />\n      <Divider />\n      <ProfileButton loginUserId={props.loginUser.id} />\n      <Divider />\n      <FollowsButton loginUserId={props.loginUser.id} />\n      <Divider />\n      <PostsButton loginUserId={props.loginUser.id} />\n      <Divider />\n      <MessageButton loginUserId={props.loginUser.id} />\n      <Divider />\n      <RankingButton loginUserId={props.loginUser.id} />\n    </Drawer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}