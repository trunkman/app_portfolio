{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link'; // styled\n\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { Grid, ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText'; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\"; // コンポーネント\n\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [microposts, setMicroposts] = useState([]); // レンダーされた際に投稿内容を描画する。※未完成\n\n  useEffect(() => {\n    fetchUser({\n      user_id: props.user.id\n    }).then(data => {\n      setMicroposts(data.microposts);\n    });\n    return setMicroposts([]);\n  }, []); // 返り値：ユーザー画面\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      width: 1000,\n      mx: \"auto\",\n      bgcolor: 'grey.300'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.200'\n      },\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        isLoggedIn: props.isLoggedIn,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      sx: {\n        px: 2,\n        bgcolor: 'grey.100'\n      },\n      children: /*#__PURE__*/_jsxDEV(Microposts, {\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"Lqx8mNlEXDJ59aHLe728iBU3H0Y=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","useState","useEffect","Link","ListItemAvatar","Typography","Grid","ListItem","List","ListItemText","AccountCircle","fetchUser","deleteMicropost","Profile","Microposts","User","props","microposts","setMicroposts","user_id","user","id","then","data","width","mx","bgcolor","px","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mCAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C,CAD6B,CAG7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAAC;AAAEQ,MAAAA,OAAO,EAAEH,KAAK,CAACI,IAAN,CAAWC;AAAtB,KAAD,CAAT,CACGC,IADH,CACQC,IAAI,IAAI;AACZL,MAAAA,aAAa,CAACK,IAAI,CAACN,UAAN,CAAb;AACD,KAHH;AAIA,WAAOC,aAAa,CAAC,EAAD,CAApB;AACD,GANQ,EAMN,EANM,CAAT,CAJ6B,CAY7B;;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE;AAAEM,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,UAAU,EAAEV,KAAK,CAACY,UADpB;AAEE,QAAA,IAAI,EAAEZ,KAAK,CAACI;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE;AAAEO,QAAAA,EAAE,EAAE,CAAN;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAA9B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEV,KAAK,CAACI;AADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAvDM;;GAAML,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Link from '@mui/material/Link';\n// styled\nimport { ListItemAvatar, Typography } from \"@mui/material\";\nimport { Grid, ListItem } from \"@mui/material\";\nimport List from '@mui/material/List';\nimport ListItemText from '@mui/material/ListItemText';\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { fetchUser } from \"../apis/users\";\nimport { deleteMicropost } from \"../apis/microposts\";\n// コンポーネント\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\n\nexport const User = (props) => {\n  const [microposts, setMicroposts] = useState([])\n\n  // レンダーされた際に投稿内容を描画する。※未完成\n  useEffect(() => {\n    fetchUser({ user_id: props.user.id })\n      .then(data => {\n        setMicroposts(data.microposts)\n      })\n    return setMicroposts([])\n  }, [])\n\n  // 返り値：ユーザー画面\n  return (\n    <Grid container sx={{ width: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n      <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.200' }}>\n        <Profile\n          isLoggedIn={props.isLoggedIn}\n          user={props.user}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} sx={{ px: 2, bgcolor: 'grey.100' }}>\n        <Microposts\n          user={props.user}\n        />\n        {/* <div>\n          <h2>投稿一覧</h2>\n          <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {\n              microposts.map(micropost =>\n                <ListItem key={micropost.id}>\n                  <ListItemAvatar>\n                    <AccountCircle sx={{ fontSize: 40 }} />\n                  </ListItemAvatar>\n                  <div>\n                    <ListItemText\n                      component=\"div\"\n                      primary={micropost.user_id}\n                      secondary={micropost.created_at}\n                    />\n                    {props.user.id === micropost.user_id && (\n                      <Link component=\"div\" onClick={() => deleteMicropost(micropost.id)}>delete</Link>\n                    )}\n                  </div>\n                  <Typography variant=\"body1\" pl={2}>\n                    {micropost.content}\n                  </Typography>\n                </ListItem >\n              )\n            }\n          </List>\n        </div> */}\n      </Grid>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}