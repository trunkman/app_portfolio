{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\"; // Style\n\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from '@mui/material/Typography'; // Api\n\nimport { fetchSleepHoursRank, fetchReadingRank, fetchReadBooksRank, fetchStackBooksRank } from '../../apis/rankings'; // Reducer\n\nimport { rankReducer, rankInitialState } from '../../reducer/RankingReducer'; // Component\n\nimport { Loading } from \"../../components/Loading\";\nimport { RankBook } from \"../../components/Lists/RankBook\";\nimport { RankUser } from \"../../components/Lists/RankUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    alignItems: 'center',\n    border: 1,\n    justifyContent: 'center',\n    maxWidth: 1000,\n    textAlign: 'center',\n    width: '100%'\n  },\n  tabBox: {\n    alignContent: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'spece_between'\n  }\n}));\nexport const Ranking = () => {\n  _s();\n\n  const classes = useStyles();\n  const [tab, setTab] = useState('sleepingHours');\n  const [rankState, rankDispatch] = useReducer(rankReducer, rankInitialState); // 睡眠時間平均上位6名を取得する\n\n  const SleepHoursRank = () => {\n    fetchSleepHoursRank().then(data => {\n      rankDispatch({\n        type: 'fetchSuccessSleepHours',\n        payload: data.sleeping_hours_rank\n      });\n    });\n  }; // 読了数上位6名を取得する\n\n\n  const ReadingRank = () => {\n    fetchReadingRank().then(data => {\n      rankDispatch({\n        type: 'fetchSuccessReading',\n        payload: data.reading\n      });\n    });\n  }; // 読了本の人気6冊を取得する\n\n\n  const ReadBooksRank = () => {\n    fetchReadBooksRank().then(data => {\n      rankDispatch({\n        type: 'fetchSuccessReadBooks',\n        payload: data.readBooks\n      });\n    });\n  }; // 積読本の人気6冊を取得する\n\n\n  const StackBooksRank = () => {\n    fetchStackBooksRank().then(data => {\n      rankDispatch({\n        type: 'fetchSuccessStackBooks',\n        payload: data.stackBooks\n      });\n    });\n  };\n\n  useEffect(() => {\n    rankDispatch({\n      type: 'fetching'\n    });\n    tab === 'sleepingHours' && SleepHoursRank();\n    tab === 'reading' && ReadingRank();\n    tab === 'readBooks' && ReadBooksRank();\n    tab === 'stackBooks' && StackBooksRank();\n  }, [tab]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          letterSpacing: 10,\n          pb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContext, {\n      value: tab,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(TabList, {\n          onChange: (event, newTab) => {\n            setTab(newTab);\n          },\n          variant: \"fullWidth\" // textColor=\"primary\"\n          // indicatorColor=\"primary\"\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u5E73\\u5747\\u7761\\u7720\\u6642\\u9593\",\n            value: \"sleepingHours\",\n            sx: {\n              typography: 'h6',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u8AAD\\u4E86\\u6570\",\n            value: \"reading\",\n            sx: {\n              typography: 'h6',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u8AAD\\u4E86\\u4EBA\\u6C17\\u672C\",\n            value: \"readBooks\",\n            sx: {\n              typography: 'h6',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u7A4D\\u8AAD\\u4EBA\\u6C17\\u672C\",\n            value: \"stackBooks\",\n            sx: {\n              typography: 'h6',\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"sleepingHours\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.tabBox,\n          children: rankState.fetchState !== 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this) : rankState.sleepHours.map(sleepingHour => /*#__PURE__*/_jsxDEV(RankUser, {\n            user: sleepingHour.user,\n            rank: sleepingHour.rank,\n            average: sleepingHour.average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"reading\",\n        children: rankState.fetchState !== 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this) : rankState.reading.map(reading => /*#__PURE__*/_jsxDEV(RankUser, {\n          user: reading.user,\n          rank: reading.rank,\n          count: reading.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"readBooks\",\n        children: rankState.fetchState !== 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this) : rankState.readBooks.map(readBooks => /*#__PURE__*/_jsxDEV(RankBook, {\n          book: readBooks.Book,\n          rank: readBooks.rank,\n          countRead: readBooks.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"stackBooks\",\n        children: rankState.fetchState !== 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this) : rankState.stackBooks.map(stackBooks => /*#__PURE__*/_jsxDEV(RankBook, {\n          book: stackBooks.Book,\n          rank: stackBooks.rank,\n          countStack: stackBooks.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Ranking, \"ehQPFqbiqiGOGqD1njzcp63kQxM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx"],"names":["React","useEffect","useReducer","useState","Box","createStyles","makeStyles","Tab","TabContext","TabList","TabPanel","Typography","fetchSleepHoursRank","fetchReadingRank","fetchReadBooksRank","fetchStackBooksRank","rankReducer","rankInitialState","Loading","RankBook","RankUser","useStyles","root","alignItems","border","justifyContent","maxWidth","textAlign","width","tabBox","alignContent","display","flexWrap","Ranking","classes","tab","setTab","rankState","rankDispatch","SleepHoursRank","then","data","type","payload","sleeping_hours_rank","ReadingRank","reading","ReadBooksRank","readBooks","StackBooksRank","stackBooks","letterSpacing","pb","event","newTab","typography","fontWeight","fetchState","sleepHours","map","sleepingHour","user","rank","average","count","Book"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from '@mui/material/Typography';\n// Api\nimport { fetchSleepHoursRank, fetchReadingRank, fetchReadBooksRank, fetchStackBooksRank } from '../../apis/rankings'\n// Reducer\nimport { rankReducer, rankInitialState } from '../../reducer/RankingReducer'\n// Component\nimport { Loading } from \"../../components/Loading\"\nimport { RankBook } from \"../../components/Lists/RankBook\";\nimport { RankUser } from \"../../components/Lists/RankUser\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      border: 1,\n      justifyContent: 'center',\n      maxWidth: 1000,\n      textAlign: 'center',\n      width: '100%',\n    },\n    tabBox: {\n      alignContent: 'center',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'spece_between',\n    },\n  }),\n);\n\nexport const Ranking = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState('sleepingHours');\n  const [rankState, rankDispatch] = useReducer(rankReducer, rankInitialState);\n\n  // 睡眠時間平均上位6名を取得する\n  const SleepHoursRank = () => {\n    fetchSleepHoursRank()\n      .then(data => {\n        rankDispatch({\n          type: 'fetchSuccessSleepHours',\n          payload: data.sleeping_hours_rank,\n        });\n      });\n  }\n  // 読了数上位6名を取得する\n  const ReadingRank = () => {\n    fetchReadingRank()\n      .then(data => {\n        rankDispatch({\n          type: 'fetchSuccessReading',\n          payload: data.reading,\n        });\n      });\n  }\n  // 読了本の人気6冊を取得する\n  const ReadBooksRank = () => {\n    fetchReadBooksRank()\n      .then(data => {\n        rankDispatch({\n          type: 'fetchSuccessReadBooks',\n          payload: data.readBooks,\n        });\n      });\n  }\n  // 積読本の人気6冊を取得する\n  const StackBooksRank = () => {\n    fetchStackBooksRank()\n      .then(data => {\n        rankDispatch({\n          type: 'fetchSuccessStackBooks',\n          payload: data.stackBooks,\n        });\n      });\n  }\n\n  useEffect(() => {\n    rankDispatch({ type: 'fetching' })\n    tab === 'sleepingHours' && SleepHoursRank();\n    tab === 'reading' && ReadingRank();\n    tab === 'readBooks' && ReadBooksRank();\n    tab === 'stackBooks' && StackBooksRank();\n  }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\" sx={{ width: '100%' }}>\n        <Box sx={{ letterSpacing: 10, pb: 3 }}><b>ランキング</b></Box>\n      </Typography>\n      <TabContext value={tab}>\n        <Box>\n          <TabList\n            onChange={(event, newTab) => { setTab(newTab) }}\n            variant=\"fullWidth\"\n          // textColor=\"primary\"\n          // indicatorColor=\"primary\"\n          >\n            <Tab\n              label=\"ユーザー平均睡眠時間\"\n              value=\"sleepingHours\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n            <Tab\n              label=\"ユーザー読了数\"\n              value=\"reading\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n            <Tab\n              label=\"読了人気本\"\n              value=\"readBooks\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n            <Tab\n              label=\"積読人気本\"\n              value=\"stackBooks\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n          </TabList>\n        </Box>\n        <TabPanel value=\"sleepingHours\">\n          <Box className={classes.tabBox}>\n            {rankState.fetchState !== 'ok'\n              ? <Loading />\n              : rankState.sleepHours.map(sleepingHour =>\n                <RankUser\n                  user={sleepingHour.user}\n                  rank={sleepingHour.rank}\n                  average={sleepingHour.average}\n                />\n              )\n            }\n          </Box>\n        </TabPanel>\n        <TabPanel value=\"reading\">\n          {rankState.fetchState !== 'ok'\n            ? <Loading />\n            : rankState.reading.map(reading =>\n              <RankUser\n                user={reading.user}\n                rank={reading.rank}\n                count={reading.count}\n              />\n            )\n          }\n        </TabPanel>\n        <TabPanel value=\"readBooks\">\n          {rankState.fetchState !== 'ok'\n            ? <Loading />\n            : rankState.readBooks.map(readBooks =>\n              <RankBook\n                book={readBooks.Book}\n                rank={readBooks.rank}\n                countRead={readBooks.count}\n              />\n            )\n          }\n        </TabPanel>\n        <TabPanel value=\"stackBooks\">\n          {rankState.fetchState !== 'ok'\n            ? <Loading />\n            : rankState.stackBooks.map(stackBooks =>\n              <RankBook\n                book={stackBooks.Book}\n                rank={stackBooks.rank}\n                countStack={stackBooks.count}\n              />\n            )\n          }\n        </TabPanel>\n      </TabContext>\n    </Box>\n\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}