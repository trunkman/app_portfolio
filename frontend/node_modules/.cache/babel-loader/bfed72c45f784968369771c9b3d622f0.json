{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'; // styled\n\nimport { Grid } from \"@mui/material\"; // api\n\nimport { fetchUser } from \"../apis/users\"; // コンポーネント\n\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [microposts, setMicroposts] = useState([]); // ユーザー情報の取得 ※未完：micropost登録・削除で更新しない\n\n  useEffect(() => {\n    fetchUser({\n      userId: props.match.params.id\n    }).then(data => {\n      setUser(data.user);\n      setMicroposts(data.microposts);\n    });\n  }, [props.match.url]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        width: 1000,\n        mx: \"auto\",\n        bgcolor: 'grey.300'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        sx: {\n          px: 2,\n          bgcolor: 'grey.200'\n        },\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          loginUser: props.loginUser,\n          isLoggedIn: props.isLoggedIn,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/users/:id\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            sx: {\n              px: 2,\n              bgcolor: 'grey.100'\n            },\n            children: /*#__PURE__*/_jsxDEV(Microposts, {\n              loginUser: props.loginUser,\n              microposts: microposts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/users/:id/following\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            sx: {\n              px: 2,\n              bgcolor: 'grey.100'\n            },\n            children: /*#__PURE__*/_jsxDEV(Following, {\n              user: user,\n              userId: props.match.params.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"sUF+dG5ykqxm+g9VLMW/Y0/RpGg=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Grid","fetchUser","Profile","Microposts","Following","User","props","user","setUser","microposts","setMicroposts","userId","match","params","id","then","data","url","width","mx","bgcolor","px","loginUser","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C,C,CACA;;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C,CAF6B,CAG7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAAC;AAAEU,MAAAA,MAAM,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC;AAA7B,KAAD,CAAT,CACGC,IADH,CACQC,IAAI,IAAI;AACZR,MAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACAG,MAAAA,aAAa,CAACM,IAAI,CAACP,UAAN,CAAb;AACD,KAJH;AAKD,GANQ,EAMN,CAACH,KAAK,CAACM,KAAN,CAAYK,GAAb,CANM,CAAT;AAQA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,EAAE,EAAE,MAAnB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAApB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASD,UAAAA,OAAO,EAAE;AAAlB,SAA9B;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,SAAS,EAAEd,KAAK,CAACgB,SADnB;AAEE,UAAA,UAAU,EAAEhB,KAAK,CAACiB,UAFpB;AAGE,UAAA,IAAI,EAAEhB;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,YAAlB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE;AAAEc,cAAAA,EAAE,EAAE,CAAN;AAASD,cAAAA,OAAO,EAAE;AAAlB,aAA9B;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,SAAS,EAAEd,KAAK,CAACgB,SADnB;AAEE,cAAA,UAAU,EAAEb;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAkBE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,sBAAlB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE;AAAEY,cAAAA,EAAE,EAAE,CAAN;AAASD,cAAAA,OAAO,EAAE;AAAlB,aAA9B;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAEb,IADR;AAEE,cAAA,MAAM,EAAED,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC;AAF7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA7CM;;GAAMT,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n// styled\nimport { Grid } from \"@mui/material\";\n// api\nimport { fetchUser } from \"../apis/users\";\n// コンポーネント\nimport { Profile } from \"../components/Profile\";\nimport { Microposts } from \"../components/Microposts\";\nimport { Following } from \"../components/Following\";\n\nexport const User = (props) => {\n  const [user, setUser] = useState([])\n  const [microposts, setMicroposts] = useState([])\n  // ユーザー情報の取得 ※未完：micropost登録・削除で更新しない\n  useEffect(() => {\n    fetchUser({ userId: props.match.params.id })\n      .then(data => {\n        setUser(data.user)\n        setMicroposts(data.microposts)\n      })\n  }, [props.match.url])\n\n  return (\n    <BrowserRouter>\n      <Grid container sx={{ width: 1000, mx: \"auto\", bgcolor: 'grey.300' }}>\n        <Grid item xs={12} sm={4} sx={{ px: 2, bgcolor: 'grey.200' }}>\n          <Profile\n            loginUser={props.loginUser}\n            isLoggedIn={props.isLoggedIn}\n            user={user}\n          />\n        </Grid>\n        <Switch>\n          <Route exact path=\"/users/:id\">\n            <Grid item xs={12} sm={8} sx={{ px: 2, bgcolor: 'grey.100' }}>\n              <Microposts\n                loginUser={props.loginUser}\n                microposts={microposts}\n              />\n            </Grid>\n          </Route>\n        </Switch>\n        <Switch>\n          <Route exact path=\"/users/:id/following\">\n            <Grid item xs={12} sm={8} sx={{ px: 2, bgcolor: 'grey.100' }}>\n              <Following\n                user={user}\n                userId={props.match.params.id}\n              />\n            </Grid>\n          </Route>\n        </Switch>\n      </Grid>\n    </BrowserRouter>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}