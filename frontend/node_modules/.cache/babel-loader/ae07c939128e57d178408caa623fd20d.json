{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\"; // Api\n\nimport { fetchSleepDebt } from \"../../apis/diaries\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\"; // Component\n\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\";\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { HomeMessage } from \"../../components/Items/HomeMessage\"; // Image\n\nimport MainImage from \"../../images/MainImage.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState); // 睡眠負債を取得する\n\n  const SleepDebt = () => {\n    sleepDebtDispatch({\n      type: 'fetching'\n    });\n    fetchSleepDebt(authState.loginUser.id).then(data => {\n      // 睡眠負債が返された場合\n      data.sleep_debt && sleepDebtDispatch({\n        type: 'fetchSuccess',\n        payload: {\n          sleepDebt: data.sleep_debt\n        }\n      }); // 余剰睡眠が返された場合\n\n      data.sleep_saving && sleepDebtDispatch({\n        type: 'fetchSuccess',\n        payload: {\n          sleepSaving: data.sleep_saving\n        }\n      });\n    });\n  }; // ログイン時のみ実行\n\n\n  useEffect(() => {\n    authState.loggedIn && SleepDebt();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        maxWidth: 1000,\n        alignItems: 'center'\n      },\n      children: [!authState.loggedIn && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        sx: {\n          flexDirection: 'column',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(HomeMessage, {\n          handleOpenLogin: () => dialogDispatch({\n            type: 'login'\n          }),\n          handleOpenSignup: () => dialogDispatch({\n            type: 'signup'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), authState.loggedIn && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        sx: {\n          alignItems: \"center\",\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(SleepInfo, {\n          userName: authState.loginUser.name,\n          sleepDebt: sleepDebtState.sleepDebt,\n          sleepSaving: sleepDebtState.sleepSaving\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        sx: {\n          alignItems: \"center\",\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: MainImage,\n            alt: \"main iamge\",\n            style: {\n              width: 600\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUpDialog, {\n      handleClose: () => dialogDispatch({\n        type: 'close'\n      }),\n      open: dialogState.signup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogInDialog, {\n      handleClose: () => dialogDispatch({\n        type: 'close'\n      }),\n      handlePasswordReset: () => dialogDispatch({\n        type: 'passwordReset'\n      }),\n      open: dialogState.login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordResetDialog, {\n      handleClose: () => dialogDispatch({\n        type: 'close'\n      }),\n      open: dialogState.passwordReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      handleClose: () => authDispatch({\n        type: 'closeSnackbar'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"vSzZcjhRdFUQN4hhUNxf9r+aETI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx"],"names":["React","useEffect","useContext","useReducer","AuthContext","Box","Grid","fetchSleepDebt","dialogReducer","dialogInitialState","sleepDebtReducer","sleepDebtInitialState","SignUpDialog","LogInDialog","PasswordResetDialog","SleepInfo","SnackBar","HomeMessage","MainImage","Home","authState","authDispatch","dialogState","dialogDispatch","sleepDebtState","sleepDebtDispatch","SleepDebt","type","loginUser","id","then","data","sleep_debt","payload","sleepDebt","sleep_saving","sleepSaving","loggedIn","maxWidth","alignItems","flexDirection","justifyContent","name","width","signup","login","passwordReset"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\";\n// Api\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { HomeMessage } from \"../../components/Items/HomeMessage\";\n// Image\nimport MainImage from \"../../images/MainImage.png\";\n\n\nexport const Home = () => {\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' })\n    fetchSleepDebt(authState.loginUser.id)\n      .then(data => {\n        // 睡眠負債が返された場合\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        );\n        // 余剰睡眠が返された場合\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        );\n      });\n  }\n  // ログイン時のみ実行\n  useEffect(() => {\n    authState.loggedIn && SleepDebt();\n  }, [])\n\n  return (\n    <>\n      <Grid container sx={{\n        maxWidth: 1000,\n        alignItems: 'center',\n      }}>\n        {!authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}>\n            <HomeMessage\n              handleOpenLogin={() => dialogDispatch({ type: 'login' })}\n              handleOpenSignup={() => dialogDispatch({ type: 'signup' })}\n            />\n          </Grid>\n        }\n        {authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            alignItems: \"center\",\n            justifyContent: 'center',\n          }}>\n            <SleepInfo\n              userName={authState.loginUser.name}\n              sleepDebt={sleepDebtState.sleepDebt}\n              sleepSaving={sleepDebtState.sleepSaving}\n            />\n          </Grid>\n        }\n        <Grid item xs={12} sm={6} sx={{\n          alignItems: \"center\",\n          justifyContent: 'center',\n        }}>\n          <Box>\n            <img src={MainImage}\n              alt=\"main iamge\"\n              style={{ width: 600 }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n\n      <SignUpDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.signup}\n      />\n      <LogInDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        handlePasswordReset={() => dialogDispatch({ type: 'passwordReset' })}\n        open={dialogState.login}\n      />\n      <PasswordResetDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.passwordReset}\n      />\n      <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}