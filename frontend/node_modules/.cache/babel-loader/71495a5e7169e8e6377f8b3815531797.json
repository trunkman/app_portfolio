{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Style\n\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"; // Api\n\nimport { postBook, updateBook } from \"../../apis/books\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  'stackButton': {\n    borderRadius: 50,\n    color: '#1565c0',\n    height: 30,\n    padding: '15px 20px'\n  },\n  'readButton': {\n    background: '#1565c0',\n    border: 1,\n    borderColor: '#fff',\n    borderRadius: 50,\n    color: 'white',\n    height: 30,\n    padding: '15px 20px',\n    marginLeft: 20\n  },\n  'recommendButton': {\n    background: '#1565c0',\n    border: 0,\n    borderRadius: 4,\n    color: 'white',\n    height: 30,\n    padding: '15px 20px'\n  }\n}));\nexport const ReadButton = ({\n  book,\n  registration,\n  subscribed\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleClick = boolean => {\n    {\n      // ユーザー未登録本の場合、CreateでDBに登録する\n      !subscribed && postBook({\n        read: boolean,\n        registration: registration,\n        book: book\n      }).then(data => {\n        // ぺーじ遷移を加える\n        data.message && alert(data.message);\n      });\n    }\n    {\n      // ユーザー登録済み本の場合、UpdateでDBを更新する\n      subscribed && updateBook({\n        read: boolean,\n        book: book\n      }).then(data => {\n        // ぺーじ遷移を加える\n        data.message && alert(data.message);\n      });\n    }\n  }; // 読んだ積んだがわかるように設定する予定\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.stackButton,\n      color: \"primary\",\n      onClick: () => handleClick(\"false\"),\n      valiant: \"outlined\" // {!book.read && subscribed && (variant = \"contained\")}\n      ,\n      children: \"\\u7A4D\\u3080\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.readButton,\n      color: \"primary\",\n      onClick: () => handleClick(\"true\") // {book.read && subscribed && (variant = \"contained\")}\n      ,\n      children: \"\\u8AAD\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReadButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx"],"names":["React","Button","createStyles","makeStyles","postBook","updateBook","useStyles","borderRadius","color","height","padding","background","border","borderColor","marginLeft","ReadButton","book","registration","subscribed","classes","handleClick","boolean","read","then","data","message","alert","stackButton","readButton"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC,C,CACA;;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,MAC3BD,YAAY,CAAC;AACX,iBAAe;AACbK,IAAAA,YAAY,EAAE,EADD;AAEbC,IAAAA,KAAK,EAAE,SAFM;AAGbC,IAAAA,MAAM,EAAE,EAHK;AAIbC,IAAAA,OAAO,EAAE;AAJI,GADJ;AAOX,gBAAc;AACZC,IAAAA,UAAU,EAAE,SADA;AAEZC,IAAAA,MAAM,EAAE,CAFI;AAGZC,IAAAA,WAAW,EAAE,MAHD;AAIZN,IAAAA,YAAY,EAAE,EAJF;AAKZC,IAAAA,KAAK,EAAE,OALK;AAMZC,IAAAA,MAAM,EAAE,EANI;AAOZC,IAAAA,OAAO,EAAE,WAPG;AAQZI,IAAAA,UAAU,EAAE;AARA,GAPH;AAiBX,qBAAmB;AACjBH,IAAAA,UAAU,EAAE,SADK;AAEjBC,IAAAA,MAAM,EAAE,CAFS;AAGjBL,IAAAA,YAAY,EAAE,CAHG;AAIjBC,IAAAA,KAAK,EAAE,OAJU;AAKjBC,IAAAA,MAAM,EAAE,EALS;AAMjBC,IAAAA,OAAO,EAAE;AANQ;AAjBR,CAAD,CADc,CAA5B;AA6BA,OAAO,MAAMK,UAAU,GAAG,CAAC;AACzBC,EAAAA,IADyB;AAEzBC,EAAAA,YAFyB;AAGzBC,EAAAA;AAHyB,CAAD,KAIpB;AAAA;;AACJ,QAAMC,OAAO,GAAGb,SAAS,EAAzB;;AACA,QAAMc,WAAW,GAAIC,OAAD,IAAa;AAC/B;AAAE;AACA,OAACH,UAAD,IACEd,QAAQ,CAAC;AACPkB,QAAAA,IAAI,EAAED,OADC;AAEPJ,QAAAA,YAAY,EAAEA,YAFP;AAGPD,QAAAA,IAAI,EAAEA;AAHC,OAAD,CAAR,CAKGO,IALH,CAKQC,IAAI,IAAI;AACZ;AACAA,QAAAA,IAAI,CAACC,OAAL,IACEC,KAAK,CAACF,IAAI,CAACC,OAAN,CADP;AAED,OATH,CADF;AAYD;AACD;AAAE;AACAP,MAAAA,UAAU,IACRb,UAAU,CAAC;AACTiB,QAAAA,IAAI,EAAED,OADG;AAETL,QAAAA,IAAI,EAAEA;AAFG,OAAD,CAAV,CAIGO,IAJH,CAIQC,IAAI,IAAI;AACZ;AACAA,QAAAA,IAAI,CAACC,OAAL,IACEC,KAAK,CAACF,IAAI,CAACC,OAAN,CADP;AAED,OARH,CADF;AAWD;AACF,GA5BD,CAFI,CAgCJ;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEN,OAAO,CAACQ,WADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,OAAD,CAH5B;AAIE,MAAA,OAAO,EAAC,UAJV,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACS,UADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,MAAD,CAH5B,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAqBD,CA1DM;;GAAML,U;UAKKT,S;;;KALLS,U","sourcesContent":["import React from \"react\";\n// Style\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// Api\nimport { postBook, updateBook } from \"../../apis/books\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'stackButton': {\n      borderRadius: 50,\n      color: '#1565c0',\n      height: 30,\n      padding: '15px 20px',\n    },\n    'readButton': {\n      background: '#1565c0',\n      border: 1,\n      borderColor: '#fff',\n      borderRadius: 50,\n      color: 'white',\n      height: 30,\n      padding: '15px 20px',\n      marginLeft: 20,\n    },\n    'recommendButton': {\n      background: '#1565c0',\n      border: 0,\n      borderRadius: 4,\n      color: 'white',\n      height: 30,\n      padding: '15px 20px',\n    },\n  }),\n);\n\nexport const ReadButton = ({\n  book,\n  registration,\n  subscribed,\n}) => {\n  const classes = useStyles();\n  const handleClick = (boolean) => {\n    { // ユーザー未登録本の場合、CreateでDBに登録する\n      !subscribed && (\n        postBook({\n          read: boolean,\n          registration: registration,\n          book: book,\n        })\n          .then(data => {\n            // ぺーじ遷移を加える\n            data.message &&\n              alert(data.message)\n          })\n      )\n    }\n    { // ユーザー登録済み本の場合、UpdateでDBを更新する\n      subscribed && (\n        updateBook({\n          read: boolean,\n          book: book,\n        })\n          .then(data => {\n            // ぺーじ遷移を加える\n            data.message &&\n              alert(data.message)\n          })\n      )\n    }\n  }\n\n  // 読んだ積んだがわかるように設定する予定\n  return (\n    <>\n      <Button\n        className={classes.stackButton}\n        color=\"primary\"\n        onClick={() => handleClick(\"false\")}\n        valiant='outlined'\n      // {!book.read && subscribed && (variant = \"contained\")}\n      >\n        積む\n      </Button>\n      <Button\n        className={classes.readButton}\n        color=\"primary\"\n        onClick={() => handleClick(\"true\")}\n      // {book.read && subscribed && (variant = \"contained\")}\n      >\n        読了\n      </Button>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}