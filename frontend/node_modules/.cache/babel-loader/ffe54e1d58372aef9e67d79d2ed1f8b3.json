{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // styles\n\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline'; // api\n\nimport { fetchLoggedIn } from './apis/sessions';\nimport { AuthProvider } from './context/AuthContext'; // コンテイナー\n\nimport { Layout } from './containers/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [loginUser, setLoginUser] = useState({});\n  // // ログイン&ログアウト実行のコールバック関数\n  // const handleLogIn = (loginUser) => {\n  //   setIsLoggedIn(true);\n  //   setLoginUser(loginUser);\n  // }\n  // const handleLogOut = () => {\n  //   setIsLoggedIn(false);\n  //   setLoginUser({});\n  // }\n  // // ログイン状態を保持する\n  // useEffect(() => {\n  //   fetchLoggedIn()\n  //     .then(data => {\n  //       if (data.logged_in && isLoggedIn === false) {\n  //         handleLogIn(data.user)\n  //       } else if (!data.logged_in && isLoggedIn === true) {\n  //         handleLogOut()\n  //       }\n  //     })\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout // handleLogOut={handleLogOut}\n      // handleLogIn={handleLogIn}\n      // isLoggedIn={isLoggedIn}\n      // loginUser={loginUser}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.jsx"],"names":["React","useState","useEffect","Box","CssBaseline","fetchLoggedIn","AuthProvider","Layout","App","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B,C,CACA;;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KArCuBD,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n// styles\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n// api\nimport { fetchLoggedIn } from './apis/sessions';\nimport { AuthProvider } from './context/AuthContext';\n// コンテイナー\nimport { Layout } from './containers/Layout';\n\nexport default function App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [loginUser, setLoginUser] = useState({});\n  // // ログイン&ログアウト実行のコールバック関数\n  // const handleLogIn = (loginUser) => {\n  //   setIsLoggedIn(true);\n  //   setLoginUser(loginUser);\n  // }\n  // const handleLogOut = () => {\n  //   setIsLoggedIn(false);\n  //   setLoginUser({});\n  // }\n  // // ログイン状態を保持する\n  // useEffect(() => {\n  //   fetchLoggedIn()\n  //     .then(data => {\n  //       if (data.logged_in && isLoggedIn === false) {\n  //         handleLogIn(data.user)\n  //       } else if (!data.logged_in && isLoggedIn === true) {\n  //         handleLogOut()\n  //       }\n  //     })\n  // }, [])\n\n  return (\n    <AuthProvider>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <Layout\n        // handleLogOut={handleLogOut}\n        // handleLogIn={handleLogIn}\n        // isLoggedIn={isLoggedIn}\n        // loginUser={loginUser}\n        />\n      </Box>\n    </AuthProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}