{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Diaries/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from 'react'; // styles\n// import Grid from \"@mui/material/Grid\";\n\nimport Button from \"@mui/material/Button\";\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction'; // api\n\nimport { fetchUserDiaries } from \"../../apis/users\"; // コンポーネント\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { DiaryShowDialog } from \"../Dialogs/DiaryShowDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Calendar = () => {\n  _s();\n\n  const [diary, setDiary] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [openShow, setShowOpen] = useState(false); // 日記Dialogを開閉する関数群\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const diaries = [{\n    title: \"good\",\n    start: \"2021-11-09\"\n  }]; // useEffect(() => {\n  //   fetchUserDiaries()\n  //     .then(data => {\n  //       setDiary({\n  //         title: \"good\",\n  //         start: \"2021-11-10\",\n  //       })\n  //       diaries.push(diary)\n  //     })\n  // }, [])\n\n  const handleDateClick = arg => {\n    setShowOpen(open);\n    return /*#__PURE__*/_jsxDEV(DiaryShowDialog, {\n      open: openShow,\n      handleClose: () => setShowOpen(false),\n      date: arg.dateStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderEventContent = eventInfo => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u7D75\\u6587\\u5B57\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      locale: \"ja\",\n      events: diaries,\n      dateClick: handleDateClick,\n      eventContent: renderEventContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"inherit\",\n      onClick: handleOpen,\n      children: \"\\u8A18\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"iBPJSBWCC3ZGsvvQt5sqVMutQV4=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Diaries/Calendar.jsx"],"names":["React","useEffect","useState","useCallback","Button","FullCalendar","EventContentArg","dayGridPlugin","interactionPlugin","DateClickArg","fetchUserDiaries","DiaryDialog","DiaryShowDialog","Calendar","diary","setDiary","open","setOpen","openShow","setShowOpen","handleOpen","handleClose","diaries","title","start","handleDateClick","arg","dateStr","renderEventContent","eventInfo","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,qBAA9C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,IAA4BC,YAA5B,QAAgD,2BAAhD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC,CAH4B,CAI5B;;AACA,QAAMkB,UAAU,GAAG,MAAMH,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMI,WAAW,GAAG,MAAMJ,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMK,OAAO,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAAhB,CAP4B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,eAAe,GAAIC,GAAD,IAAuB;AAC7CP,IAAAA,WAAW,CAACH,IAAD,CAAX;AACA,wBACE,QAAE,eAAF;AACE,MAAA,IAAI,EAAEE,QADR;AAEE,MAAA,WAAW,EAAE,MAAMC,WAAW,CAAC,KAAD,CAFhC;AAGE,MAAA,IAAI,EAAEO,GAAG,CAACC;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GATD;;AAWA,QAAMC,kBAAkB,GAAIC,SAAD,iBACzB;AAAA,4BACE;AAAA,gBAAIA,SAAS,CAACC,KAAV,CAAgBP;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;;AAOA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAAChB,aAAD,EAAgBC,iBAAhB,CADX;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,MAAM,EAAEc,OAJV;AAKE,MAAA,SAAS,EAAEG,eALb;AAME,MAAA,YAAY,EAAEG;AANhB;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAER,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,WAAW,EAAEK;AAFf;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAsBD,CA5DM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useCallback } from 'react';\n// styles\n// import Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport FullCalendar, { EventContentArg } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction';\n// api\nimport { fetchUserDiaries } from \"../../apis/users\";\n// コンポーネント\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\nimport { DiaryShowDialog } from \"../Dialogs/DiaryShowDialog\"\n\nexport const Calendar = () => {\n  const [diary, setDiary] = useState(null)\n  const [open, setOpen] = useState(false)\n  const [openShow, setShowOpen] = useState(false)\n  // 日記Dialogを開閉する関数群\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n  const diaries = [{ title: \"good\", start: \"2021-11-09\" }]\n\n  // useEffect(() => {\n  //   fetchUserDiaries()\n  //     .then(data => {\n  //       setDiary({\n  //         title: \"good\",\n  //         start: \"2021-11-10\",\n  //       })\n  //       diaries.push(diary)\n  //     })\n  // }, [])\n\n  const handleDateClick = (arg: DateClickArg) => {\n    setShowOpen(open)\n    return (\n      < DiaryShowDialog\n        open={openShow}\n        handleClose={() => setShowOpen(false)}\n        date={arg.dateStr}\n      />\n    )\n  }\n\n  const renderEventContent = (eventInfo: EventContentArg) => (\n    <>\n      <i>{eventInfo.event.title}</i>\n      <p>絵文字</p>\n    </>\n  )\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        locale=\"ja\"\n        events={diaries}\n        dateClick={handleDateClick}\n        eventContent={renderEventContent}\n      />\n\n      <Button variant=\"inherit\" onClick={handleOpen}>\n        記録する\n      </Button>\n      <DiaryDialog\n        open={open}\n        handleClose={handleClose}\n      />\n      {/* <p>{diaries[0]}</p> */}\n\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}