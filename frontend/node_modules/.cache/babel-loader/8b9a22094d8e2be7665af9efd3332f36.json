{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css'; // styles\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline'; // api\n\nimport { fetchLoggedIn } from './apis/sessions'; // コンテイナー\n\nimport { Layout } from './containers/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginUser, setLoginUser] = useState({}); // ログイン&ログアウト実行のコールバック関数\n\n  const handleLogIn = loginUser => {\n    setIsLoggedIn(true);\n    setLoginUser(loginUser);\n  };\n\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setLoginUser({});\n  }; // ログイン状態を保持する\n\n\n  useEffect(() => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && isLoggedIn === false) {\n        handleLogIn(data.user);\n      } else if (!data.logged_in && isLoggedIn === true) {\n        handleLogOut();\n      }\n    });\n  }, []);\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: colors.blue[800]\n      },\n      type: \"dark\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          handleLogOut: handleLogOut,\n          handleLogIn: handleLogIn,\n          isLoggedIn: isLoggedIn,\n          loginUser: loginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IBifKGsNjYa2lRjCihiRv+xh3II=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.jsx"],"names":["React","useState","useEffect","BrowserRouter","createMuiTheme","ThemeProvider","colors","Box","CssBaseline","fetchLoggedIn","Layout","App","isLoggedIn","setIsLoggedIn","loginUser","setLoginUser","handleLogIn","handleLogOut","then","data","logged_in","user","theme","palette","primary","main","blue","type","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CACA;;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C,CAF4B,CAG5B;;AACA,QAAMe,WAAW,GAAIF,SAAD,IAAe;AACjCD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAHD;;AAIA,QAAMG,YAAY,GAAG,MAAM;AACzBJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAHD,CAR4B,CAY5B;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,GACVS,IADH,CACQC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,SAAL,IAAkBR,UAAU,KAAK,KAArC,EAA4C;AAC1CI,QAAAA,WAAW,CAACG,IAAI,CAACE,IAAN,CAAX;AACD,OAFD,MAEO,IAAI,CAACF,IAAI,CAACC,SAAN,IAAmBR,UAAU,KAAK,IAAtC,EAA4C;AACjDK,QAAAA,YAAY;AACb;AACF,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,QAAMK,KAAK,GAAGlB,cAAc,CAAC;AAC3BmB,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEnB,MAAM,CAACoB,IAAP,CAAY,GAAZ;AADC,OADF;AAIPC,MAAAA,IAAI,EAAE;AAJC;AADkB,GAAD,CAA5B;AASA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAT;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEN,KAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,YAAY,EAAEL,YADhB;AAEE,UAAA,WAAW,EAAED,WAFf;AAGE,UAAA,UAAU,EAAEJ,UAHd;AAIE,UAAA,SAAS,EAAEE;AAJb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhDuBH,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\n// styles\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n// api\nimport { fetchLoggedIn } from './apis/sessions';\n// コンテイナー\nimport { Layout } from './containers/Layout';\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginUser, setLoginUser] = useState({});\n  // ログイン&ログアウト実行のコールバック関数\n  const handleLogIn = (loginUser) => {\n    setIsLoggedIn(true);\n    setLoginUser(loginUser);\n  }\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setLoginUser({});\n  }\n  // ログイン状態を保持する\n  useEffect(() => {\n    fetchLoggedIn()\n      .then(data => {\n        if (data.logged_in && isLoggedIn === false) {\n          handleLogIn(data.user)\n        } else if (!data.logged_in && isLoggedIn === true) {\n          handleLogOut()\n        }\n      })\n  }, [])\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: colors.blue[800],\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter>\n          <Layout\n            handleLogOut={handleLogOut}\n            handleLogIn={handleLogIn}\n            isLoggedIn={isLoggedIn}\n            loginUser={loginUser}\n          />\n        </BrowserRouter>\n      </ThemeProvider>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}