{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\"; // api\n\nimport { fetchUsers } from \"../apis/users\"; // コンポーネント\n\nimport { Header } from \"../components/Header\";\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = props => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const UsersList = users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"user.name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    fetchUsers().then(data => {\n      setUsers(data.users);\n    });\n  }); // 返り値：ユーザー一覧の画面\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      open: openLogInDialog,\n      handleClickOpenLogIn: handleOpenLogIn,\n      handleClose: handleCloseLogIn,\n      loggedInStatus: props.loggedInStatus,\n      handleLogIn: props.handleLogIn,\n      handleLogOut: props.handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: UsersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Users.jsx"],"names":["React","Fragment","useState","useEffect","fetchUsers","Header","SettingDialog","Users","props","users","setUsers","UsersList","map","user","then","data","openLogInDialog","handleOpenLogIn","handleCloseLogIn","loggedInStatus","handleLogIn","handleLogOut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,SAAS,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,UAAU,GACPU,IADH,CACQC,IAAI,IAAI;AACZL,MAAAA,QAAQ,CAACK,IAAI,CAACN,KAAN,CAAR;AACD,KAHH;AAID,GALQ,CAAT,CAP8B,CAc9B;;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEO,eADR;AAEE,MAAA,oBAAoB,EAAEC,eAFxB;AAGE,MAAA,WAAW,EAAEC,gBAHf;AAIE,MAAA,cAAc,EAAEV,KAAK,CAACW,cAJxB;AAKE,MAAA,WAAW,EAAEX,KAAK,CAACY,WALrB;AAME,MAAA,YAAY,EAAEZ,KAAK,CAACa;AANtB;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,gBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BM;;GAAMJ,K;;KAAAA,K","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n// api\nimport { fetchUsers } from \"../apis/users\";\n// コンポーネント\nimport { Header } from \"../components/Header\";\nimport { SettingDialog } from \"../components/SettingDialog\";\n\nexport const Users = (props) => {\n\n  const [users, setUsers] = useState([])\n  const UsersList = users.map((user) =>\n    <li>user.name</li>\n  );\n\n  useEffect(() => {\n    fetchUsers()\n      .then(data => {\n        setUsers(data.users)\n      })\n  })\n\n  // 返り値：ユーザー一覧の画面\n  return (\n    <Fragment>\n      <Header\n        open={openLogInDialog}\n        handleClickOpenLogIn={handleOpenLogIn}\n        handleClose={handleCloseLogIn}\n        loggedInStatus={props.loggedInStatus}\n        handleLogIn={props.handleLogIn}\n        handleLogOut={props.handleLogOut}\n      />\n\n      <h1>ユーザー一覧</h1>\n      <ul>{UsersList}</ul>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}