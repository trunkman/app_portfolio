{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box'; // Icon\n\nimport MenuIcon from '@mui/icons-material/Menu'; // Api\n\nimport { deleteLogout } from \"../../apis/sessions\";\nimport { deleteUser } from \"../../apis/users\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'; // Component\n\nimport { AccountButton } from '../../components/Buttons/AccountButton';\nimport { LogoLink } from '../../components/Links/LogoLink';\nimport { NotificationButton } from '../../components/Buttons/NotificationButton';\nimport { NotificationDialog } from \"../../components/Dialogs/NotificationDialog\";\nimport { PostButton } from '../../components/Buttons/PostButton';\nimport { RecordButton } from '../../components/Buttons/RecordButton';\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { TweetDialog } from '../../components/Dialogs/TweetDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Header = ({\n  checkClese,\n  checkNotifications,\n  open,\n  drawerWidth,\n  handleDrawerOpen\n}) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext); // ダイアログを開閉する関数群\n\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n\n  const handleClose = () => dialogDispatch({\n    type: 'close'\n  }); // ログアウトする\n\n\n  const submitLogout = () => {\n    deleteLogout().then(() => {\n      authDispatch({\n        type: 'logout'\n      });\n      history.push(`/`);\n    });\n  }; // アカウント削除を行う\n\n\n  const submitDelete = () => {\n    deleteUser(authState.loginUser.id).then(() => {\n      authDispatch({\n        type: 'deleteUser'\n      });\n      history.push(`/`);\n    });\n  }; // AppBarのstyle\n\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: prop => prop !== 'open'\n  })(({\n    theme,\n    open\n  }) => ({\n    backgroundColor: '#001e3c',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            color: \"primary\",\n            onClick: () => handleDrawerOpen(),\n            sx: {\n              fontSize: 20,\n              ...(open && {\n                display: 'none'\n              })\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 4,\n            ...(open && {\n              display: 'none'\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(LogoLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), authState.loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PostButton, {\n            handleClick: () => dialogDispatch({\n              type: 'tweet'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecordButton, {\n            handleClick: () => dialogDispatch({\n              type: 'record'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NotificationButton, {\n            checkClese: checkClese,\n            checkNotifications: checkNotifications,\n            handleClick: () => dialogDispatch({\n              type: 'notification'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccountButton, {\n            handleLogout: submitLogout,\n            handleDelete: submitDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TweetDialog, {\n      handleClose: handleClose,\n      open: dialogState.tweet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecordDialog, {\n      handleClose: handleClose,\n      open: dialogState.record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationDialog, {\n      handleClose: handleClose,\n      open: dialogState.notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n      handleClose: () => authDispatch({\n        type: 'closeSnackbar'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"WpKMvtye72SSXEx9eUXqfPQIeBE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx"],"names":["React","useReducer","useContext","useHistory","AuthContext","styled","MuiAppBar","Toolbar","Typography","IconButton","Box","MenuIcon","deleteLogout","deleteUser","dialogReducer","dialogInitialState","AccountButton","LogoLink","NotificationButton","NotificationDialog","PostButton","RecordButton","RecordDialog","SnackBar","TweetDialog","Header","checkClese","checkNotifications","open","drawerWidth","handleDrawerOpen","history","authState","authDispatch","dialogState","dialogDispatch","handleClose","type","submitLogout","then","push","submitDelete","loginUser","id","AppBar","shouldForwardProp","prop","theme","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","fontSize","display","pl","loggedIn","tweet","record","notification"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\n// Icon\nimport MenuIcon from '@mui/icons-material/Menu';\n// Api\nimport { deleteLogout } from \"../../apis/sessions\"\nimport { deleteUser } from \"../../apis/users\"\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\n// Component\nimport { AccountButton } from '../../components/Buttons/AccountButton'\nimport { LogoLink } from '../../components/Links/LogoLink';\nimport { NotificationButton } from '../../components/Buttons/NotificationButton';\nimport { NotificationDialog } from \"../../components/Dialogs/NotificationDialog\"\nimport { PostButton } from '../../components/Buttons/PostButton';\nimport { RecordButton } from '../../components/Buttons/RecordButton';\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\"\nimport { TweetDialog } from '../../components/Dialogs/TweetDialog';\n\nexport const Header = ({\n  checkClese,\n  checkNotifications,\n  open,\n  drawerWidth,\n  handleDrawerOpen,\n}) => {\n  const history = useHistory()\n  const { authState, authDispatch } = useContext(AuthContext);\n  // ダイアログを開閉する関数群\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  // ログアウトする\n  const submitLogout = () => {\n    deleteLogout()\n      .then(() => {\n        authDispatch({ type: 'logout' });\n        history.push(`/`);\n      });\n  };\n  // アカウント削除を行う\n  const submitDelete = () => {\n    deleteUser(authState.loginUser.id)\n      .then(() => {\n        authDispatch({ type: 'deleteUser' });\n        history.push(`/`);\n      });\n  };\n  // AppBarのstyle\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    backgroundColor: '#001e3c',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <>\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton>\n            <MenuIcon\n              color=\"primary\"\n              onClick={() => handleDrawerOpen()}\n              sx={{\n                fontSize: 20,\n                ...(open && { display: 'none' }),\n              }}\n            />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            sx={{\n              pl: 4,\n              ...(open && { display: 'none' }),\n            }}\n          >\n            <LogoLink />\n          </Typography>\n          <Box flexGrow={1}></Box>\n          {authState.loggedIn &&\n            <>\n              <PostButton handleClick={() => dialogDispatch({ type: 'tweet' })} />\n              <RecordButton handleClick={() => dialogDispatch({ type: 'record' })} />\n              <NotificationButton\n                checkClese={checkClese}\n                checkNotifications={checkNotifications}\n                handleClick={() => dialogDispatch({ type: 'notification' })}\n              />\n              <AccountButton\n                handleLogout={submitLogout}\n                handleDelete={submitDelete}\n              />\n            </>\n          }\n        </Toolbar>\n      </AppBar>\n\n      <TweetDialog\n        handleClose={handleClose}\n        open={dialogState.tweet}\n      />\n      <RecordDialog\n        handleClose={handleClose}\n        open={dialogState.record}\n      />\n      <NotificationDialog\n        handleClose={handleClose}\n        open={dialogState.notification}\n      />\n\n      <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}