{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // styles\n\nimport Button from \"@mui/material/Button\"; //api\n\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FollowButton = props => {\n  _s();\n\n  const [followStatus, setFollowStatus] = useState(false); // フォローする\n\n  const submitFollow = () => {\n    postFollow({\n      userId: props.userId\n    }).then(setFollowStatus(true));\n  }; // フォローを解除する\n\n\n  const submitUnfollow = () => {\n    deleteUnfollow({\n      relationshipId: props.users.id\n    }).then(setFollowStatus(false));\n  };\n\n  useEffect(() => {\n    // フォロー有無を確認する\n    fetchFollow({\n      userId: props.userId\n    }).then(data => setFollowStatus(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: true ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitUnfollow,\n      variant: \"contained\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitFollow,\n      variant: \"contained\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(FollowButton, \"vAzQKyjlc38ElMh0Bo//+PawDmI=\");\n\n_c = FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx"],"names":["React","useState","useEffect","axios","Button","postFollow","deleteUnfollow","fetchFollow","FollowButton","props","followStatus","setFollowStatus","submitFollow","userId","then","submitUnfollow","relationshipId","users","id","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD,CADqC,CAGrC;;AACA,QAAMW,YAAY,GAAG,MAAM;AACzBP,IAAAA,UAAU,CAAC;AAAEQ,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAhB,KAAD,CAAV,CACGC,IADH,CACQH,eAAe,CAAC,IAAD,CADvB;AAED,GAHD,CAJqC,CAQrC;;;AACA,QAAMI,cAAc,GAAG,MAAM;AAC3BT,IAAAA,cAAc,CAAC;AAAEU,MAAAA,cAAc,EAAEP,KAAK,CAACQ,KAAN,CAAYC;AAA9B,KAAD,CAAd,CACGJ,IADH,CACQH,eAAe,CAAC,KAAD,CADvB;AAED,GAHD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,WAAW,CAAC;AAAEM,MAAAA,MAAM,EAAEJ,KAAK,CAACI;AAAhB,KAAD,CAAX,CACGC,IADH,CACQK,IAAI,IAAIR,eAAe,CAACQ,IAAD,CAD/B;AAED,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,cACI,IAAD,gBACG,QAAC,MAAD;AACA,MAAA,OAAO,EAAEJ,cADT;AAEA,MAAA,OAAO,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG,QAAC,MAAD;AACA,MAAA,OAAO,EAAEH,YADT;AAEA,MAAA,OAAO,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN,mBADF;AAkBD,CAtCM;;GAAMJ,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// styles\nimport Button from \"@mui/material/Button\";\n//api\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\";\n\nexport const FollowButton = (props) => {\n  const [followStatus, setFollowStatus] = useState(false)\n\n  // フォローする\n  const submitFollow = () => {\n    postFollow({ userId: props.userId })\n      .then(setFollowStatus(true))\n  }\n  // フォローを解除する\n  const submitUnfollow = () => {\n    deleteUnfollow({ relationshipId: props.users.id })\n      .then(setFollowStatus(false))\n  }\n\n  useEffect(() => {\n    // フォロー有無を確認する\n    fetchFollow({ userId: props.userId })\n      .then(data => setFollowStatus(data))\n  }, [])\n\n  return (\n    <>\n      {(true)\n        ? <Button\n          onClick={submitUnfollow}\n          variant=\"contained\"\n        >\n          フォロー中\n        </Button>\n        : <Button\n          onClick={submitFollow}\n          variant=\"contained\"\n        >\n          フォローする\n        </Button>\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}