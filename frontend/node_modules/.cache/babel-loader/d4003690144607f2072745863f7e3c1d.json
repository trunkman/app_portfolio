{"ast":null,"code":"import axios from \"axios\";\nimport { books, booksearch, bookPath } from \"../urls\"; // 本を取得するapi (ISBNで特定する)\n\nexport const fetchBook = bookIsbn => {\n  return axios.get(bookPath(bookIsbn), {\n    withCredentials: true\n  }).then(res => {\n    console.log('books#show', res);\n    return res.data;\n  }).catch(error => {\n    console.log('books#show', error);\n  });\n}; // 本を(ユーザーとDBに)登録するapi\n\nexport const postBook = params => {\n  return axios.post(books, {\n    read: params.read,\n    registration: params.registration,\n    book: {\n      title: params.book.title,\n      auther: params.book.author,\n      publisherName: params.book.publisherName,\n      salesDate: params.book.salesDate,\n      itemPrice: params.book.itemPrice,\n      itemUrl: params.book.itemUrl,\n      itemCaption: params.book.itemCaption,\n      largeImageUrl: params.book.largeImageUrl,\n      isbn: params.book.isbn,\n      reviewCount: params.book.reviewCount,\n      reviewAverage: params.book.reviewAverage\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('books#create', res);\n    return res.data;\n  }).catch(error => {\n    console.log('books#create', error);\n  });\n}; // 読了・積読情報を更新するapi\n\nexport const updateBook = params => {\n  return axios.patch(bookPath(params.book.isbn), {\n    read: params.read\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('books#update', res);\n    return res.data;\n  }).catch(error => {\n    console.log('books#update', error);\n  });\n}; // 検索したワードの本を取得するapi\n\nexport const fetchBooks = params => {\n  return axios.post(booksearch, {\n    book: {\n      title: params.keyword\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('books#search', res);\n    return res.data;\n  }).catch(error => {\n    console.log('books#search', error);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/books.js"],"names":["axios","books","booksearch","bookPath","fetchBook","bookIsbn","get","withCredentials","then","res","console","log","data","catch","error","postBook","params","post","read","registration","book","title","auther","author","publisherName","salesDate","itemPrice","itemUrl","itemCaption","largeImageUrl","isbn","reviewCount","reviewAverage","updateBook","patch","fetchBooks","keyword"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { books, booksearch, bookPath } from \"../urls\";\n\n// 本を取得するapi (ISBNで特定する)\nexport const fetchBook = (bookIsbn) => {\n  return axios.get(bookPath(bookIsbn), { withCredentials: true })\n    .then(res => {\n      console.log('books#show', res);\n      return res.data;\n    }).catch(error => {\n      console.log('books#show', error);\n    });\n}\n\n// 本を(ユーザーとDBに)登録するapi\nexport const postBook = (params) => {\n  return axios.post(books, {\n    read: params.read,\n    registration: params.registration,\n    book: {\n      title: params.book.title,\n      auther: params.book.author,\n      publisherName: params.book.publisherName,\n      salesDate: params.book.salesDate,\n      itemPrice: params.book.itemPrice,\n      itemUrl: params.book.itemUrl,\n      itemCaption: params.book.itemCaption,\n      largeImageUrl: params.book.largeImageUrl,\n      isbn: params.book.isbn,\n      reviewCount: params.book.reviewCount,\n      reviewAverage: params.book.reviewAverage,\n    }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('books#create', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('books#create', error);\n    });\n}\n\n// 読了・積読情報を更新するapi\nexport const updateBook = (params) => {\n  return axios.patch(bookPath(params.book.isbn), {\n    read: params.read,\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('books#update', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('books#update', error);\n    });\n}\n\n// 検索したワードの本を取得するapi\nexport const fetchBooks = (params) => {\n  return axios.post(booksearch, {\n    book: { title: params.keyword }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('books#search', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('books#search', error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}