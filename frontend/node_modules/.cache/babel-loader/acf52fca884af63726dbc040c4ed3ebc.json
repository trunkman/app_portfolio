{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // styles\n\nimport Button from \"@mui/material/Button\"; //api\n\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\"; // Reducer\n\nimport { dataInitialState, dataReducer } from '../../reducer/DataReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FollowButton = ({\n  userId,\n  followStatus\n}) => {\n  _s();\n\n  const [following, setFollowing] = useState(followStatus);\n  const [dataState, dataDispatch] = useReducer(dataReducer, dataInitialState); // フォローする\n\n  const submitFollow = () => {\n    postFollow({\n      userId: userId\n    }).then(() => {\n      setFollowing(true);\n      alert('フォローしました');\n    });\n  }; // フォローを解除する\n\n\n  const submitUnfollow = () => {\n    deleteUnfollow({\n      userId: userId\n    }).then(() => {\n      setFollowing(false);\n      alert('フォローを解除しました');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: following === true ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitUnfollow,\n      variant: \"contained\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitFollow,\n      variant: \"outlined\",\n      children: \"\\u30D5\\u30A9\\u30ED\\u30FC\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(FollowButton, \"fEYEdlkG2uQqZFhKvE+9vkRtSn8=\");\n\n_c = FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx"],"names":["React","useState","useEffect","axios","Button","postFollow","deleteUnfollow","fetchFollow","dataInitialState","dataReducer","FollowButton","userId","followStatus","following","setFollowing","dataState","dataDispatch","useReducer","submitFollow","then","alert","submitUnfollow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,WAAT,QAA4B,0BAA5B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,2BAA9C;;;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,MAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AAAA;;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACW,YAAD,CAA1C;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BC,UAAU,CAACR,WAAD,EAAcD,gBAAd,CAA5C,CAFI,CAIJ;;AACA,QAAMU,YAAY,GAAG,MAAM;AACzBb,IAAAA,UAAU,CAAC;AAAEM,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAV,CACGQ,IADH,CACQ,MAAM;AACVL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,MAAAA,KAAK,CAAC,UAAD,CAAL;AACD,KAJH;AAKD,GAND,CALI,CAYJ;;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3Bf,IAAAA,cAAc,CAAC;AAAEK,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAd,CACGQ,IADH,CACQ,MAAM;AACVL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD,KAJH;AAKD,GAND;;AASA,sBACE;AAAA,cACGP,SAAS,KAAK,IAAd,gBAEG,QAAC,MAAD;AACE,MAAA,OAAO,EAAEQ,cADX;AAEE,MAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,gBASG,QAAC,MAAD;AACE,MAAA,OAAO,EAAEH,YADX;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVN,mBADF;AAqBD,CA9CM;;GAAMR,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// styles\nimport Button from \"@mui/material/Button\";\n//api\nimport { postFollow } from \"../../apis/relationships\";\nimport { deleteUnfollow } from \"../../apis/relationships\";\nimport { fetchFollow } from \"../../apis/relationships\";\n// Reducer\nimport { dataInitialState, dataReducer } from '../../reducer/DataReducer';\n\n\nexport const FollowButton = ({\n  userId,\n  followStatus,\n}) => {\n  const [following, setFollowing] = useState(followStatus)\n  const [dataState, dataDispatch] = useReducer(dataReducer, dataInitialState)\n\n  // フォローする\n  const submitFollow = () => {\n    postFollow({ userId: userId })\n      .then(() => {\n        setFollowing(true)\n        alert('フォローしました')\n      })\n  }\n  // フォローを解除する\n  const submitUnfollow = () => {\n    deleteUnfollow({ userId: userId })\n      .then(() => {\n        setFollowing(false)\n        alert('フォローを解除しました')\n      })\n  }\n\n\n  return (\n    <>\n      {following === true\n        ? (\n          <Button\n            onClick={submitUnfollow}\n            variant=\"contained\"\n          >\n            フォロー中\n          </Button>\n        ) : (\n          <Button\n            onClick={submitFollow}\n            variant=\"outlined\"\n          >\n            フォローする\n          </Button>\n        )\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}