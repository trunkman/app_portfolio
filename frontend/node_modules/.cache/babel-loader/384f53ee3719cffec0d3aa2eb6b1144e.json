{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\"; // Style\n\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\"; // Api\n\nimport { fetchSleepDebt } from \"../../apis/diaries\"; // Reducer\n\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\"; // Component\n\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\";\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { LoginSignup } from \"../../components/Informations/LoginSignup\"; // Image\n\nimport MainImage from \"../../images/MainImage.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState); // 睡眠負債を取得する\n\n  const SleepDebt = () => {\n    _s();\n\n    sleepDebtDispatch({\n      type: 'fetching'\n    });\n    fetchSleepDebt(authState.loginUser.id).then(data => {\n      // 睡眠負債が返された場合\n      data.sleep_debt && sleepDebtDispatch({\n        type: 'fetchSuccess',\n        payload: {\n          sleepDebt: data.sleep_debt\n        }\n      }); // 余剰睡眠が返された場合\n\n      data.sleep_saving && sleepDebtDispatch({\n        type: 'fetchSuccess',\n        payload: {\n          sleepSaving: data.sleep_saving\n        }\n      });\n    }); // ログイン時のみ実行\n\n    useEffect(() => {\n      authState.loggedIn && SleepDebt();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          maxWidth: 1000,\n          alignItems: 'center'\n        },\n        children: [!authState.loggedIn && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          sx: {\n            flexDirection: 'column',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(LoginSignup, {\n            handleOpenLogin: () => dialogDispatch({\n              type: 'login'\n            }),\n            handleOpenSignup: () => dialogDispatch({\n              type: 'signup'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), authState.loggedIn && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          sx: {\n            alignItems: \"center\",\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(SleepInfo, {\n            userName: authState.loginUser.name,\n            sleepDebt: sleepDebtState.sleepDebt,\n            sleepSaving: sleepDebtState.sleepSaving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          sx: {\n            alignItems: \"center\",\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: MainImage,\n              alt: \"main iamge\",\n              style: {\n                width: 600\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpDialog, {\n        handleClose: () => dialogDispatch({\n          type: 'close'\n        }),\n        open: dialogState.signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogInDialog, {\n        handleClose: () => dialogDispatch({\n          type: 'close'\n        }),\n        handlePasswordReset: () => dialogDispatch({\n          type: 'passwordReset'\n        }),\n        open: dialogState.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordResetDialog, {\n        handleClose: () => dialogDispatch({\n          type: 'close'\n        }),\n        open: dialogState.passwordReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n        handleClose: () => authDispatch({\n          type: 'closeSnackbar'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s(SleepDebt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(Home, \"X0dvI4C3WtHgoY5B74O+Eztu6v4=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx"],"names":["React","useEffect","useContext","useReducer","AuthContext","Box","Grid","fetchSleepDebt","dialogReducer","dialogInitialState","sleepDebtReducer","sleepDebtInitialState","SignUpDialog","LogInDialog","PasswordResetDialog","SleepInfo","SnackBar","LoginSignup","MainImage","Home","authState","authDispatch","dialogState","dialogDispatch","sleepDebtState","sleepDebtDispatch","SleepDebt","type","loginUser","id","then","data","sleep_debt","payload","sleepDebt","sleep_saving","sleepSaving","loggedIn","maxWidth","alignItems","flexDirection","justifyContent","name","width","signup","login","passwordReset"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\";\n// Api\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { LoginSignup } from \"../../components/Informations/LoginSignup\";\n// Image\nimport MainImage from \"../../images/MainImage.png\";\n\n\nexport const Home = () => {\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' })\n    fetchSleepDebt(authState.loginUser.id)\n      .then(data => {\n        // 睡眠負債が返された場合\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        );\n        // 余剰睡眠が返された場合\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        );\n      });\n\n    // ログイン時のみ実行\n    useEffect(() => {\n      authState.loggedIn && SleepDebt();\n    }, [])\n\n\n    return (\n      <>\n        <Grid container sx={{\n          maxWidth: 1000,\n          alignItems: 'center',\n        }}>\n          {!authState.loggedIn &&\n            <Grid item xs={12} sm={6} sx={{\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}>\n              <LoginSignup\n                handleOpenLogin={() => dialogDispatch({ type: 'login' })}\n                handleOpenSignup={() => dialogDispatch({ type: 'signup' })}\n              />\n            </Grid>\n          }\n          {authState.loggedIn &&\n            <Grid item xs={12} sm={6} sx={{\n              alignItems: \"center\",\n              justifyContent: 'center',\n            }}>\n              <SleepInfo\n                userName={authState.loginUser.name}\n                sleepDebt={sleepDebtState.sleepDebt}\n                sleepSaving={sleepDebtState.sleepSaving}\n              />\n            </Grid>\n          }\n          <Grid item xs={12} sm={6} sx={{\n            alignItems: \"center\",\n            justifyContent: 'center',\n          }}>\n            <Box>\n              <img src={MainImage}\n                alt=\"main iamge\"\n                style={{ width: 600 }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n\n        <SignUpDialog\n          handleClose={() => dialogDispatch({ type: 'close' })}\n          open={dialogState.signup}\n        />\n        <LogInDialog\n          handleClose={() => dialogDispatch({ type: 'close' })}\n          handlePasswordReset={() => dialogDispatch({ type: 'passwordReset' })}\n          open={dialogState.login}\n        />\n        <PasswordResetDialog\n          handleClose={() => dialogDispatch({ type: 'close' })}\n          open={dialogState.passwordReset}\n        />\n        <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}