{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Style\n\nimport Box from '@mui/material/Box';\nimport { IconButton } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\"; // Icon\n\nimport SmsOutlinedIcon from '@mui/icons-material/SmsOutlined'; // Component\n\nimport { CommentDialog } from \"../Dialogs/CommentDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentButton = ({\n  commentCount,\n  loginUserId,\n  micropostId\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false); // ダイアログを開閉する関数群\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(SmsOutlinedIcon, {\n        sx: {\n          mx: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: commentCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentDialog, {\n      handleClose: handleClose,\n      open: open,\n      loginUserId: loginUserId,\n      micropostId: micropostId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = CommentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx"],"names":["React","useState","Box","IconButton","Typography","SmsOutlinedIcon","CommentDialog","CommentButton","commentCount","loginUserId","micropostId","open","setOpen","handleOpen","handleClose","mx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,iCAA5B,C,CACA;;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,YAD4B;AAE5BC,EAAAA,WAF4B;AAG5BC,EAAAA;AAH4B,CAAD,KAIvB;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC,CADI,CAEJ;;AACA,QAAMY,UAAU,GAAG,MAAM;AAAED,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAA1C;;AACA,QAAME,WAAW,GAAG,MAAM;AAAEF,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB,GAA5C;;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEC,UAArB;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,EAAE,EAAE;AAAEE,UAAAA,EAAE,EAAE;AAAN;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAA,gBACGP;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,aAAD;AACE,MAAA,WAAW,EAAEM,WADf;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,WAAW,EAAEF,WAHf;AAIE,MAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAgBD,CA1BM;;GAAMH,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { IconButton } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport SmsOutlinedIcon from '@mui/icons-material/SmsOutlined';\n// Component\nimport { CommentDialog } from \"../Dialogs/CommentDialog\";\n\nexport const CommentButton = ({\n  commentCount,\n  loginUserId,\n  micropostId,\n}) => {\n  const [open, setOpen] = useState(false)\n  // ダイアログを開閉する関数群\n  const handleOpen = () => { setOpen(true) }\n  const handleClose = () => { setOpen(false) }\n\n  return (\n    <>\n      <IconButton onClick={handleOpen}>\n        <SmsOutlinedIcon sx={{ mx: 1 }} />\n      </IconButton>\n      <Typography>\n        {commentCount}\n      </Typography>\n      <CommentDialog\n        handleClose={handleClose}\n        open={open}\n        loginUserId={loginUserId}\n        micropostId={micropostId}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}