{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx\";\nimport React from \"react\"; // styles\n\nimport { Button } from \"@mui/material\"; // api\n\nimport { postBook, updateBook } from \"../../apis/books\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ReadButton = ({\n  book,\n  registration,\n  subscribed\n}) => {\n  const handleClick = boolean => {\n    {\n      // ユーザー未登録本の場合、CreateでDBに登録する\n      !subscribed && postBook({\n        read: boolean,\n        registration: registration,\n        book: book\n      }).then(data => {\n        alert(data.message);\n      });\n    }\n    {\n      // ユーザー登録済み本の場合、UpdateでDBを更新する\n      subscribed && updateBook({\n        read: boolean,\n        book: book\n      }).then(data => {\n        alert(data.message);\n      });\n    }\n  }; // 読んだ積んだがわかるように設定する予定\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => handleClick(\"false\") // {!book.read && subscribed && (variant = \"contained\")}\n      ,\n      children: \"\\u7A4D\\u3080\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => handleClick(\"true\") // {book.read && subscribed && (variant = \"contained\")}\n      ,\n      children: \"\\u8AAD\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ReadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadButton\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx"],"names":["React","Button","postBook","updateBook","ReadButton","book","registration","subscribed","handleClick","boolean","read","then","data","alert","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AACzBC,EAAAA,IADyB;AAEzBC,EAAAA,YAFyB;AAGzBC,EAAAA;AAHyB,CAAD,KAIpB;AAEJ,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/B;AAAE;AACA,OAACF,UAAD,IACEL,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAED,OADC;AAEPH,QAAAA,YAAY,EAAEA,YAFP;AAGPD,QAAAA,IAAI,EAAEA;AAHC,OAAD,CAAR,CAKGM,IALH,CAKQC,IAAI,IAAI;AACZC,QAAAA,KAAK,CAACD,IAAI,CAACE,OAAN,CAAL;AACD,OAPH,CADF;AAUD;AACD;AAAE;AACAP,MAAAA,UAAU,IACRJ,UAAU,CAAC;AACTO,QAAAA,IAAI,EAAED,OADG;AAETJ,QAAAA,IAAI,EAAEA;AAFG,OAAD,CAAV,CAIGM,IAJH,CAIQC,IAAI,IAAI;AACZC,QAAAA,KAAK,CAACD,IAAI,CAACE,OAAN,CAAL;AACD,OANH,CADF;AASD;AACF,GAxBD,CAFI,CA4BJ;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAE,MAAMN,WAAW,CAAC,OAAD,CAF5B,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,MAAD,CAF5B,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAkBD,CAnDM;KAAMJ,U","sourcesContent":["import React from \"react\";\n// styles\nimport { Button } from \"@mui/material\";\n// api\nimport { postBook, updateBook } from \"../../apis/books\";\n\nexport const ReadButton = ({\n  book,\n  registration,\n  subscribed,\n}) => {\n\n  const handleClick = (boolean) => {\n    { // ユーザー未登録本の場合、CreateでDBに登録する\n      !subscribed && (\n        postBook({\n          read: boolean,\n          registration: registration,\n          book: book,\n        })\n          .then(data => {\n            alert(data.message)\n          })\n      )\n    }\n    { // ユーザー登録済み本の場合、UpdateでDBを更新する\n      subscribed && (\n        updateBook({\n          read: boolean,\n          book: book,\n        })\n          .then(data => {\n            alert(data.message)\n          })\n      )\n    }\n  }\n\n  // 読んだ積んだがわかるように設定する予定\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        onClick={() => handleClick(\"false\")}\n      // {!book.read && subscribed && (variant = \"contained\")}\n      >\n        積む\n      </Button>\n      <Button\n        color=\"primary\"\n        onClick={() => handleClick(\"true\")}\n      // {book.read && subscribed && (variant = \"contained\")}\n      >\n        読了\n      </Button>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}