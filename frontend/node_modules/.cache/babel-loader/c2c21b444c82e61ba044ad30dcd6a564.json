{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App'; // Style\n\nimport Box from '@mui/material/Box';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport Tab from '@mui/material/Tab';\nimport TabPanel from '@mui/lab/TabPanel';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Grid from \"@mui/material/Grid\";\nimport { makeStyles } from '@material-ui/styles'; //Icon\n\nimport CommentIcon from '@mui/icons-material/Comment';\nimport NotesIcon from '@mui/icons-material/Notes'; // Api\n\nimport { fetchUser, fetchMicroposts } from \"../../apis/users\"; // Reducer\n\nimport { profileInitialState, profileReducer } from '../../reducer/ProfileReducer'; // Component\n\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { Comment } from \"../../components/Lists/Comment\";\nimport { Loading } from \"../../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 800,\n    mx: 'auto',\n    width: '100%'\n  },\n  tabBox: {\n    background: '#001e3c',\n    '&:hover': {\n      color: '#fff',\n      fontWeight: 'bold'\n    }\n  }\n}));\nexport const Profile = ({\n  userId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState('microposts'); // ユーザー情報の取得\n\n  const userInformation = () => {\n    fetchUser(userId).then(data => {\n      profileDispatch({\n        type: 'fetchSuccessProfile',\n        payload: {\n          user: data.user,\n          followingIds: data.following_ids,\n          followersIds: data.followers_ids,\n          followStatus: data.followStatus\n        }\n      });\n    });\n  }; // マイクロポスト情報の取得 \n\n\n  const userMicropost = () => {\n    fetchMicroposts(userId).then(data => {\n      profileDispatch({\n        type: 'fetchSuccessMicropost',\n        payload: {\n          microposts: data.microposts,\n          likedMicroposts: data.liked_microposts,\n          comments: data.comments\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    userInformation();\n  }, []);\n  useEffect(() => {\n    userMicropost();\n  }, [tab]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      loginUser: authState.loginUser,\n      profile: profileState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: 0.5,\n        borderColor: 'inherit'\n      },\n      children: /*#__PURE__*/_jsxDEV(TabContext, {\n        value: tab,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            onChange: (event, newTab) => setTab(newTab),\n            variant: \"fullWidth\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              icon: /*#__PURE__*/_jsxDEV(NotesIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this),\n              iconPosition: \"start\",\n              label: \"\\u3064\\u3076\\u3084\\u304D\",\n              value: \"microposts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this),\n              iconPosition: \"start\",\n              label: \"\\u3044\\u3044\\u306D\",\n              value: \"liked_microposts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              icon: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this),\n              iconPosition: \"start\",\n              label: \"\\u30B3\\u30E1\\u30F3\\u30C8\",\n              value: \"comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"microposts\",\n          index: 0,\n          children: profileState.fetchState != 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 49\n          }, this) : profileState.microposts.map(micropost => /*#__PURE__*/_jsxDEV(Micropost, {\n            commentCount: micropost.commentCount,\n            likeStatus: micropost.likeStatus,\n            loginUser: authState.loginUser,\n            micropost: micropost.micropost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"liked_microposts\",\n          index: 1,\n          children: profileState.fetchState != 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 49\n          }, this) : profileState.likedMicroposts.map(micropost => /*#__PURE__*/_jsxDEV(Micropost, {\n            commentCount: micropost.commentCount,\n            likeStatus: micropost.likeStatus,\n            loginUser: authState.loginUser,\n            micropost: micropost.liked_micropost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"comments\",\n          index: 2,\n          children: profileState.fetchState != 'ok' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 49\n          }, this) : profileState.comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n            comment: comment,\n            loginUser: authState.loginUser,\n            userName: profileState.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"NOL0qLKPyhyDouaGkFFlzvMfkCk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx"],"names":["React","useContext","useState","useEffect","useReducer","AuthContext","Box","TabContext","TabList","Tab","TabPanel","FavoriteIcon","Grid","makeStyles","CommentIcon","NotesIcon","fetchUser","fetchMicroposts","profileInitialState","profileReducer","UserInfo","Micropost","Comment","Loading","useStyles","root","alignItems","flexDirection","justifyContent","maxWidth","mx","width","tabBox","background","color","fontWeight","Profile","userId","classes","authState","profileState","profileDispatch","tab","setTab","userInformation","then","data","type","payload","user","followingIds","following_ids","followersIds","followers_ids","followStatus","userMicropost","microposts","likedMicroposts","liked_microposts","comments","loginUser","border","borderColor","event","newTab","fetchState","map","micropost","commentCount","likeStatus","liked_micropost","comment","name"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Box from '@mui/material/Box';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport Tab from '@mui/material/Tab';\nimport TabPanel from '@mui/lab/TabPanel';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport Grid from \"@mui/material/Grid\";\nimport { makeStyles } from '@material-ui/styles';\n//Icon\nimport CommentIcon from '@mui/icons-material/Comment';\nimport NotesIcon from '@mui/icons-material/Notes';\n// Api\nimport { fetchUser, fetchMicroposts } from \"../../apis/users\";\n// Reducer\nimport { profileInitialState, profileReducer } from '../../reducer/ProfileReducer';\n// Component\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { Comment } from \"../../components/Lists/Comment\";\nimport { Loading } from \"../../components/Loading\"\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 800,\n    mx: 'auto',\n    width: '100%',\n  },\n  tabBox: {\n    background: '#001e3c',\n    '&:hover': {\n      color: '#fff',\n      fontWeight: 'bold',\n    },\n  },\n}));\n\nexport const Profile = ({\n  userId,\n}) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState('microposts');\n\n  // ユーザー情報の取得\n  const userInformation = () => {\n    fetchUser(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessProfile',\n          payload: {\n            user: data.user,\n            followingIds: data.following_ids,\n            followersIds: data.followers_ids,\n            followStatus: data.followStatus,\n          }\n        })\n      });\n  }\n\n  // マイクロポスト情報の取得 \n  const userMicropost = () => {\n    fetchMicroposts(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessMicropost',\n          payload: {\n            microposts: data.microposts,\n            likedMicroposts: data.liked_microposts,\n            comments: data.comments,\n          }\n        })\n      });\n  }\n\n  useEffect(() => { userInformation() }, [])\n  useEffect(() => { userMicropost() }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <UserInfo\n        loginUser={authState.loginUser}\n        profile={profileState}\n      />\n      <Grid container >\n        <Grid item xs={12} sm={6}>\n\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {/* <RecomendBook/> */}\n        </Grid>\n      </Grid>\n      <Box sx={{\n        border: 0.5,\n        borderColor: 'inherit',\n      }}>\n        <TabContext value={tab}>\n          <Box >\n            <TabList\n              onChange={(event, newTab) => setTab(newTab)}\n              variant=\"fullWidth\"\n            >\n              <Tab\n                icon={<NotesIcon />}\n                iconPosition=\"start\"\n                label=\"つぶやき\"\n                value=\"microposts\"\n              />\n              <Tab\n                icon={<FavoriteIcon />}\n                iconPosition=\"start\"\n                label=\"いいね\"\n                value=\"liked_microposts\"\n              />\n              <Tab\n                icon={<CommentIcon />}\n                iconPosition=\"start\"\n                label=\"コメント\"\n                value=\"comments\"\n              />\n            </TabList>\n          </Box>\n          <TabPanel value=\"microposts\" index={0}>\n            {\n              profileState.fetchState != 'ok' ? <Loading /> :\n                profileState.microposts.map(micropost =>\n                  <Micropost\n                    commentCount={micropost.commentCount}\n                    likeStatus={micropost.likeStatus}\n                    loginUser={authState.loginUser}\n                    micropost={micropost.micropost}\n                  />\n                )\n            }\n          </TabPanel>\n          <TabPanel value=\"liked_microposts\" index={1}>\n            {\n              profileState.fetchState != 'ok' ? <Loading /> :\n                profileState.likedMicroposts.map(micropost =>\n                  <Micropost\n                    commentCount={micropost.commentCount}\n                    likeStatus={micropost.likeStatus}\n                    loginUser={authState.loginUser}\n                    micropost={micropost.liked_micropost}\n                  />\n                )\n            }\n          </TabPanel>\n          <TabPanel value=\"comments\" index={2}>\n            {\n              profileState.fetchState != 'ok' ? <Loading /> :\n                profileState.comments.map(comment =>\n                  <Comment\n                    comment={comment}\n                    loginUser={authState.loginUser}\n                    userName={profileState.user.name}\n                  />\n                )\n            }\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}