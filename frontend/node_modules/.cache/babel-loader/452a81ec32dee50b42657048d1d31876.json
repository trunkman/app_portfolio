{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx\";\nimport React from \"react\";\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Typography from \"@mui/material/Typography\"; // アイコン\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\"; // api\n\nimport { deleteComment } from \"../../apis/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Comment = ({\n  comment,\n  loginUserId,\n  userName\n}) => {\n  // コメントを削除する\n  const deleteSubmit = commentId => {\n    deleteComment(commentId).then(alert('コメントを削除する'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        mt: 4,\n        borderTop: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n        sx: {\n          fontSize: 35\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 2,\n          pl: 3,\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u3010 \", micropost.user_id, \"\\u3055\\u3093 \\u3011 \", micropost.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pl: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              letterSpacing: 2,\n              my: 2\n            },\n            children: [\" \", micropost.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), loginUser.id === micropost.user_id && /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setOpen({\n          isOpen: true,\n          micropostId: micropost.id\n        }),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n        loginUserId: loginUser.id,\n        micropostId: micropost.id,\n        Status: likeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        loginUserId: loginUser.id,\n        micropostId: micropost.id,\n        commentCount: commentCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, micropost.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: \"center\",\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \"  \", comment.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), loginUserId == comment.user_id && /*#__PURE__*/_jsxDEV(Link, {\n        component: \"div\",\n        onClick: () => deleteSubmit(comment.id),\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, comment.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx"],"names":["React","Box","Link","Typography","AccountCircle","deleteComment","Comment","comment","loginUserId","userName","deleteSubmit","commentId","then","alert","display","alignItems","mt","borderTop","fontSize","pt","pl","flexGrow","micropost","user_id","created_at","letterSpacing","my","content","loginUser","id","setOpen","isOpen","micropostId","likeStatus","commentCount","toString","ml"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Typography from \"@mui/material/Typography\";\n// アイコン\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// api\nimport { deleteComment } from \"../../apis/comments\";\n\nexport const Comment = ({\n  comment,\n  loginUserId,\n  userName,\n}) => {\n\n  // コメントを削除する\n  const deleteSubmit = (commentId) => {\n    deleteComment(commentId)\n      .then(alert('コメントを削除する'))\n  }\n\n  return (\n    <>\n      <ListItem\n        key={micropost.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          mt: 4,\n          borderTop: 0.2,\n        }}>\n        <AccountCircle sx={{ fontSize: 35 }} />\n        <Box sx={{\n          pt: 2,\n          pl: 3,\n          flexGrow: 1,\n        }}>\n          <Typography>\n            【 {micropost.user_id}さん 】 {micropost.created_at}\n          </Typography>\n          <Typography variant=\"h6\" sx={{ pl: 1 }}>\n            <Box sx={{ letterSpacing: 2, my: 2 }}> {micropost.content}</Box>\n          </Typography>\n        </Box>\n        {loginUser.id === micropost.user_id && (\n          <IconButton onClick={() => setOpen({ isOpen: true, micropostId: micropost.id })}>\n            <DeleteOutlinedIcon />\n          </IconButton>\n        )}\n        <LikeButton\n          loginUserId={loginUser.id}\n          micropostId={micropost.id}\n          Status={likeStatus}\n        />\n        <CommentButton\n          loginUserId={loginUser.id}\n          micropostId={micropost.id}\n          commentCount={commentCount}\n        />\n      </ListItem >\n      <Box\n        key={comment.id.toString()}\n        sx={{\n          display: 'flex',\n          alignItems: \"center\",\n          my: 4,\n        }}>\n        <AccountCircle />\n        <Box sx={{ ml: 2 }}>\n          <Typography>\n            <b>{userName}</b>  {comment.created_at}\n          </Typography>\n          <Typography>\n            {comment.content}\n          </Typography>\n        </Box>\n        {loginUserId == comment.user_id && (\n          <Link\n            component=\"div\"\n            onClick={() => deleteSubmit(comment.id)}\n          >\n            削除\n          </Link>\n        )}\n      </Box >\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}