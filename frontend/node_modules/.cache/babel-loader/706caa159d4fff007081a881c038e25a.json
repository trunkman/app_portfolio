{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css'; // styles\n\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline'; // api\n\nimport { fetchLoggedIn } from './apis/sessions'; // コンテイナー\n\nimport { Home } from './containers/Home';\nimport { User } from './containers/User';\nimport { Users } from './containers/Users';\nimport { Contact } from './containers/Contact'; // コンポーネント\n\nimport { Header } from \"./components/Header\";\nimport { MiniDrawer } from './containers/MiniDrawer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginUser, setLoginUser] = useState({});\n  const [openLogInDialog, setOpenLogInDialog] = useState(false); // ログイン実行のコールバック関数\n\n  const handleLogIn = loginUser => {\n    setIsLoggedIn(true);\n    setLoginUser(loginUser);\n  }; // ログアウト実行のコールバック関数\n\n\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setLoginUser({});\n  }; // ログインDialogを開閉する関数群\n\n\n  const handleOpenLogIn = () => setOpenLogInDialog(true);\n\n  const handleCloseLogIn = () => setOpenLogInDialog(false); // ログイン状態を保持する\n\n\n  useEffect(() => {\n    fetchLoggedIn().then(data => {\n      if (data.logged_in && isLoggedIn === false) {\n        handleLogIn(data.user);\n      } else if (!data.logged_in && isLoggedIn === true) {\n        handleLogOut();\n      }\n    });\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniDrawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            handleCloseLogIn: handleCloseLogIn,\n            handleLogOut: handleLogOut,\n            handleLogIn: handleLogIn,\n            handleOpenLogIn: handleOpenLogIn,\n            isLoggedIn: isLoggedIn,\n            open: openLogInDialog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/:id\",\n          render: ({\n            match\n          }) => /*#__PURE__*/_jsxDEV(User, {\n            handleLogOut: handleLogOut,\n            handleLogIn: handleLogIn,\n            isLoggedIn: isLoggedIn,\n            match: match,\n            loginUser: loginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/users\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            handleLogOut: handleLogOut,\n            handleLogIn: handleLogIn,\n            isLoggedIn: isLoggedIn,\n            user: loginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          children: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tO1WWawzS79AH2dsnvudgx80Tx4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/App.jsx"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Box","CssBaseline","fetchLoggedIn","Home","User","Users","Contact","Header","MiniDrawer","App","isLoggedIn","setIsLoggedIn","loginUser","setLoginUser","openLogInDialog","setOpenLogInDialog","handleLogIn","handleLogOut","handleOpenLogIn","handleCloseLogIn","then","data","logged_in","user","display","match"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\n// styles\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\n// api\nimport { fetchLoggedIn } from './apis/sessions';\n// コンテイナー\nimport { Home } from './containers/Home'\nimport { User } from './containers/User'\nimport { Users } from './containers/Users'\nimport { Contact } from './containers/Contact';\n// コンポーネント\nimport { Header } from \"./components/Header\"\nimport { MiniDrawer } from './containers/MiniDrawer';\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loginUser, setLoginUser] = useState({});\n  const [openLogInDialog, setOpenLogInDialog] = useState(false)\n  // ログイン実行のコールバック関数\n  const handleLogIn = (loginUser) => {\n    setIsLoggedIn(true);\n    setLoginUser(loginUser);\n  }\n  // ログアウト実行のコールバック関数\n  const handleLogOut = () => {\n    setIsLoggedIn(false);\n    setLoginUser({});\n  }\n  // ログインDialogを開閉する関数群\n  const handleOpenLogIn = () => setOpenLogInDialog(true)\n  const handleCloseLogIn = () => setOpenLogInDialog(false)\n  // ログイン状態を保持する\n  useEffect(() => {\n    fetchLoggedIn()\n      .then(data => {\n        if (data.logged_in && isLoggedIn === false) {\n          handleLogIn(data.user)\n        } else if (!data.logged_in && isLoggedIn === true) {\n          handleLogOut()\n        }\n      })\n  }, [isLoggedIn])\n\n  return (\n    <BrowserRouter>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <MiniDrawer />\n        {/* <Header\n        handleCloseLogIn={handleCloseLogIn}\n        handleLogOut={handleLogOut}\n        handleLogIn={handleLogIn}\n        handleOpenLogIn={handleOpenLogIn}\n        isLoggedIn={isLoggedIn}\n        open={openLogInDialog}\n        loginUser={loginUser}\n      /> */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home\n              handleCloseLogIn={handleCloseLogIn}\n              handleLogOut={handleLogOut}\n              handleLogIn={handleLogIn}\n              handleOpenLogIn={handleOpenLogIn}\n              isLoggedIn={isLoggedIn}\n              open={openLogInDialog}\n            />\n          </Route>\n          <Route path=\"/users/:id\"\n            render={({ match }) =>\n              <User\n                handleLogOut={handleLogOut}\n                handleLogIn={handleLogIn}\n                isLoggedIn={isLoggedIn}\n                match={match}\n                loginUser={loginUser}\n              />\n            }\n          />\n          <Route exact path=\"/users\">\n            <Users\n              handleLogOut={handleLogOut}\n              handleLogIn={handleLogIn}\n              isLoggedIn={isLoggedIn}\n              user={loginUser}\n            />\n          </Route>\n          <Route exact path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>\n      </Box>\n    </BrowserRouter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}