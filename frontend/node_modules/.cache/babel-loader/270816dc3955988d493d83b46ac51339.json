{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/containers/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\"; // ユーザーページのstyle\n\nimport Button from '@mui/material/Button'; // コンポーネント\n\nimport { Header } from \"../components/Header\";\nimport { SettingDialog } from \"../components/SettingDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  const [openSettingDialog, setOpenSettingDialog] = useState(false); // 設定のDialogを開くCallback関数\n\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true);\n  }; // 設定のDialogを閉じるCallback関数\n\n\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false);\n  }; // 返り値：ユーザー画面\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id\\u306F\", props.user.id, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u540D\\u524D\\u306F\", props.user.name, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email\\u306F\", props.user.email, \"\\u3067\\u3059\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleOpenSetting,\n      children: [\"\\u8A2D\\u5B9A\\uFF08\\u30E6\\u30FC\\u30B6\\u30FC\\u60C5\\u5831\\u306E\\u66F4\\u65B0\\uFF09\", /*#__PURE__*/_jsxDEV(SettingDialog, {\n        open: openSettingDialog,\n        handleClose: handleCloseSetting,\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8A2D\\u5B9A\\u5909\\u66F4\\u4E0D\\u53EF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"DYu9CrL+JxtuiMrSbk8u5Z7wHlk=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/containers/User.jsx"],"names":["React","Fragment","useState","Button","Header","SettingDialog","User","props","openSettingDialog","setOpenSettingDialog","handleOpenSetting","handleCloseSetting","user","id","name","email","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,KAAD,CAA1D,CAD6B,CAG7B;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD,CAJ6B,CAQ7B;;;AACA,QAAME,kBAAkB,GAAG,MAAM;AAC/BF,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD,CAT6B,CAa7B;;;AACA,sBACE,QAAC,QAAD;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAOF,KAAK,CAACK,IAAN,CAAWC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,uCAAON,KAAK,CAACK,IAAN,CAAWE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gCAAUP,KAAK,CAACK,IAAN,CAAWG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAOKR,KAAK,CAACS,UAAP,gBAEI,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,OAAO,EAAEN,iBAFX;AAAA,gHAKE,QAAC,aAAD;AACE,QAAA,IAAI,EAAEF,iBADR;AAEE,QAAA,WAAW,EAAEG,kBAFf;AAGE,QAAA,IAAI,EAAEJ,KAAK,CAACK;AAHd;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,gBAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA1CM;;GAAMN,I;;KAAAA,I","sourcesContent":["import React, { Fragment, useState } from \"react\";\n// ユーザーページのstyle\nimport Button from '@mui/material/Button';\n// コンポーネント\nimport { Header } from \"../components/Header\"\nimport { SettingDialog } from \"../components/SettingDialog\";\n\nexport const User = (props) => {\n  const [openSettingDialog, setOpenSettingDialog] = useState(false)\n\n  // 設定のDialogを開くCallback関数\n  const handleOpenSetting = () => {\n    setOpenSettingDialog(true)\n  }\n\n  // 設定のDialogを閉じるCallback関数\n  const handleCloseSetting = () => {\n    setOpenSettingDialog(false)\n  }\n\n  // 返り値：ユーザー画面\n  return (\n    <Fragment>\n\n      <h1>ユーザーページ</h1>\n      <p>Idは{props.user.id}です</p>\n      <p>名前は{props.user.name}です</p>\n      <p>Emailは{props.user.email}です</p>\n      {\n        (props.isLoggedIn)\n          ? (\n            <Button\n              variant=\"outlined\"\n              onClick={handleOpenSetting}\n            >\n              設定（ユーザー情報の更新）\n              <SettingDialog\n                open={openSettingDialog}\n                handleClose={handleCloseSetting}\n                user={props.user}\n              />\n            </Button>\n          )\n          : (\n            <p>設定変更不可</p>\n          )\n      }\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}