{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/app/frontend/src/components/Diaries/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from 'react'; // styles\n// import Grid from \"@mui/material/Grid\";\n\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction'; // api\n\nimport { fetchUserDiaries } from \"../../apis/users\"; // コンポーネント\n\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Calendar = () => {\n  _s();\n\n  const [diary, setDiary] = useState(null);\n  const [open, setOpen] = useState(false); // 日記Dialogを開閉する関数群\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false); // const diaries = [{ title: \"good\", start: \"2021-11-09\" }]\n  // useEffect(() => {\n  //   fetchUserDiaries()\n  //     .then(data => {\n  //       setDiary({\n  //         title: \"good\",\n  //         start: \"2021-11-10\",\n  //       })\n  //       diaries.push(diary)\n  //     })\n  // }, [])\n\n\n  const handleDateClick = useCallback(DateClickArg => {\n    alert(dateStr);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      locale: \"ja\",\n      dateClick: handleDateClick,\n      events: [{\n        title: \"event 1\",\n        start: \"2021-07-01\"\n      }, {\n        title: \"event 2\",\n        start: \"2021-07-02T12:00:00\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"inherit\",\n      onClick: handleOpen,\n      children: \"\\u8A18\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryDialog, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calendar, \"J/mll4ZP2U4V4+FXAXefYyEN4gs=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/components/Diaries/Calendar.jsx"],"names":["React","useEffect","useState","useCallback","Button","FullCalendar","dayGridPlugin","interactionPlugin","DateClickArg","fetchUserDiaries","DiaryDialog","Calendar","diary","setDiary","open","setOpen","handleOpen","handleClose","handleDateClick","alert","dateStr","title","start"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,IAA4BC,YAA5B,QAAgD,2BAAhD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC,CAF4B,CAG5B;;AACA,QAAMc,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC,CAL4B,CAM5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,eAAe,GAAGf,WAAW,CAAEK,YAAD,IAAkB;AACpDW,IAAAA,KAAK,CAACC,OAAD,CAAL;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAACd,aAAD,CADX;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,SAAS,EAAEY,eAJb;AAKE,MAAA,MAAM,EAAE,CACN;AAAEG,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAFM;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEN,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,WAAW,EAAEG;AAFf;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAuBD,CA9CM;;GAAMN,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useCallback } from 'react';\n// styles\n// import Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { DateClickArg } from '@fullcalendar/interaction';\n// api\nimport { fetchUserDiaries } from \"../../apis/users\";\n// コンポーネント\nimport { DiaryDialog } from \"../Dialogs/DiaryDialog\"\n\nexport const Calendar = () => {\n  const [diary, setDiary] = useState(null)\n  const [open, setOpen] = useState(false)\n  // 日記Dialogを開閉する関数群\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n  // const diaries = [{ title: \"good\", start: \"2021-11-09\" }]\n\n  // useEffect(() => {\n  //   fetchUserDiaries()\n  //     .then(data => {\n  //       setDiary({\n  //         title: \"good\",\n  //         start: \"2021-11-10\",\n  //       })\n  //       diaries.push(diary)\n  //     })\n  // }, [])\n\n  const handleDateClick = useCallback((DateClickArg) => {\n    alert(dateStr);\n  }, []);\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        locale=\"ja\"\n        dateClick={handleDateClick}\n        events={[\n          { title: \"event 1\", start: \"2021-07-01\" },\n          { title: \"event 2\", start: \"2021-07-02T12:00:00\" }\n        ]}\n      />\n\n      <Button variant=\"inherit\" onClick={handleOpen}>\n        記録する\n      </Button>\n      <DiaryDialog\n        open={open}\n        handleClose={handleClose}\n      />\n      {/* <p>{diaries[0]}</p> */}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}