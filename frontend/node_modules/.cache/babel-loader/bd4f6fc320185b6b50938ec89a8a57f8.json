{"ast":null,"code":"import axios from \"axios\";\nimport { rooms, roomPath } from \"../urls\"; // トークルームのメッセージ一式を取得するapi\n\nexport const fetchMessages = roomId => {\n  return axios.get(roomPath(roomId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('rooms#show', res);\n    return res.data;\n  }).catch(error => {\n    console.log('rooms#show', error);\n  });\n}; // メッセージルームを作成するapi\n\nexport const postRoom = params => {\n  return axios.post(rooms, {\n    room: {\n      user_id: params.userId\n    }\n  }, {\n    withCredentials: true\n  }).then(res => {\n    console.log('rooms#create', res);\n    return res.data;\n  }).catch(error => {\n    console.log('rooms#create', error);\n  });\n}; // メッセージルームを削除するapi\n\nexport const deleteRoom = roomId => {\n  return axios.delete(roomPath(roomId), {\n    withCredentials: true\n  }).then(res => {\n    console.log('rooms#destroy', res);\n    return res.data;\n  }).catch(error => {\n    console.log('rooms#destroy', error);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/app/frontend/src/apis/rooms.js"],"names":["axios","rooms","roomPath","fetchMessages","roomId","get","withCredentials","then","res","console","log","data","catch","error","postRoom","params","post","room","user_id","userId","deleteRoom","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,SAAhC,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACvC,SAAOJ,KAAK,CAACK,GAAN,CAAUH,QAAQ,CAACE,MAAD,CAAlB,EAA4B;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAA5B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,KAA1B;AACD,GAPI,CAAP;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAClC,SAAOf,KAAK,CAACgB,IAAN,CAAWf,KAAX,EAAkB;AACvBgB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAEH,MAAM,CAACI;AAAlB;AADiB,GAAlB,EAEJ;AACDb,IAAAA,eAAe,EAAE;AADhB,GAFI,EAKJC,IALI,CAKCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GARI,EASJC,KATI,CASEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,KAA5B;AACD,GAXI,CAAP;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMO,UAAU,GAAIhB,MAAD,IAAY;AACpC,SAAOJ,KAAK,CAACqB,MAAN,CAAanB,QAAQ,CAACE,MAAD,CAArB,EAA+B;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAA/B,EACJC,IADI,CACCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GAJI,EAKJC,KALI,CAKEC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACD,GAPI,CAAP;AAQD,CATM","sourcesContent":["import axios from \"axios\";\nimport { rooms, roomPath } from \"../urls\";\n\n// トークルームのメッセージ一式を取得するapi\nexport const fetchMessages = (roomId) => {\n  return axios.get(roomPath(roomId), { withCredentials: true })\n    .then(res => {\n      console.log('rooms#show', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('rooms#show', error);\n    });\n}\n\n// メッセージルームを作成するapi\nexport const postRoom = (params) => {\n  return axios.post(rooms, {\n    room: { user_id: params.userId }\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('rooms#create', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('rooms#create', error);\n    });\n}\n\n// メッセージルームを削除するapi\nexport const deleteRoom = (roomId) => {\n  return axios.delete(roomPath(roomId), { withCredentials: true })\n    .then(res => {\n      console.log('rooms#destroy', res)\n      return res.data;\n    })\n    .catch(error => {\n      console.log('rooms#destroy', error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}