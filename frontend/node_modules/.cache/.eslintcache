[{"/home/ubuntu/app/frontend/src/index.js":"1","/home/ubuntu/app/frontend/src/reportWebVitals.js":"2","/home/ubuntu/app/frontend/src/App.jsx":"3","/home/ubuntu/app/frontend/src/apis/sessions.js":"4","/home/ubuntu/app/frontend/src/reducer/AuthReducer.jsx":"5","/home/ubuntu/app/frontend/src/containers/Layout.jsx":"6","/home/ubuntu/app/frontend/src/urls/index.js":"7","/home/ubuntu/app/frontend/src/containers/Pages/Book.jsx":"8","/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx":"9","/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx":"10","/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx":"11","/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx":"12","/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx":"13","/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx":"14","/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx":"15","/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx":"16","/home/ubuntu/app/frontend/src/containers/Pages/Timeline.jsx":"17","/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx":"18","/home/ubuntu/app/frontend/src/containers/Pages/Users.jsx":"19","/home/ubuntu/app/frontend/src/components/Links/AvatarLink.jsx":"20","/home/ubuntu/app/frontend/src/components/Links/DiariesLink.jsx":"21","/home/ubuntu/app/frontend/src/components/Links/FollowsLink.jsx":"22","/home/ubuntu/app/frontend/src/components/Links/BooksLink.jsx":"23","/home/ubuntu/app/frontend/src/components/Links/RoomsLink.jsx":"24","/home/ubuntu/app/frontend/src/components/Links/HomeLink.jsx":"25","/home/ubuntu/app/frontend/src/components/Links/TimelineLink.jsx":"26","/home/ubuntu/app/frontend/src/components/Links/RankingLink.jsx":"27","/home/ubuntu/app/frontend/src/apis/books.js":"28","/home/ubuntu/app/frontend/src/apis/users.js":"29","/home/ubuntu/app/frontend/src/apis/diaries.js":"30","/home/ubuntu/app/frontend/src/apis/rooms.js":"31","/home/ubuntu/app/frontend/src/apis/passwordResets.js":"32","/home/ubuntu/app/frontend/src/reducer/DialogReducer.jsx":"33","/home/ubuntu/app/frontend/src/reducer/FollowReducer.jsx":"34","/home/ubuntu/app/frontend/src/components/Loading.jsx":"35","/home/ubuntu/app/frontend/src/reducer/SleepDebtReducer.jsx":"36","/home/ubuntu/app/frontend/src/reducer/MessageReducer.jsx":"37","/home/ubuntu/app/frontend/src/reducer/BookReducer.jsx":"38","/home/ubuntu/app/frontend/src/reducer/TimelineReducer.jsx":"39","/home/ubuntu/app/frontend/src/reducer/RoomReducer.jsx":"40","/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx":"41","/home/ubuntu/app/frontend/src/components/Buttons/BookSearchButton.jsx":"42","/home/ubuntu/app/frontend/src/components/Buttons/AccountButton.jsx":"43","/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx":"44","/home/ubuntu/app/frontend/src/components/UserInfomation/SleepInfo.jsx":"45","/home/ubuntu/app/frontend/src/components/UserInfomation/SleepData.jsx":"46","/home/ubuntu/app/frontend/src/components/Dialogs/RecordDialog.jsx":"47","/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx":"48","/home/ubuntu/app/frontend/src/components/Dialogs/LogInDialog.jsx":"49","/home/ubuntu/app/frontend/src/components/Dialogs/PasswordResetDialog.jsx":"50","/home/ubuntu/app/frontend/src/components/Dialogs/TweetDialog.jsx":"51","/home/ubuntu/app/frontend/src/components/Dialogs/DeleteDialog.jsx":"52","/home/ubuntu/app/frontend/src/components/Lists/FollowList.jsx":"53","/home/ubuntu/app/frontend/src/components/Lists/Message.jsx":"54","/home/ubuntu/app/frontend/src/components/Lists/BookList.jsx":"55","/home/ubuntu/app/frontend/src/components/Lists/BookCard.jsx":"56","/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx":"57","/home/ubuntu/app/frontend/src/components/Snackbars/Snackbar.jsx":"58","/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx":"59","/home/ubuntu/app/frontend/src/components/Forms/Search.jsx":"60","/home/ubuntu/app/frontend/src/components/Forms/Password.jsx":"61","/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx":"62","/home/ubuntu/app/frontend/src/apis/messages.js":"63","/home/ubuntu/app/frontend/src/apis/microposts.js":"64","/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx":"65","/home/ubuntu/app/frontend/src/components/Buttons/LikeButton.jsx":"66","/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx":"67","/home/ubuntu/app/frontend/src/components/Buttons/RoomButton.jsx":"68","/home/ubuntu/app/frontend/src/reducer/NotificationReducer.jsx":"69","/home/ubuntu/app/frontend/src/apis/likes.js":"70","/home/ubuntu/app/frontend/src/apis/relationships.js":"71","/home/ubuntu/app/frontend/src/components/Dialogs/CommentDialog.jsx":"72","/home/ubuntu/app/frontend/src/apis/comments.js":"73","/home/ubuntu/app/frontend/src/components/Forms/Content.jsx":"74","/home/ubuntu/app/frontend/src/apis/notifications.js":"75","/home/ubuntu/app/frontend/src/reducer/PostReducer.jsx":"76","/home/ubuntu/app/frontend/src/components/Forms/Email.jsx":"77","/home/ubuntu/app/frontend/src/components/Forms/RememberMe.jsx":"78","/home/ubuntu/app/frontend/src/components/Forms/IdealSleepingHours.jsx":"79","/home/ubuntu/app/frontend/src/components/Forms/PasswordConfirmation.jsx":"80","/home/ubuntu/app/frontend/src/components/Forms/Name.jsx":"81","/home/ubuntu/app/frontend/src/components/Forms/Feeling.jsx":"82","/home/ubuntu/app/frontend/src/components/Forms/SleepingHours.jsx":"83","/home/ubuntu/app/frontend/src/components/Forms/Date.jsx":"84","/home/ubuntu/app/frontend/src/reducer/RecordReducer.jsx":"85","/home/ubuntu/app/frontend/src/components/Dialogs/DiaryDialog.jsx":"86","/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx":"87","/home/ubuntu/app/frontend/src/components/UserInfomation/UserInfo.jsx":"88","/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx":"89","/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx":"90","/home/ubuntu/app/frontend/src/components/Forms/Profile.jsx":"91","/home/ubuntu/app/frontend/src/styled/theme.jsx":"92","/home/ubuntu/app/frontend/src/containers/Navigations/Sidebar.jsx":"93","/home/ubuntu/app/frontend/src/components/Buttons/PostButton.jsx":"94","/home/ubuntu/app/frontend/src/components/Buttons/RecordButton.jsx":"95","/home/ubuntu/app/frontend/src/components/Buttons/NotificationButton.jsx":"96","/home/ubuntu/app/frontend/src/components/Lists/BookRecommend.jsx":"97","/home/ubuntu/app/frontend/src/components/Buttons/RecommendButton.jsx":"98","/home/ubuntu/app/frontend/src/apis/recommends.js":"99","/home/ubuntu/app/frontend/src/components/Links/LogoLink.jsx":"100","/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx":"101","/home/ubuntu/app/frontend/src/reducer/RankingReducer.jsx":"102","/home/ubuntu/app/frontend/src/apis/rankings.js":"103","/home/ubuntu/app/frontend/src/components/Lists/RankUser.jsx":"104","/home/ubuntu/app/frontend/src/components/Lists/RankBook.jsx":"105","/home/ubuntu/app/frontend/src/components/Buttons/NotRecommendButton.jsx":"106","/home/ubuntu/app/frontend/src/components/Lists/TalkUser.jsx":"107","/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx":"108","/home/ubuntu/app/frontend/src/apis/image.js":"109","/home/ubuntu/app/frontend/src/components/Items/NotificationComment.jsx":"110","/home/ubuntu/app/frontend/src/components/Items/NotificationEntry.jsx":"111","/home/ubuntu/app/frontend/src/components/Items/NotificationFollow.jsx":"112","/home/ubuntu/app/frontend/src/components/Items/NotificationLike.jsx":"113","/home/ubuntu/app/frontend/src/components/Items/HomeMessage.jsx":"114","/home/ubuntu/app/frontend/src/components/Buttons/ProfileImageButton.jsx":"115","/home/ubuntu/app/frontend/src/containers/Pages/AccountActivation.jsx":"116","/home/ubuntu/app/frontend/src/apis/accountActivations.js":"117"},{"size":500,"mtime":1632537914103,"results":"118","hashOfConfig":"119"},{"size":362,"mtime":1632537914103,"results":"120","hashOfConfig":"119"},{"size":1459,"mtime":1639190884552,"results":"121","hashOfConfig":"119"},{"size":1052,"mtime":1639116285583,"results":"122","hashOfConfig":"119"},{"size":2400,"mtime":1639189915043,"results":"123","hashOfConfig":"119"},{"size":6114,"mtime":1640588162938,"results":"124","hashOfConfig":"119"},{"size":4190,"mtime":1640588429061,"results":"125","hashOfConfig":"119"},{"size":3038,"mtime":1639116285631,"results":"126","hashOfConfig":"119"},{"size":5230,"mtime":1640255817495,"results":"127","hashOfConfig":"119"},{"size":3678,"mtime":1639116285631,"results":"128","hashOfConfig":"119"},{"size":3638,"mtime":1640473180975,"results":"129","hashOfConfig":"119"},{"size":2732,"mtime":1639357371093,"results":"130","hashOfConfig":"119"},{"size":6941,"mtime":1639706799716,"results":"131","hashOfConfig":"119"},{"size":2669,"mtime":1640587739768,"results":"132","hashOfConfig":"119"},{"size":5322,"mtime":1639116285635,"results":"133","hashOfConfig":"119"},{"size":2293,"mtime":1639116285639,"results":"134","hashOfConfig":"119"},{"size":1961,"mtime":1639116285639,"results":"135","hashOfConfig":"119"},{"size":5471,"mtime":1639441544990,"results":"136","hashOfConfig":"119"},{"size":2682,"mtime":1639116285639,"results":"137","hashOfConfig":"119"},{"size":905,"mtime":1639441917544,"results":"138","hashOfConfig":"119"},{"size":904,"mtime":1639116285611,"results":"139","hashOfConfig":"119"},{"size":904,"mtime":1639116285611,"results":"140","hashOfConfig":"119"},{"size":924,"mtime":1639441979527,"results":"141","hashOfConfig":"119"},{"size":1353,"mtime":1639116285615,"results":"142","hashOfConfig":"119"},{"size":807,"mtime":1639116285615,"results":"143","hashOfConfig":"119"},{"size":930,"mtime":1639116285615,"results":"144","hashOfConfig":"119"},{"size":883,"mtime":1639116285615,"results":"145","hashOfConfig":"119"},{"size":1957,"mtime":1639116285575,"results":"146","hashOfConfig":"119"},{"size":4818,"mtime":1640414110668,"results":"147","hashOfConfig":"119"},{"size":1573,"mtime":1639116285575,"results":"148","hashOfConfig":"119"},{"size":1071,"mtime":1639116285583,"results":"149","hashOfConfig":"119"},{"size":854,"mtime":1640590757148,"results":"150","hashOfConfig":"119"},{"size":1300,"mtime":1639353818070,"results":"151","hashOfConfig":"119"},{"size":707,"mtime":1639116285643,"results":"152","hashOfConfig":"119"},{"size":621,"mtime":1639116285627,"results":"153","hashOfConfig":"119"},{"size":530,"mtime":1639116285647,"results":"154","hashOfConfig":"119"},{"size":528,"mtime":1639116285643,"results":"155","hashOfConfig":"119"},{"size":1059,"mtime":1639116285639,"results":"156","hashOfConfig":"119"},{"size":652,"mtime":1639116285647,"results":"157","hashOfConfig":"119"},{"size":435,"mtime":1639116285647,"results":"158","hashOfConfig":"119"},{"size":1869,"mtime":1639833441204,"results":"159","hashOfConfig":"119"},{"size":734,"mtime":1639832314743,"results":"160","hashOfConfig":"119"},{"size":2054,"mtime":1639708609601,"results":"161","hashOfConfig":"119"},{"size":1658,"mtime":1639116285627,"results":"162","hashOfConfig":"119"},{"size":1734,"mtime":1640254457758,"results":"163","hashOfConfig":"119"},{"size":3483,"mtime":1640254414767,"results":"164","hashOfConfig":"119"},{"size":2477,"mtime":1640253844360,"results":"165","hashOfConfig":"119"},{"size":3488,"mtime":1640414518418,"results":"166","hashOfConfig":"119"},{"size":2791,"mtime":1640480881688,"results":"167","hashOfConfig":"119"},{"size":1595,"mtime":1640590648238,"results":"168","hashOfConfig":"119"},{"size":1829,"mtime":1640253635426,"results":"169","hashOfConfig":"119"},{"size":1068,"mtime":1639116285591,"results":"170","hashOfConfig":"119"},{"size":1721,"mtime":1640263234490,"results":"171","hashOfConfig":"119"},{"size":1655,"mtime":1639116285623,"results":"172","hashOfConfig":"119"},{"size":752,"mtime":1639116285619,"results":"173","hashOfConfig":"119"},{"size":1346,"mtime":1639116285619,"results":"174","hashOfConfig":"119"},{"size":3726,"mtime":1639354076177,"results":"175","hashOfConfig":"119"},{"size":600,"mtime":1639116285627,"results":"176","hashOfConfig":"119"},{"size":1636,"mtime":1639833157213,"results":"177","hashOfConfig":"119"},{"size":891,"mtime":1639116285607,"results":"178","hashOfConfig":"119"},{"size":637,"mtime":1639116285603,"results":"179","hashOfConfig":"119"},{"size":4547,"mtime":1640252386378,"results":"180","hashOfConfig":"119"},{"size":493,"mtime":1639116285579,"results":"181","hashOfConfig":"119"},{"size":1128,"mtime":1639116285579,"results":"182","hashOfConfig":"119"},{"size":1003,"mtime":1639116285583,"results":"183","hashOfConfig":"119"},{"size":1148,"mtime":1639116285587,"results":"184","hashOfConfig":"119"},{"size":1656,"mtime":1639833357388,"results":"185","hashOfConfig":"119"},{"size":968,"mtime":1639181955042,"results":"186","hashOfConfig":"119"},{"size":904,"mtime":1639116285643,"results":"187","hashOfConfig":"119"},{"size":841,"mtime":1639116285575,"results":"188","hashOfConfig":"119"},{"size":713,"mtime":1639116285583,"results":"189","hashOfConfig":"119"},{"size":1390,"mtime":1637063039689,"results":"190","hashOfConfig":"119"},{"size":837,"mtime":1639116285575,"results":"191","hashOfConfig":"119"},{"size":703,"mtime":1639116285599,"results":"192","hashOfConfig":"119"},{"size":1088,"mtime":1639116285579,"results":"193","hashOfConfig":"119"},{"size":938,"mtime":1639116285647,"results":"194","hashOfConfig":"119"},{"size":619,"mtime":1639116285599,"results":"195","hashOfConfig":"119"},{"size":530,"mtime":1635984981722,"results":"196","hashOfConfig":"119"},{"size":652,"mtime":1639116285603,"results":"197","hashOfConfig":"119"},{"size":692,"mtime":1639116285603,"results":"198","hashOfConfig":"119"},{"size":615,"mtime":1639116285603,"results":"199","hashOfConfig":"119"},{"size":911,"mtime":1639116285603,"results":"200","hashOfConfig":"119"},{"size":660,"mtime":1639116285607,"results":"201","hashOfConfig":"119"},{"size":591,"mtime":1639116285599,"results":"202","hashOfConfig":"119"},{"size":1337,"mtime":1639116285647,"results":"203","hashOfConfig":"119"},{"size":2843,"mtime":1640254761190,"results":"204","hashOfConfig":"119"},{"size":3486,"mtime":1639444997453,"results":"205","hashOfConfig":"119"},{"size":3712,"mtime":1640395100833,"results":"206","hashOfConfig":"119"},{"size":1096,"mtime":1639116285647,"results":"207","hashOfConfig":"119"},{"size":4340,"mtime":1639116285595,"results":"208","hashOfConfig":"119"},{"size":688,"mtime":1639116285607,"results":"209","hashOfConfig":"119"},{"size":294,"mtime":1639833083878,"results":"210","hashOfConfig":"119"},{"size":3438,"mtime":1639442391320,"results":"211","hashOfConfig":"119"},{"size":436,"mtime":1639116285587,"results":"212","hashOfConfig":"119"},{"size":438,"mtime":1639116285591,"results":"213","hashOfConfig":"119"},{"size":878,"mtime":1639116285587,"results":"214","hashOfConfig":"119"},{"size":2469,"mtime":1639116285619,"results":"215","hashOfConfig":"119"},{"size":1040,"mtime":1639833347136,"results":"216","hashOfConfig":"119"},{"size":793,"mtime":1639116285579,"results":"217","hashOfConfig":"119"},{"size":550,"mtime":1639116285615,"results":"218","hashOfConfig":"119"},{"size":6272,"mtime":1639116285639,"results":"219","hashOfConfig":"119"},{"size":894,"mtime":1639116285647,"results":"220","hashOfConfig":"119"},{"size":1394,"mtime":1639116285579,"results":"221","hashOfConfig":"119"},{"size":1700,"mtime":1639116285623,"results":"222","hashOfConfig":"119"},{"size":1843,"mtime":1639116285623,"results":"223","hashOfConfig":"119"},{"size":1058,"mtime":1639116285587,"results":"224","hashOfConfig":"119"},{"size":2267,"mtime":1639116285623,"results":"225","hashOfConfig":"119"},{"size":3058,"mtime":1639354239111,"results":"226","hashOfConfig":"119"},{"size":1808,"mtime":1640394090041,"results":"227","hashOfConfig":"119"},{"size":866,"mtime":1639353820210,"results":"228","hashOfConfig":"119"},{"size":875,"mtime":1639352815051,"results":"229","hashOfConfig":"119"},{"size":627,"mtime":1639352815051,"results":"230","hashOfConfig":"119"},{"size":860,"mtime":1639353820922,"results":"231","hashOfConfig":"119"},{"size":2109,"mtime":1640473951889,"results":"232","hashOfConfig":"119"},{"size":2899,"mtime":1640572608921,"results":"233","hashOfConfig":"119"},{"size":1055,"mtime":1640480894008,"results":"234","hashOfConfig":"119"},{"size":405,"mtime":1640480880416,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},"11xwpmh",{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"238"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"238"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"238"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"238"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"238"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"238"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"238"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"238"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"238"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"238"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"238"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"238"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"238"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"238"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"238"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},"/home/ubuntu/app/frontend/src/index.js",[],["486","487"],"/home/ubuntu/app/frontend/src/reportWebVitals.js",[],"/home/ubuntu/app/frontend/src/App.jsx",["488"],"import React, { useEffect, useReducer, createContext } from 'react';\nimport './App.css';\n// Style\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from './styled/theme'\nimport { ThemeProvider } from '@emotion/react';\n// Api\nimport { fetchLoggedIn } from './apis/sessions';\n// Reducer\nimport { authInitialState, authReducer } from './reducer/AuthReducer'\n// Container\nimport { Layout } from './containers/Layout';\n\n\nexport const AuthContext = createContext()\n\nexport default function App() {\n  const [authState, authDispatch] = useReducer(authReducer, authInitialState)\n\n  // ログイン状態を確認する\n  const loggedIn = () => {\n    fetchLoggedIn()\n      .then(data => {\n        if (data.logged_in && authState.loggedIn === false) {\n          authDispatch({\n            type: 'login',\n            payload: data.user,\n          })\n        } else if (!data.logged_in && authState.loggedIn === true) {\n          authDispatch({\n            type: 'logout',\n          })\n        }\n      });\n  }\n\n  useEffect(() => {\n    loggedIn();\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ authState, authDispatch }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={{\n          display: 'flex',\n          alignItems: \"flex-start\",\n          justifyContent: 'center',\n        }}>\n          <Layout />\n        </Box>\n      </ThemeProvider>\n    </AuthContext.Provider>\n  );\n}\n","/home/ubuntu/app/frontend/src/apis/sessions.js",[],"/home/ubuntu/app/frontend/src/reducer/AuthReducer.jsx",[],"/home/ubuntu/app/frontend/src/containers/Layout.jsx",["489","490"],"/home/ubuntu/app/frontend/src/urls/index.js",[],"/home/ubuntu/app/frontend/src/containers/Pages/Book.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx",["491"],"import React, { useContext, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from '@mui/material/Grid';\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchUserDiaries } from \"../../apis/users\";\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { recordReducer, recordInitialState } from '../../reducer/RecordReducer';\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { Calendar } from \"../../components/UserInfomation/Calendar\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\";\n// Dialog\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SleepData } from \"../../components/UserInfomation/SleepData\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'end',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 1000,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'button': {\n      background: '#0288d1',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const Diaries = ({ userId }) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  const [recordState, recordDispatch] = useReducer(recordReducer, recordInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n  // 日記情報を取得する\n  const fetchDiaries = () => {\n    recordDispatch({ type: 'fetching' });\n    fetchUserDiaries(userId)\n      .then(data => {\n        recordDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            user: data.user,\n            diaries: data.diaries,\n          }\n        });\n      });\n  }\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' });\n    fetchSleepDebt(userId)\n      .then(data => {\n        // 睡眠負債が返された場合\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        )\n        // 余剰睡眠が返された場合\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        )\n      })\n  }\n\n  useEffect(() => {\n    fetchDiaries();\n    SleepDebt();\n  }, [dialogState.record, dialogState.diary])\n\n\n  return (\n    <Box className={classes.root}>\n      {recordState.fetchState !== 'ok' ? <Loading /> :\n        <>\n          <Typography variant=\"h3\">\n            <Box sx={{ letterSpacing: 10, pb: 5 }}><b> ~ {recordState.user.name}の睡眠日記 ~ </b></Box>\n          </Typography>\n          <Grid container>\n            <Grid item xs={12} sm={6} sx={{\n              alignItems: \"center\",\n              justifyContent: 'center',\n              pt: 8\n            }}>\n              <SleepInfo\n                userName={recordState.user.name}\n                sleepDebt={sleepDebtState.sleepDebt}\n                sleepSaving={sleepDebtState.sleepSaving}\n              />\n              <Box>\n                {authState.loggedIn &&\n                  <Box display=\"flex\" justifyContent=\"space-evenly\">\n                    <Button\n                      className={classes.button}\n                      onClick={() => dialogDispatch({ type: 'record' })}\n                    >\n                      睡眠日記を書く\n                    </Button>\n                    <Button\n                      className={classes.button}\n                    >\n                      ツイッターに投稿する\n                    </Button>\n                  </Box>\n                }\n                <Typography variant=\"h6\">\n                  <Box sx={{ letterSpacing: 4, mt: 3 }}>【理想睡眠時間：<b>{recordState.user.ideal_sleeping_hours}時間】</b></Box>\n                </Typography>\n              </Box>\n            </Grid>\n\n            <Grid item sm={12} md={6} sx={{ pt: 2 }}>\n              <Calendar\n                userId={userId}\n                open={dialogState.diary}\n                handleClose={handleClose}\n                handleOpen={() => dialogDispatch({ type: 'diary' })}\n                recordState={recordState}\n                recordDispatch={recordDispatch}\n              />\n            </Grid>\n          </Grid>\n\n          <Box sx={{ py: 6, pl: 2 }}>\n            <SleepData\n              diaries={recordState.diaries}\n            />\n          </Box>\n        </>\n      }\n\n      <RecordDialog\n        handleClose={handleClose}\n        open={dialogState.record}\n      />\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx",["492"],"import React, { useState, useReducer, useEffect } from \"react\";\n// styles\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from '@mui/material/Typography';\n// Api\nimport { fetchFollowing } from \"../../apis/users\";\nimport { fetchFollowers } from \"../../apis/users\";\n// Reducer\nimport { followInitialState, followReducer } from '../../reducer/FollowReducer';\n// コンポーネント\nimport { FollowList } from '../../components/Lists/FollowList';\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      border: 1,\n      justifyContent: 'center',\n      maxWidth: 600,\n      textAlign: 'center',\n      width: '100%',\n    },\n    tabBox: {\n      background: '#001e3c',\n      borderBottom: 1,\n      borderColor: 'divider',\n      '&:hover': {\n        color: '#fff',\n        fontWeight: 'bold',\n      },\n    }\n  }),\n);\n\nexport const Follow = ({\n  userId,\n  initialTab,\n}) => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(initialTab);\n  const [followState, followDispatch] = useReducer(followReducer, followInitialState);\n  // フォロー中のユーザーを取得する\n  const Following = () => {\n    fetchFollowing(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowing',\n          payload: {\n            following: data.following,\n            user: data.user,\n          },\n        });\n      });\n  }\n  // フォロワーを取得する\n  const Followers = () => {\n    fetchFollowers(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowers',\n          payload: {\n            followers: data.followers,\n            user: data.user,\n          },\n        });\n      });\n  }\n\n  useEffect(() => {\n    followDispatch({ type: 'fetching' });\n    tab === 'following'\n      ? Following()\n      : Followers()\n  }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\" sx={{ width: '100%' }}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}><b>{followState.user.name}</b></Box>\n      </Typography>\n      <TabContext value={tab}>\n        <Box>\n          <TabList\n            onChange={(event, newTab) => { setTab(newTab) }}\n            variant=\"fullWidth\"\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n          >\n            <Tab\n              label=\"フォロー中\"\n              value=\"following\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n            <Tab\n              label=\"フォロワー\"\n              value=\"followers\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n          </TabList>\n        </Box>\n        <TabPanel value=\"following\">\n          {\n            followState.fetchState !== 'ok' ? <Loading /> :\n              followState.following.map(followed =>\n                <FollowList\n                  user={followed.user}\n                  followStatus={followed.followStatus}\n                />\n              )\n          }\n        </TabPanel>\n        <TabPanel value=\"followers\">\n          {\n            followState.fetchState !== 'ok' ? <Loading /> :\n              followState.followers.map(follower =>\n                <FollowList\n                  user={follower.user}\n                  followStatus={follower.followStatus}\n                />\n              )\n          }\n        </TabPanel>\n      </TabContext>\n    </Box>\n\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx",["493"],"import React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\";\n// Api\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { HomeMessage } from \"../../components/Items/HomeMessage\";\n// Image\nimport MainImage from \"../../images/MainImage.png\";\n\n\nexport const Home = () => {\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' })\n    fetchSleepDebt(authState.loginUser.id)\n      .then(data => {\n        // 睡眠負債のケース\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        );\n        // 余剰睡眠のケース\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        );\n      });\n  }\n  // ログイン時のみ実行\n  useEffect(() => {\n    authState.loggedIn && SleepDebt();\n  }, [])\n\n  return (\n    <>\n      <Grid container sx={{\n        maxWidth: 1000,\n        alignItems: 'center',\n      }}>\n        {!authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}>\n            <HomeMessage\n              handleOpenLogin={() => dialogDispatch({ type: 'login' })}\n              handleOpenSignup={() => dialogDispatch({ type: 'signup' })}\n            />\n          </Grid>\n        }\n        {authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            alignItems: \"center\",\n            justifyContent: 'center',\n          }}>\n            <SleepInfo\n              userName={authState.loginUser.name}\n              sleepDebt={sleepDebtState.sleepDebt}\n              sleepSaving={sleepDebtState.sleepSaving}\n            />\n          </Grid>\n        }\n        <Grid item xs={12} sm={6} sx={{\n          alignItems: \"center\",\n          justifyContent: 'center',\n        }}>\n          <Box>\n            <img src={MainImage}\n              alt=\"main iamge\"\n              style={{ width: 600 }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n\n      <SignUpDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.signup}\n      />\n      <LogInDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        handlePasswordReset={() => dialogDispatch({ type: 'passwordReset' })}\n        open={dialogState.login}\n      />\n      <PasswordResetDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.passwordReset}\n      />\n      <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n    </>\n  );\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx",["494"],"import React, { useEffect, useReducer } from \"react\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@mui/material/List\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchMessages } from \"../../apis/rooms\"\n// Reducer\nimport { messageInitialState, messageReducer } from '../../reducer/MessageReducer';\n// Cpmponent\nimport { Chat } from \"../../components/Forms/Chat\";\nimport { Message } from \"../../components/Lists/Message\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      maxWidth: 600,\n      textAlign: 'center',\n      width: '100%',\n    },\n    'title': {\n      backgroundColor: '#001e3c',\n      top: 0,\n      paddingTop: 80,\n      position: 'fixed',\n      width: 600,\n      zIndex: 1,\n    },\n    'messages': {\n      display: 'flex',\n      flexDirection: 'column-reverse',\n      flexGrow: 1,\n      width: '100%',\n      height: '100%',\n      overflow: \"auto\",\n      marginBottom: 150,\n    }\n  }),\n);\n\nexport const MessageRoom = ({\n  roomId,\n  loginUser,\n}) => {\n  const classes = useStyles();\n  const [messageState, messageDispatch] = useReducer(messageReducer, messageInitialState)\n  // トークルームのメッセージ一覧を取得する\n  const Messages = () => {\n    fetchMessages(roomId)\n      .then(data => {\n        messageDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            messages: data.messages,\n            user: data.user,\n          }\n        });\n      });\n  }\n\n  useEffect(() => {\n    Messages();\n  }, [messageState.reRender])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h4\" className={classes.title}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}>\n          <b>{messageState.user.name}</b>\n        </Box>\n      </Typography>\n\n      {messageState.fetchState !== 'ok' ? <Loading /> :\n        <List className={classes.messages} id={\"scroll-area\"}>\n          {messageState.messages.length === 0 ? (\n            <ListItemText>\n              メッセージはありません。\n            </ListItemText>\n          ) : (\n            messageState.messages.map((message, index) =>\n              <Message\n                message={message}\n                loginUserId={loginUser.id}\n              />\n            )\n          )}\n        </List>\n      }\n      <Chat\n        user_id={loginUser.id}\n        room_id={roomId}\n        dataFetch={() => messageDispatch({ type: 'fetching' })}\n      />\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx",["495"],"import React, { useState, useEffect, useReducer } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport SearchIcon from '@mui/icons-material/Search';\n// Api\nimport { fetchUserBooks } from '../../apis/users';\nimport { fetchSearchBooks } from '../../apis/books';\nimport { deleteRecommend } from '../../apis/recommends'\n// Reducer\nimport { bookInitialState, bookReducer } from '../../reducer/BookReducer';\n// Component\nimport { BookCard } from '../../components/Lists/BookCard';\nimport { BookList } from '../../components/Lists/BookList';\nimport { BookRecommend } from '../../components/Lists/BookRecommend';\nimport { BookSearchButton } from '../../components/Buttons/BookSearchButton';\nimport { Search } from '../../components/Forms/Search';\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      maxWidth: 1000,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'search': {\n      alignItems: 'flex-start',\n      display: 'flex',\n      flexDirection: 'column',\n      marginTop: 20,\n      width: 400,\n    },\n    'recommend': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 20,\n      width: 550,\n    },\n    'list': {\n      background: '#334b63',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      width: 1000,\n    },\n    'card': {\n      background: '#334b63',\n      display: 'flex',\n      flexDirection: 'column',\n      width: 250,\n      height: 385,\n      padding: 15,\n    },\n  }),\n);\n\nexport const Mybooks = ({\n  userId,\n}) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [tab, setTab] = useState('read');\n  const [bookState, bookDispatch] = useReducer(bookReducer, bookInitialState);\n  const tabLabelRead = `読了 : ${bookState.readBooks.length} 冊`\n  const tabLabelStack = `積読 : ${bookState.stackBooks.length} 冊`\n  // ユーザーの登録本を取得する\n  const myBooks = () => {\n    fetchUserBooks(userId)\n      .then(data => {\n        bookDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            user: data.user,\n            recommendBook: data.recommend_book,\n            readBooks: data.read_books,\n            stackBooks: data.stack_books,\n          }\n        });\n      });\n  }\n  // 検索したキーワードに該当本を取得する\n  const searchBooks = () => {\n    bookDispatch({ type: 'posting' });\n    fetchSearchBooks({ keyword: keyword })\n      .then(data => {\n        data && bookDispatch({\n          type: 'postSuccess',\n          payload: data.books,\n        });\n        !data && alert('書籍名を入力してください。')\n      });\n  }\n  // おすすめ本を解除する\n  const NotRecommend = (bookId) => {\n    deleteRecommend(bookId)\n      .then(() => {\n        bookDispatch({ type: 'reRender', });\n      })\n  }\n\n  useEffect(() => {\n    myBooks();\n  }, [tab, bookState.reRender])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\" sx={{ width: '100%' }}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}><b> ~ {bookState.user.name}の睡眠本棚 ~</b></Box>\n      </Typography>\n\n      <Box className={classes.search}>\n        <Box>\n          <SearchIcon sx={{ fontSize: 20, mr: 1 }} />\n          <Typography variant=\"subtitle\">\n            睡眠本の検索はこちらから\n          </Typography>\n        </Box>\n        <Search\n          keyword={keyword}\n          handleChange={e => setKeyword(e.target.value)}\n        />\n        <BookSearchButton\n          handleSubmit={searchBooks}\n        />\n        {bookState.searchBooks.length !== 0 &&\n          <Typography variant=\"h6\">\n            検索結果 : {bookState.searchBooks.length} 件\n          </Typography>\n        }\n      </Box>\n\n      <Box className={classes.recommend}>\n        {/* {bookState.recommendBook === null ?\n          <h2>お気に入りの睡眠本を登録しましょう</h2>\n          : */}\n        <BookRecommend\n          book={bookState.recommendBook}\n          NotRecommend={NotRecommend}\n        />\n        {/* } */}\n      </Box>\n\n      {bookState.fetchState !== 'ok' ? <Loading /> :\n\n        <>\n          {bookState.searchBooks.length !== 0 &&\n            <Box className={classes.list}>\n              {bookState.searchBooks.map(book =>\n                <Box\n                  className={classes.card}\n                  key={book.params.isbn.toString()}\n                >\n                  <BookCard book={book.params} />\n                </Box>\n              )}\n            </Box>\n          }\n\n          {bookState.searchBooks.length === 0 &&\n            <>\n              <TabContext value={tab}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                  <TabList\n                    onChange={(event, newTab) => { setTab(newTab) }}\n                    variant=\"fullWidth\"\n                  >\n                    <Tab\n                      label={tabLabelRead}\n                      value=\"read\"\n                      sx={{ typography: 'h6', fontWeight: 'bold' }}\n                    />\n                    <Tab\n                      label={tabLabelStack}\n                      value=\"stack\"\n                      sx={{ typography: 'h6', fontWeight: 'bold' }}\n                    />\n                  </TabList>\n                </Box>\n                <TabPanel value=\"read\">\n                  {bookState.readBooks.length === 0 ? (\n                    <Box sx={{ width: 1000 }}>\n                      <h2>読了した本はありません。</h2>\n                      <h2>睡眠本を読んで快適な睡眠生活を送ってみませんか？</h2>\n                    </Box>\n                  ) : (\n                    <Box className={classes.list}>\n                      <BookList books={bookState.readBooks} />\n                    </Box>\n\n                  )}\n                </TabPanel>\n                <TabPanel value=\"stack\">\n                  {bookState.stackBooks.length === 0 ? (\n                    <Box sx={{ width: 1000 }}>\n                      <h2>積んでいる本はありません。</h2>\n                      <h2>読んでみたい睡眠本を検索し、ポチりましょう。</h2>\n                    </Box>\n                  ) : (\n                    <Box className={classes.list}>\n                      <BookList books={bookState.stackBooks} />\n                    </Box>\n                  )}\n                </TabPanel>\n              </TabContext>\n            </>\n          }\n        </>\n      }\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx",["496","497"],"import React, { useContext, useState, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport List from \"@mui/material/List\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\n//Icon\nimport CommentIcon from '@mui/icons-material/Comment';\nimport NotesIcon from '@mui/icons-material/Notes';\n// Api\nimport { fetchUser, fetchMicroposts } from \"../../apis/users\";\n// Reducer\nimport { profileReducer, profileInitialState } from '../../reducer/ProfileReducer';\n// Component\nimport { Comment } from \"../../components/Lists/Comment\";\nimport { Loading } from \"../../components/Loading\"\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      maxWidth: 800,\n      mx: 'auto',\n      width: '100%',\n    },\n    'tabBox': {\n      background: '#001e3c',\n      borderBottom: 1,\n      borderColor: 'divider',\n      '&:hover': {\n        color: '#fff',\n        fontWeight: 'bold',\n      }\n    }\n  }),\n);\n\nexport const Profile = ({\n  userId,\n}) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState('microposts');\n  const [open, setOpen] = useState(false);\n\n  // ユーザー情報の取得\n  const userInformation = () => {\n    fetchUser(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessProfile',\n          payload: {\n            user: data.user,\n            followingIds: data.following_ids,\n            followersIds: data.followers_ids,\n            followStatus: data.followStatus,\n            subscriptions: data.subscriptions,\n          }\n        })\n      });\n  }\n  // マイクロポスト情報の取得 \n  const userMicropost = () => {\n    fetchMicroposts(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessMicropost',\n          payload: {\n            microposts: data.microposts,\n            likedMicroposts: data.liked_microposts,\n            comments: data.comments,\n          }\n        })\n      });\n  }\n\n  useEffect(() => { userInformation() }, [open])\n  useEffect(() => { userMicropost() }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <UserInfo\n        open={open}\n        setOpen={setOpen}\n        loginUser={authState.loginUser}\n        profileState={profileState}\n      />\n      <Box>\n        <TabContext value={tab}>\n          <Box >\n            <TabList\n              onChange={(event, newTab) => setTab(newTab)}\n              variant=\"fullWidth\"\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n            >\n              <Tab\n                icon={<NotesIcon />}\n                iconPosition=\"start\"\n                label=\"つぶやき\"\n                value=\"microposts\"\n              />\n              <Tab\n                icon={<FavoriteIcon />}\n                iconPosition=\"start\"\n                label=\"いいね\"\n                value=\"liked_microposts\"\n              />\n              <Tab\n                icon={<CommentIcon />}\n                iconPosition=\"start\"\n                label=\"コメント\"\n                value=\"comments\"\n              />\n            </TabList>\n          </Box>\n          <TabPanel value=\"microposts\" index={0}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.microposts.map(micropost =>\n                    <Micropost\n                      commentCount={micropost.commentCount}\n                      likeStatus={micropost.likeStatus}\n                      micropost={micropost.micropost}\n                      user={profileState.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n          <TabPanel value=\"liked_microposts\" index={1}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.likedMicroposts.map(micropost =>\n                    <Micropost\n                      commentCount={micropost.commentCount}\n                      likeStatus={micropost.likeStatus}\n                      micropost={micropost.liked_micropost}\n                      user={micropost.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n          <TabPanel value=\"comments\" index={2}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.comments.map(comment =>\n                    <Comment\n                      comment={comment}\n                      user={profileState.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx",["498"],"import React, { useEffect, useReducer, useState } from \"react\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchRooms } from \"../../apis/users\";\nimport { deleteRoom } from \"../../apis/rooms\";\n// Reducer\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\n// Component\nimport { Loading } from '../../components/Loading';\nimport { DeleteDialog } from \"../../components/Dialogs/DeleteDialog\";\nimport { TalkUser } from \"../../components/Lists/TalkUser\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 600,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'list': {\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: 2,\n      my: 3,\n    }\n  }),\n);\n\nexport const Rooms = ({ userId }) => {\n  const classes = useStyles();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState);\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    roomId: '',\n  });\n  // トークルームの一覧を取得する\n  const Rooms = () => {\n    fetchRooms(userId)\n      .then(data => {\n        roomDispatch({\n          type: 'fetchSuccess',\n          payload: data.entries,\n        });\n      });\n  }\n  // トークルームを削除する\n  const handleDelete = () => {\n    deleteRoom(open.roomId)\n      .then(() => setOpen({ isOpen: false }));\n  }\n\n  useEffect(() => {\n    Rooms();\n  }, [open.isOpen])\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Typography variant=\"h3\">\n          <Box sx={{ letterSpacing: 10, pb: 2 }}><b>トークルーム</b></Box>\n        </Typography>\n\n        {roomState.fetchState !== 'ok' ? <Loading /> :\n          <TalkUser\n            entries={roomState.entries}\n            setOpen={setOpen}\n          />\n        }\n      </Box>\n\n      <DeleteDialog\n        handleClose={() => setOpen({ isOpen: false })}\n        handleDelete={handleDelete}\n        message={'トークルームを削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Timeline.jsx",["499"],"import React, { useEffect, useReducer } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchTimeline } from \"../../apis/users\";\n// Reducer\nimport { timelineInitialState, timelineReducer } from '../../reducer/TimelineReducer';\n// Cpmponent\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 800,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    }\n  }),\n);\n\nexport const Timeline = ({\n  userId,\n  loginUser,\n}) => {\n  const classes = useStyles();\n  const [timelineState, timelineDispatch] = useReducer(timelineReducer, timelineInitialState);\n\n  // 投稿一覧を取得する\n  const Timeline = () => {\n    fetchTimeline(userId)\n      .then(data => {\n        timelineDispatch({\n          type: 'fetchSuccess',\n          payload: { timeline: data.timeline }\n        })\n      })\n  }\n\n  useEffect(() => {\n    Timeline()\n  }, [timelineState.reRender])\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Typography variant=\"h3\">\n          <Box sx={{ letterSpacing: 10, pb: 5 }}><b>タイムライン</b></Box>\n        </Typography>\n        <Box>\n          {\n            timelineState.fetchState !== 'ok' ? <Loading /> :\n              timelineState.timeline.map(timeline =>\n                <Micropost\n                  commentCount={timeline.commentCount}\n                  likeStatus={timeline.likeStatus}\n                  loginUser={loginUser}\n                  micropost={timeline.micropost}\n                  user={timeline.user}\n                />\n              )\n          }\n        </Box>\n      </Box>\n    </>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Users.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/AvatarLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/DiariesLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/FollowsLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/BooksLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/RoomsLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/HomeLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/TimelineLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/RankingLink.jsx",[],"/home/ubuntu/app/frontend/src/apis/books.js",[],"/home/ubuntu/app/frontend/src/apis/users.js",[],"/home/ubuntu/app/frontend/src/apis/diaries.js",[],"/home/ubuntu/app/frontend/src/apis/rooms.js",[],"/home/ubuntu/app/frontend/src/apis/passwordResets.js",[],"/home/ubuntu/app/frontend/src/reducer/DialogReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/FollowReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Loading.jsx",[],"/home/ubuntu/app/frontend/src/reducer/SleepDebtReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/MessageReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/BookReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/TimelineReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RoomReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/BookSearchButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/AccountButton.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/SleepInfo.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/SleepData.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/RecordDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx",["500"],"import React, { useContext } from 'react';\nimport { AuthContext } from \"../../App\";\n// styles\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n// Api\nimport { postSignUp } from '../../apis/users';\n// Component\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { RememberMe } from '../Forms/RememberMe';\nimport { IdealSleepingHours } from '../Forms/IdealSleepingHours';\n\nexport const SignUpDialog = ({\n  handleClose,\n  open,\n}) => {\n  const { authState, authDispatch } = useContext(AuthContext);\n\n  const handleLogin = (data) => {\n    authDispatch({\n      type: 'login',\n      payload: data.user,\n    })\n  }\n\n  const submitSignup = () => {\n    postSignUp({\n      name: authState.name,\n      email: authState.email,\n      password: authState.password,\n      password_confirmation: authState.passwordConfirmation,\n      idealSleepingHours: authState.idealSleepingHours,\n      remember_me: authState.remenberMe,\n    }).then(data => {\n      alert(data.message)\n      handleClose()\n    }).catch(() => {\n      alert('登録失敗')\n    })\n  }\n\n  // 新規登録ダイアログの内容を返す\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        新規登録\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し「登録する」を押してください。\n        </DialogContentText>\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: e.target.value,\n            })\n          }\n        />\n        <IdealSleepingHours\n          idealSleepingHours={authState.idealSleepingHours}\n          handleChange={e =>\n            authDispatch({\n              type: 'idealSleepingHours',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: e.target.value,\n            })\n          }\n        />\n        <RememberMe\n          remenberMe={authState.remenberMe}\n          handleChange={e =>\n            authDispatch({\n              type: 'rememberMe',\n              payload: (e.target.value)\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n        <Button onClick={submitSignup} type='submit'>\n          登録する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/ubuntu/app/frontend/src/components/Dialogs/LogInDialog.jsx",["501"],"import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from \"../../App\";\n// Style\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Link from '@mui/material/Link';\n// Api\nimport { postLogIn } from '../../apis/sessions';\n// Components\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { RememberMe } from '../Forms/RememberMe';\n\nexport const LogInDialog = ({\n  handleClose,\n  handlePasswordReset,\n  open,\n}) => {\n  const history = useHistory();\n  const { authState, authDispatch } = useContext(AuthContext);\n\n  const handleLogin = (data) => {\n    authDispatch({\n      type: 'login',\n      payload: data.user,\n    })\n  }\n\n  const submitLogin = () => {\n    postLogIn({\n      email: authState.email,\n      password: authState.password,\n      remember_me: authState.remenberMe,\n    }).then(data => {\n      handleLogin(data);\n      handleClose();\n    }).catch(() => {\n      alert('ログイン失敗');\n      handleClose();\n    })\n  }\n\n  // ログインのダイアログを返す\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        ログイン画面\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          下記項目を入力し、ログインください。\n        </DialogContentText>\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <RememberMe\n          remenberMe={authState.remenberMe}\n          handleChange={e =>\n            authDispatch({\n              type: 'rememberMe',\n              payload: (e.target.value)\n            })\n          }\n        />\n        <Link\n          component=\"div\"\n          variant=\"body2\"\n          onClick={() => handlePasswordReset()}\n        >\n          パスワードを忘れてしまった方はこちら\n        </Link>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()}>\n          閉じる\n        </Button>\n        <Button onClick={submitLogin} type='submit'>\n          ログインする\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/ubuntu/app/frontend/src/components/Dialogs/PasswordResetDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/TweetDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/DeleteDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/FollowList.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Message.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookList.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookCard.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx",[],"/home/ubuntu/app/frontend/src/components/Snackbars/Snackbar.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Search.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Password.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/messages.js",[],"/home/ubuntu/app/frontend/src/apis/microposts.js",[],"/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/LikeButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RoomButton.jsx",[],"/home/ubuntu/app/frontend/src/reducer/NotificationReducer.jsx",[],"/home/ubuntu/app/frontend/src/apis/likes.js",[],"/home/ubuntu/app/frontend/src/apis/relationships.js",[],"/home/ubuntu/app/frontend/src/components/Dialogs/CommentDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/comments.js",[],"/home/ubuntu/app/frontend/src/components/Forms/Content.jsx",[],"/home/ubuntu/app/frontend/src/apis/notifications.js",[],"/home/ubuntu/app/frontend/src/reducer/PostReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Email.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/RememberMe.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/IdealSleepingHours.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/PasswordConfirmation.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Name.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Feeling.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/SleepingHours.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Date.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RecordReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/DiaryDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/UserInfo.jsx",[],"/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx",["502"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { patchUpdate } from '../../apis/users';\n// Component\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { IdealSleepingHours } from '../Forms/IdealSleepingHours';\nimport { Profile } from '../Forms/Profile';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'button': {\n      border: 0,\n      borderRadius: 3,\n      color: '#90caf9',\n      height: 30,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const SettingDialog = ({\n  handleClose,\n  open,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { authState, authDispatch } = useContext(AuthContext)\n  // 送信のCallback関数\n  const submitUpdate = () => {\n    patchUpdate({\n      user_id: authState.loginUser.id,\n      name: authState.name,\n      email: authState.email,\n      password: authState.password,\n      password_confirmation: authState.passwordConfirmation,\n      idealSleepingHours: authState.idealSleepingHours,\n      profile: authState.profile,\n    }).then(data => {\n      alert('ユーザー情報を更新しました')\n      handleClose()\n      history.push(`/users/${authState.loginUser.id}`)\n    })\n  }\n\n  useEffect(() => {\n    authDispatch({\n      type: 'preUpdate',\n      payload: {\n        name: authState.loginUser.name,\n        email: authState.loginUser.email,\n        password: authState.loginUser.password,\n        passwordConfirmation: authState.loginUser.passwordConfirmation,\n        idealSleepingHours: authState.loginUser.ideal_sleeping_hours,\n        profile: authState.loginUser.profile,\n      }\n    });\n  }, [open])\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        <Typography variant=\"h5\">\n          <Box sx={{ letterSpacing: 3, pt: 2 }}><b>プロフィール編集</b></Box>\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: e.target.value,\n            })\n          }\n        />\n        <IdealSleepingHours\n          idealSleepingHours={authState.idealSleepingHours}\n          handleChange={e =>\n            authDispatch({\n              type: 'idealSleepingHours',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Profile\n          profile={authState.profile}\n          handleChange={e =>\n            authDispatch({\n              type: 'profile',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: e.target.value,\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          onClick={() => handleClose()}\n        >\n          閉じる\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={submitUpdate}\n          type='submit'\n        >\n          更新する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/ubuntu/app/frontend/src/components/Forms/Profile.jsx",[],"/home/ubuntu/app/frontend/src/styled/theme.jsx",[],"/home/ubuntu/app/frontend/src/containers/Navigations/Sidebar.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/PostButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RecordButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/NotificationButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookRecommend.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RecommendButton.jsx",[],"/home/ubuntu/app/frontend/src/apis/recommends.js",[],"/home/ubuntu/app/frontend/src/components/Links/LogoLink.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RankingReducer.jsx",[],"/home/ubuntu/app/frontend/src/apis/rankings.js",[],"/home/ubuntu/app/frontend/src/components/Lists/RankUser.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/RankBook.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/NotRecommendButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/TalkUser.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/image.js",["503"],"import axios from \"axios\";\nimport { presignedObject, avatar, micropost } from \"../urls\";\n\n// 署名URLを取得するするapi\n// export const fetchPresigned = (fileName) => {\n//   return axios.get(presignedObject(fileName), { withCredentials: true })\n//     .then(res => {\n//       console.log('images#presigned_object', res);\n//       return res.data;\n//     })\n//     .catch(error => {\n//       console.log('images#presigned_object', error);\n//     });\n// }\n\n// // S3にアップロードするapi\n// export const putS3 = (params) => {\n//   console.log(params)\n//   // return axios.post(params.presignedObjectUrl,\n//   //   params.formData,\n//   //   { headers: { 'accept': 'multipart/form-data' } }\n//   // )\n//   return fetch(params.presignedObjectUrl, {\n//     method: 'POST',\n//     headers: {\n//       \"accept\": \"multipart/form-data\",\n//       // 'Content-Type': params.fileType\n//     },\n//     body: params.formData,\n//   })\n//     .then(res => {\n//       console.log('S3', res);\n//       return res.data;\n//     })\n//     .catch(error => {\n//       console.log('S3', error);\n//     })\n// }\n\n// Avatar画像を登録するapi\nexport const postAvatarImage = (params) => {\n  return axios.post(avatar, {\n    avatarUrl: params.avatarUrl\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('images#avatar', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('images#avatar', error);\n    })\n}\n\n// 投稿画像を登録するapi\nexport const postMicropostImage = (params) => {\n  return axios.post(micropost, {\n    micropostUrl: params.micropostUrl\n  }, {\n    withCredentials: true\n  })\n    .then(res => {\n      console.log('images#micropost', res);\n      return res.data;\n    })\n    .catch(error => {\n      console.log('images#micropost', error);\n    })\n}\n\n","/home/ubuntu/app/frontend/src/components/Items/NotificationComment.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationEntry.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationFollow.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationLike.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/HomeMessage.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/ProfileImageButton.jsx",["504","505","506","507"],"import React, { useRef, useState } from \"react\";\nimport AWS from 'aws-sdk'\nimport axios from \"axios\";\n// Style\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// Icon\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n// Api\nimport { fetchPresigned, putS3, postAvatarImage } from \"../../apis/image\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    'button': {\n      borderRadius: 50,\n      height: '100%',\n      width: '100%',\n      padding: '1px',\n    }\n  }),\n);\n\n// AWS設定\nconst env = process.env\nconst S3_BUCKET = env.REACT_APP_AWS_BUCKET\nAWS.config.update({\n  accessKeyId: env.REACT_APP_AWS_ACCESS_KEY,\n  secretAccessKey: env.REACT_APP_AWS_SECRET_KEY\n})\nconst myBucket = new AWS.S3({\n  params: { Bucket: S3_BUCKET },\n  region: env.REACT_APP_AWS_REGION,\n})\n\nexport const ProfileImageButton = () => {\n  const classes = useStyles();\n  const inputRef = useRef(null);\n  const [file, setFile] = useState(null);\n  const [fileUri, setFileUri] = useState('#');\n  // 画像ファイルの選択\n  const handleChange = (e) => {\n    const selectedFile = e.target.files[0]\n    setFile(selectedFile)\n    setFileUri(URL.createObjectURL(selectedFile));\n    console.log(selectedFile);\n  }\n  // 画像ファイルのアップロード\n  const handleUpload = (file) => {\n    const params = {\n      ACL: 'public-read',\n      Body: file,\n      Bucket: S3_BUCKET,\n      CacheControl: \"no-cache\",\n      ContentType: file.type,\n      Expires: 60,\n      Key: `avatar/${file.name}`\n    }\n    console.log(params)\n\n    return new Promise((resolve, reject) => {\n      myBucket.getSignedUrl('putObject', params, (err, url) => {\n        if (err) { reject(err); }\n        resolve(url);\n        console.log(url)\n        return axios.put(url, file, { headers: { 'Content-Type': file.type } })\n          .then(res => console.log(res))\n      })\n    })\n  }\n\n  return (\n    <Box className={classes.root}>\n      <Avatar sx={{\n        alignItems: 'center',\n        width: 150, height: 150,\n      }} >\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          component=\"span\"\n          onClick={() => inputRef.current.click()}\n        >\n          {fileUri === null\n            ? <AccountCircle sx={{ fontSize: 150 }} />\n            : <img src={fileUri} />\n          }\n        </Button>\n        <input\n          accept=\"image/*\"\n          hidden\n          type='file'\n          onChange={handleChange}\n          ref={inputRef}\n        />\n      </Avatar>\n\n      {file &&\n        <Button\n          onClick={() => handleUpload(file)}\n        >\n          画像アップロード\n        </Button>\n      }\n    </Box>\n  );\n};\n","/home/ubuntu/app/frontend/src/containers/Pages/AccountActivation.jsx",["508"],"import React, { useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\n//Api\nimport { fetchAccountActivation } from '../../apis/accountActivations';\n//Style\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nexport const AccountActivation = ({ activationToken }) => {\n  const history = useHistory();\n  // URLのクエリパラメータを取得\n  const search = useLocation().search;\n  const query = new URLSearchParams(search);\n  const queryEmail = query.get('email')\n  // アカウントを有効化する\n  const activation = () => {\n    fetchAccountActivation(activationToken, queryEmail)\n      .then(() => history.push('/'));\n  }\n\n  useEffect(() => activation(), [])\n\n  return (\n    <Typography variant=\"h4\" sx={{ width: '100%' }}>\n      <Box sx={{ letterSpacing: 6, pb: 2, mb: 4, borderBottom: 1 }}>\n        <b>アカウントを有効化しました</b>\n      </Box>\n      <Link to={`/`}>\n        アカウントページはこちら\n      </Link>\n    </Typography>\n  );\n}\n","/home/ubuntu/app/frontend/src/apis/accountActivations.js",[],{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","severity":1,"message":"514","line":40,"column":6,"nodeType":"515","endLine":40,"endColumn":8,"suggestions":"516"},{"ruleId":"517","severity":1,"message":"518","line":2,"column":40,"nodeType":"519","messageId":"520","endLine":2,"endColumn":48},{"ruleId":"513","severity":1,"message":"521","line":70,"column":6,"nodeType":"515","endLine":70,"endColumn":8,"suggestions":"522"},{"ruleId":"513","severity":1,"message":"523","line":93,"column":6,"nodeType":"515","endLine":93,"endColumn":45,"suggestions":"524"},{"ruleId":"513","severity":1,"message":"525","line":80,"column":6,"nodeType":"515","endLine":80,"endColumn":11,"suggestions":"526"},{"ruleId":"513","severity":1,"message":"527","line":51,"column":6,"nodeType":"515","endLine":51,"endColumn":8,"suggestions":"528"},{"ruleId":"513","severity":1,"message":"529","line":70,"column":6,"nodeType":"515","endLine":70,"endColumn":29,"suggestions":"530"},{"ruleId":"513","severity":1,"message":"531","line":114,"column":6,"nodeType":"515","endLine":114,"endColumn":31,"suggestions":"532"},{"ruleId":"513","severity":1,"message":"533","line":87,"column":42,"nodeType":"515","endLine":87,"endColumn":48,"suggestions":"534"},{"ruleId":"513","severity":1,"message":"535","line":88,"column":40,"nodeType":"515","endLine":88,"endColumn":45,"suggestions":"536"},{"ruleId":"513","severity":1,"message":"537","line":63,"column":6,"nodeType":"515","endLine":63,"endColumn":19,"suggestions":"538"},{"ruleId":"513","severity":1,"message":"539","line":49,"column":6,"nodeType":"515","endLine":49,"endColumn":30,"suggestions":"540"},{"ruleId":"517","severity":1,"message":"541","line":26,"column":9,"nodeType":"519","messageId":"520","endLine":26,"endColumn":20},{"ruleId":"517","severity":1,"message":"542","line":24,"column":9,"nodeType":"519","messageId":"520","endLine":24,"endColumn":16},{"ruleId":"513","severity":1,"message":"543","line":71,"column":6,"nodeType":"515","endLine":71,"endColumn":12,"suggestions":"544"},{"ruleId":"517","severity":1,"message":"545","line":2,"column":10,"nodeType":"519","messageId":"520","endLine":2,"endColumn":25},{"ruleId":"517","severity":1,"message":"546","line":12,"column":10,"nodeType":"519","messageId":"520","endLine":12,"endColumn":24},{"ruleId":"517","severity":1,"message":"547","line":12,"column":26,"nodeType":"519","messageId":"520","endLine":12,"endColumn":31},{"ruleId":"517","severity":1,"message":"548","line":12,"column":33,"nodeType":"519","messageId":"520","endLine":12,"endColumn":48},{"ruleId":"549","severity":1,"message":"550","line":92,"column":15,"nodeType":"551","endLine":92,"endColumn":36},{"ruleId":"513","severity":1,"message":"552","line":21,"column":33,"nodeType":"515","endLine":21,"endColumn":35,"suggestions":"553"},"no-native-reassign",["554"],"no-negated-in-lhs",["555"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn'. Either include it or remove the dependency array.","ArrayExpression",["556"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'authState.loggedIn'. Either include it or remove the dependency array.",["557"],"React Hook useEffect has missing dependencies: 'SleepDebt' and 'fetchDiaries'. Either include them or remove the dependency array.",["558"],"React Hook useEffect has missing dependencies: 'Followers' and 'Following'. Either include them or remove the dependency array.",["559"],"React Hook useEffect has missing dependencies: 'SleepDebt' and 'authState.loggedIn'. Either include them or remove the dependency array.",["560"],"React Hook useEffect has a missing dependency: 'Messages'. Either include it or remove the dependency array.",["561"],"React Hook useEffect has a missing dependency: 'myBooks'. Either include it or remove the dependency array.",["562"],"React Hook useEffect has a missing dependency: 'userInformation'. Either include it or remove the dependency array.",["563"],"React Hook useEffect has a missing dependency: 'userMicropost'. Either include it or remove the dependency array.",["564"],"React Hook useEffect has a missing dependency: 'Rooms'. Either include it or remove the dependency array.",["565"],"React Hook useEffect has a missing dependency: 'Timeline'. Either include it or remove the dependency array.",["566"],"'handleLogin' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authDispatch', 'authState.loginUser.email', 'authState.loginUser.ideal_sleeping_hours', 'authState.loginUser.name', 'authState.loginUser.password', 'authState.loginUser.passwordConfirmation', and 'authState.loginUser.profile'. Either include them or remove the dependency array.",["567"],"'presignedObject' is defined but never used.","'fetchPresigned' is defined but never used.","'putS3' is defined but never used.","'postAvatarImage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'activation'. Either include it or remove the dependency array.",["568"],"no-global-assign","no-unsafe-negation",{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},"Update the dependencies array to be: [loggedIn]",{"range":"595","text":"596"},"Update the dependencies array to be: [authState.loggedIn]",{"range":"597","text":"598"},"Update the dependencies array to be: [dialogState.record, dialogState.diary, fetchDiaries, SleepDebt]",{"range":"599","text":"600"},"Update the dependencies array to be: [Followers, Following, tab]",{"range":"601","text":"602"},"Update the dependencies array to be: [SleepDebt, authState.loggedIn]",{"range":"603","text":"604"},"Update the dependencies array to be: [Messages, messageState.reRender]",{"range":"605","text":"606"},"Update the dependencies array to be: [tab, bookState.reRender, myBooks]",{"range":"607","text":"608"},"Update the dependencies array to be: [open, userInformation]",{"range":"609","text":"610"},"Update the dependencies array to be: [tab, userMicropost]",{"range":"611","text":"612"},"Update the dependencies array to be: [Rooms, open.isOpen]",{"range":"613","text":"614"},"Update the dependencies array to be: [Timeline, timelineState.reRender]",{"range":"615","text":"616"},"Update the dependencies array to be: [authDispatch, authState.loginUser.email, authState.loginUser.ideal_sleeping_hours, authState.loginUser.name, authState.loginUser.password, authState.loginUser.passwordConfirmation, authState.loginUser.profile, open]",{"range":"617","text":"618"},"Update the dependencies array to be: [activation]",{"range":"619","text":"620"},[1074,1076],"[loggedIn]",[2295,2297],"[authState.loggedIn]",[2907,2946],"[dialogState.record, dialogState.diary, fetchDiaries, SleepDebt]",[2065,2070],"[Followers, Following, tab]",[1838,1840],"[SleepDebt, authState.loggedIn]",[1763,1786],"[Messages, messageState.reRender]",[3191,3216],"[tab, bookState.reRender, myBooks]",[2575,2581],"[open, userInformation]",[2622,2627],"[tab, userMicropost]",[1619,1632],"[Rooms, open.isOpen]",[1233,1257],"[Timeline, timelineState.reRender]",[2222,2228],"[authDispatch, authState.loginUser.email, authState.loginUser.ideal_sleeping_hours, authState.loginUser.name, authState.loginUser.password, authState.loginUser.passwordConfirmation, authState.loginUser.profile, open]",[697,699],"[activation]"]