[{"/home/ubuntu/app/frontend/src/index.js":"1","/home/ubuntu/app/frontend/src/reportWebVitals.js":"2","/home/ubuntu/app/frontend/src/App.jsx":"3","/home/ubuntu/app/frontend/src/apis/sessions.js":"4","/home/ubuntu/app/frontend/src/reducer/AuthReducer.jsx":"5","/home/ubuntu/app/frontend/src/containers/Layout.jsx":"6","/home/ubuntu/app/frontend/src/urls/index.js":"7","/home/ubuntu/app/frontend/src/containers/Pages/Book.jsx":"8","/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx":"9","/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx":"10","/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx":"11","/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx":"12","/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx":"13","/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx":"14","/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx":"15","/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx":"16","/home/ubuntu/app/frontend/src/containers/Pages/Timeline.jsx":"17","/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx":"18","/home/ubuntu/app/frontend/src/containers/Pages/Users.jsx":"19","/home/ubuntu/app/frontend/src/components/Links/AvatarLink.jsx":"20","/home/ubuntu/app/frontend/src/components/Links/DiariesLink.jsx":"21","/home/ubuntu/app/frontend/src/components/Links/FollowsLink.jsx":"22","/home/ubuntu/app/frontend/src/components/Links/BooksLink.jsx":"23","/home/ubuntu/app/frontend/src/components/Links/RoomsLink.jsx":"24","/home/ubuntu/app/frontend/src/components/Links/HomeLink.jsx":"25","/home/ubuntu/app/frontend/src/components/Links/TimelineLink.jsx":"26","/home/ubuntu/app/frontend/src/components/Links/RankingLink.jsx":"27","/home/ubuntu/app/frontend/src/apis/books.js":"28","/home/ubuntu/app/frontend/src/apis/users.js":"29","/home/ubuntu/app/frontend/src/apis/diaries.js":"30","/home/ubuntu/app/frontend/src/apis/rooms.js":"31","/home/ubuntu/app/frontend/src/apis/passwordResets.js":"32","/home/ubuntu/app/frontend/src/reducer/DialogReducer.jsx":"33","/home/ubuntu/app/frontend/src/reducer/FollowReducer.jsx":"34","/home/ubuntu/app/frontend/src/components/Loading.jsx":"35","/home/ubuntu/app/frontend/src/reducer/SleepDebtReducer.jsx":"36","/home/ubuntu/app/frontend/src/reducer/MessageReducer.jsx":"37","/home/ubuntu/app/frontend/src/reducer/BookReducer.jsx":"38","/home/ubuntu/app/frontend/src/reducer/TimelineReducer.jsx":"39","/home/ubuntu/app/frontend/src/reducer/RoomReducer.jsx":"40","/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx":"41","/home/ubuntu/app/frontend/src/components/Buttons/BookSearchButton.jsx":"42","/home/ubuntu/app/frontend/src/components/Buttons/AccountButton.jsx":"43","/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx":"44","/home/ubuntu/app/frontend/src/components/UserInfomation/SleepInfo.jsx":"45","/home/ubuntu/app/frontend/src/components/UserInfomation/SleepData.jsx":"46","/home/ubuntu/app/frontend/src/components/Dialogs/RecordDialog.jsx":"47","/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx":"48","/home/ubuntu/app/frontend/src/components/Dialogs/LogInDialog.jsx":"49","/home/ubuntu/app/frontend/src/components/Dialogs/PasswordResetDialog.jsx":"50","/home/ubuntu/app/frontend/src/components/Dialogs/TweetDialog.jsx":"51","/home/ubuntu/app/frontend/src/components/Dialogs/DeleteDialog.jsx":"52","/home/ubuntu/app/frontend/src/components/Lists/FollowList.jsx":"53","/home/ubuntu/app/frontend/src/components/Lists/Message.jsx":"54","/home/ubuntu/app/frontend/src/components/Lists/BookList.jsx":"55","/home/ubuntu/app/frontend/src/components/Lists/BookCard.jsx":"56","/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx":"57","/home/ubuntu/app/frontend/src/components/Snackbars/Snackbar.jsx":"58","/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx":"59","/home/ubuntu/app/frontend/src/components/Forms/Search.jsx":"60","/home/ubuntu/app/frontend/src/components/Forms/Password.jsx":"61","/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx":"62","/home/ubuntu/app/frontend/src/apis/messages.js":"63","/home/ubuntu/app/frontend/src/apis/microposts.js":"64","/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx":"65","/home/ubuntu/app/frontend/src/components/Buttons/LikeButton.jsx":"66","/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx":"67","/home/ubuntu/app/frontend/src/components/Buttons/RoomButton.jsx":"68","/home/ubuntu/app/frontend/src/reducer/NotificationReducer.jsx":"69","/home/ubuntu/app/frontend/src/apis/likes.js":"70","/home/ubuntu/app/frontend/src/apis/relationships.js":"71","/home/ubuntu/app/frontend/src/components/Dialogs/CommentDialog.jsx":"72","/home/ubuntu/app/frontend/src/apis/comments.js":"73","/home/ubuntu/app/frontend/src/components/Forms/Content.jsx":"74","/home/ubuntu/app/frontend/src/apis/notifications.js":"75","/home/ubuntu/app/frontend/src/reducer/PostReducer.jsx":"76","/home/ubuntu/app/frontend/src/components/Forms/Email.jsx":"77","/home/ubuntu/app/frontend/src/components/Forms/RememberMe.jsx":"78","/home/ubuntu/app/frontend/src/components/Forms/IdealSleepingHours.jsx":"79","/home/ubuntu/app/frontend/src/components/Forms/PasswordConfirmation.jsx":"80","/home/ubuntu/app/frontend/src/components/Forms/Name.jsx":"81","/home/ubuntu/app/frontend/src/components/Forms/Feeling.jsx":"82","/home/ubuntu/app/frontend/src/components/Forms/SleepingHours.jsx":"83","/home/ubuntu/app/frontend/src/components/Forms/Date.jsx":"84","/home/ubuntu/app/frontend/src/reducer/RecordReducer.jsx":"85","/home/ubuntu/app/frontend/src/components/Dialogs/DiaryDialog.jsx":"86","/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx":"87","/home/ubuntu/app/frontend/src/components/UserInfomation/UserInfo.jsx":"88","/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx":"89","/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx":"90","/home/ubuntu/app/frontend/src/components/Forms/Profile.jsx":"91","/home/ubuntu/app/frontend/src/styled/theme.jsx":"92","/home/ubuntu/app/frontend/src/containers/Navigations/Sidebar.jsx":"93","/home/ubuntu/app/frontend/src/components/Buttons/PostButton.jsx":"94","/home/ubuntu/app/frontend/src/components/Buttons/RecordButton.jsx":"95","/home/ubuntu/app/frontend/src/components/Buttons/NotificationButton.jsx":"96","/home/ubuntu/app/frontend/src/components/Lists/BookRecommend.jsx":"97","/home/ubuntu/app/frontend/src/components/Buttons/RecommendButton.jsx":"98","/home/ubuntu/app/frontend/src/apis/recommends.js":"99","/home/ubuntu/app/frontend/src/components/Links/LogoLink.jsx":"100","/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx":"101","/home/ubuntu/app/frontend/src/reducer/RankingReducer.jsx":"102","/home/ubuntu/app/frontend/src/apis/rankings.js":"103","/home/ubuntu/app/frontend/src/components/Lists/RankUser.jsx":"104","/home/ubuntu/app/frontend/src/components/Lists/RankBook.jsx":"105","/home/ubuntu/app/frontend/src/components/Buttons/NotRecommendButton.jsx":"106","/home/ubuntu/app/frontend/src/components/Lists/TalkUser.jsx":"107","/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx":"108","/home/ubuntu/app/frontend/src/apis/image.js":"109","/home/ubuntu/app/frontend/src/components/Items/NotificationComment.jsx":"110","/home/ubuntu/app/frontend/src/components/Items/NotificationEntry.jsx":"111","/home/ubuntu/app/frontend/src/components/Items/NotificationFollow.jsx":"112","/home/ubuntu/app/frontend/src/components/Items/NotificationLike.jsx":"113","/home/ubuntu/app/frontend/src/components/Items/HomeMessage.jsx":"114","/home/ubuntu/app/frontend/src/components/Buttons/ProfileImageButton.jsx":"115"},{"size":500,"mtime":1632537914103,"results":"116","hashOfConfig":"117"},{"size":362,"mtime":1632537914103,"results":"118","hashOfConfig":"117"},{"size":1459,"mtime":1639190884552,"results":"119","hashOfConfig":"117"},{"size":1052,"mtime":1639116285583,"results":"120","hashOfConfig":"117"},{"size":2400,"mtime":1639189915043,"results":"121","hashOfConfig":"117"},{"size":5876,"mtime":1639442299622,"results":"122","hashOfConfig":"117"},{"size":4167,"mtime":1640326711503,"results":"123","hashOfConfig":"117"},{"size":3038,"mtime":1639116285631,"results":"124","hashOfConfig":"117"},{"size":5230,"mtime":1640255817495,"results":"125","hashOfConfig":"117"},{"size":3678,"mtime":1639116285631,"results":"126","hashOfConfig":"117"},{"size":3656,"mtime":1639444265310,"results":"127","hashOfConfig":"117"},{"size":2732,"mtime":1639357371093,"results":"128","hashOfConfig":"117"},{"size":6941,"mtime":1639706799716,"results":"129","hashOfConfig":"117"},{"size":2426,"mtime":1639536785539,"results":"130","hashOfConfig":"117"},{"size":5322,"mtime":1639116285635,"results":"131","hashOfConfig":"117"},{"size":2293,"mtime":1639116285639,"results":"132","hashOfConfig":"117"},{"size":1961,"mtime":1639116285639,"results":"133","hashOfConfig":"117"},{"size":5471,"mtime":1639441544990,"results":"134","hashOfConfig":"117"},{"size":2682,"mtime":1639116285639,"results":"135","hashOfConfig":"117"},{"size":905,"mtime":1639441917544,"results":"136","hashOfConfig":"117"},{"size":904,"mtime":1639116285611,"results":"137","hashOfConfig":"117"},{"size":904,"mtime":1639116285611,"results":"138","hashOfConfig":"117"},{"size":924,"mtime":1639441979527,"results":"139","hashOfConfig":"117"},{"size":1353,"mtime":1639116285615,"results":"140","hashOfConfig":"117"},{"size":807,"mtime":1639116285615,"results":"141","hashOfConfig":"117"},{"size":930,"mtime":1639116285615,"results":"142","hashOfConfig":"117"},{"size":883,"mtime":1639116285615,"results":"143","hashOfConfig":"117"},{"size":1957,"mtime":1639116285575,"results":"144","hashOfConfig":"117"},{"size":4763,"mtime":1639116285583,"results":"145","hashOfConfig":"117"},{"size":1573,"mtime":1639116285575,"results":"146","hashOfConfig":"117"},{"size":1071,"mtime":1639116285583,"results":"147","hashOfConfig":"117"},{"size":805,"mtime":1639116285579,"results":"148","hashOfConfig":"117"},{"size":1300,"mtime":1639353818070,"results":"149","hashOfConfig":"117"},{"size":707,"mtime":1639116285643,"results":"150","hashOfConfig":"117"},{"size":621,"mtime":1639116285627,"results":"151","hashOfConfig":"117"},{"size":530,"mtime":1639116285647,"results":"152","hashOfConfig":"117"},{"size":528,"mtime":1639116285643,"results":"153","hashOfConfig":"117"},{"size":1059,"mtime":1639116285639,"results":"154","hashOfConfig":"117"},{"size":652,"mtime":1639116285647,"results":"155","hashOfConfig":"117"},{"size":435,"mtime":1639116285647,"results":"156","hashOfConfig":"117"},{"size":1869,"mtime":1639833441204,"results":"157","hashOfConfig":"117"},{"size":734,"mtime":1639832314743,"results":"158","hashOfConfig":"117"},{"size":2054,"mtime":1639708609601,"results":"159","hashOfConfig":"117"},{"size":1658,"mtime":1639116285627,"results":"160","hashOfConfig":"117"},{"size":1734,"mtime":1640254457758,"results":"161","hashOfConfig":"117"},{"size":3483,"mtime":1640254414767,"results":"162","hashOfConfig":"117"},{"size":2477,"mtime":1640253844360,"results":"163","hashOfConfig":"117"},{"size":3482,"mtime":1639116285599,"results":"164","hashOfConfig":"117"},{"size":2688,"mtime":1637219807950,"results":"165","hashOfConfig":"117"},{"size":1521,"mtime":1639116285595,"results":"166","hashOfConfig":"117"},{"size":1829,"mtime":1640253635426,"results":"167","hashOfConfig":"117"},{"size":1068,"mtime":1639116285591,"results":"168","hashOfConfig":"117"},{"size":1721,"mtime":1640263234490,"results":"169","hashOfConfig":"117"},{"size":1655,"mtime":1639116285623,"results":"170","hashOfConfig":"117"},{"size":752,"mtime":1639116285619,"results":"171","hashOfConfig":"117"},{"size":1346,"mtime":1639116285619,"results":"172","hashOfConfig":"117"},{"size":3726,"mtime":1639354076177,"results":"173","hashOfConfig":"117"},{"size":600,"mtime":1639116285627,"results":"174","hashOfConfig":"117"},{"size":1636,"mtime":1639833157213,"results":"175","hashOfConfig":"117"},{"size":891,"mtime":1639116285607,"results":"176","hashOfConfig":"117"},{"size":637,"mtime":1639116285603,"results":"177","hashOfConfig":"117"},{"size":4547,"mtime":1640252386378,"results":"178","hashOfConfig":"117"},{"size":493,"mtime":1639116285579,"results":"179","hashOfConfig":"117"},{"size":1128,"mtime":1639116285579,"results":"180","hashOfConfig":"117"},{"size":1003,"mtime":1639116285583,"results":"181","hashOfConfig":"117"},{"size":1148,"mtime":1639116285587,"results":"182","hashOfConfig":"117"},{"size":1656,"mtime":1639833357388,"results":"183","hashOfConfig":"117"},{"size":968,"mtime":1639181955042,"results":"184","hashOfConfig":"117"},{"size":904,"mtime":1639116285643,"results":"185","hashOfConfig":"117"},{"size":841,"mtime":1639116285575,"results":"186","hashOfConfig":"117"},{"size":713,"mtime":1639116285583,"results":"187","hashOfConfig":"117"},{"size":1390,"mtime":1637063039689,"results":"188","hashOfConfig":"117"},{"size":837,"mtime":1639116285575,"results":"189","hashOfConfig":"117"},{"size":703,"mtime":1639116285599,"results":"190","hashOfConfig":"117"},{"size":1088,"mtime":1639116285579,"results":"191","hashOfConfig":"117"},{"size":938,"mtime":1639116285647,"results":"192","hashOfConfig":"117"},{"size":619,"mtime":1639116285599,"results":"193","hashOfConfig":"117"},{"size":530,"mtime":1635984981722,"results":"194","hashOfConfig":"117"},{"size":652,"mtime":1639116285603,"results":"195","hashOfConfig":"117"},{"size":692,"mtime":1639116285603,"results":"196","hashOfConfig":"117"},{"size":615,"mtime":1639116285603,"results":"197","hashOfConfig":"117"},{"size":911,"mtime":1639116285603,"results":"198","hashOfConfig":"117"},{"size":660,"mtime":1639116285607,"results":"199","hashOfConfig":"117"},{"size":591,"mtime":1639116285599,"results":"200","hashOfConfig":"117"},{"size":1337,"mtime":1639116285647,"results":"201","hashOfConfig":"117"},{"size":2843,"mtime":1640254761190,"results":"202","hashOfConfig":"117"},{"size":3486,"mtime":1639444997453,"results":"203","hashOfConfig":"117"},{"size":3893,"mtime":1640259413832,"results":"204","hashOfConfig":"117"},{"size":1096,"mtime":1639116285647,"results":"205","hashOfConfig":"117"},{"size":4340,"mtime":1639116285595,"results":"206","hashOfConfig":"117"},{"size":688,"mtime":1639116285607,"results":"207","hashOfConfig":"117"},{"size":294,"mtime":1639833083878,"results":"208","hashOfConfig":"117"},{"size":3438,"mtime":1639442391320,"results":"209","hashOfConfig":"117"},{"size":436,"mtime":1639116285587,"results":"210","hashOfConfig":"117"},{"size":438,"mtime":1639116285591,"results":"211","hashOfConfig":"117"},{"size":878,"mtime":1639116285587,"results":"212","hashOfConfig":"117"},{"size":2469,"mtime":1639116285619,"results":"213","hashOfConfig":"117"},{"size":1040,"mtime":1639833347136,"results":"214","hashOfConfig":"117"},{"size":793,"mtime":1639116285579,"results":"215","hashOfConfig":"117"},{"size":550,"mtime":1639116285615,"results":"216","hashOfConfig":"117"},{"size":6272,"mtime":1639116285639,"results":"217","hashOfConfig":"117"},{"size":894,"mtime":1639116285647,"results":"218","hashOfConfig":"117"},{"size":1394,"mtime":1639116285579,"results":"219","hashOfConfig":"117"},{"size":1700,"mtime":1639116285623,"results":"220","hashOfConfig":"117"},{"size":1843,"mtime":1639116285623,"results":"221","hashOfConfig":"117"},{"size":1058,"mtime":1639116285587,"results":"222","hashOfConfig":"117"},{"size":2267,"mtime":1639116285623,"results":"223","hashOfConfig":"117"},{"size":3058,"mtime":1639354239111,"results":"224","hashOfConfig":"117"},{"size":1709,"mtime":1640343915491,"results":"225","hashOfConfig":"117"},{"size":866,"mtime":1639353820210,"results":"226","hashOfConfig":"117"},{"size":875,"mtime":1639352815051,"results":"227","hashOfConfig":"117"},{"size":627,"mtime":1639352815051,"results":"228","hashOfConfig":"117"},{"size":860,"mtime":1639353820922,"results":"229","hashOfConfig":"117"},{"size":964,"mtime":1639444268170,"results":"230","hashOfConfig":"117"},{"size":2560,"mtime":1640343937287,"results":"231","hashOfConfig":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"11xwpmh",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"234"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"234"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"234"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"234"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"234"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"234"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"234"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"234"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"234"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"234"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"234"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ubuntu/app/frontend/src/index.js",[],["474","475"],"/home/ubuntu/app/frontend/src/reportWebVitals.js",[],"/home/ubuntu/app/frontend/src/App.jsx",["476"],"import React, { useEffect, useReducer, createContext } from 'react';\nimport './App.css';\n// Style\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from './styled/theme'\nimport { ThemeProvider } from '@emotion/react';\n// Api\nimport { fetchLoggedIn } from './apis/sessions';\n// Reducer\nimport { authInitialState, authReducer } from './reducer/AuthReducer'\n// Container\nimport { Layout } from './containers/Layout';\n\n\nexport const AuthContext = createContext()\n\nexport default function App() {\n  const [authState, authDispatch] = useReducer(authReducer, authInitialState)\n\n  // ログイン状態を確認する\n  const loggedIn = () => {\n    fetchLoggedIn()\n      .then(data => {\n        if (data.logged_in && authState.loggedIn === false) {\n          authDispatch({\n            type: 'login',\n            payload: data.user,\n          })\n        } else if (!data.logged_in && authState.loggedIn === true) {\n          authDispatch({\n            type: 'logout',\n          })\n        }\n      });\n  }\n\n  useEffect(() => {\n    loggedIn();\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ authState, authDispatch }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={{\n          display: 'flex',\n          alignItems: \"flex-start\",\n          justifyContent: 'center',\n        }}>\n          <Layout />\n        </Box>\n      </ThemeProvider>\n    </AuthContext.Provider>\n  );\n}\n","/home/ubuntu/app/frontend/src/apis/sessions.js",[],"/home/ubuntu/app/frontend/src/reducer/AuthReducer.jsx",[],"/home/ubuntu/app/frontend/src/containers/Layout.jsx",["477"],"import React, { useContext, useEffect, useState, useReducer } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { AuthContext } from '../App';\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// Api\nimport { checkNotifications } from '../apis/notifications';\n// Reducer\nimport { notificationReducer, notificationInitialState } from '../reducer/NotificationReducer'\n// Container\nimport { Book } from './Pages/Book';\nimport { Diaries } from './Pages/Diaries';\nimport { Follow } from './Pages/Follow';\nimport { Header } from './Navigations/Header';\nimport { Home } from './Pages/Home'\nimport { MessageRoom } from './Pages/MessageRoom';\nimport { Mybooks } from './Pages/Mybooks';\nimport { PasswordReset } from './Pages/PasswordReset';\nimport { Profile } from './Pages/Profile'\nimport { Ranking } from './Pages/Ranking';\nimport { Rooms } from './Pages/Rooms';\nimport { Timeline } from './Pages/Timeline';\nimport { Users } from './Pages/Users'\nimport { Sidebar } from './Navigations/Sidebar';\n// Component\nimport { Loading } from '../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n      maxWidth: 1200,\n      marginTop: 120,\n      mx: 'auto',\n      width: '100%',\n    }\n  }),\n);\n\nexport const Layout = () => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [notificationState, notificationDispatch] = useReducer(notificationReducer, notificationInitialState);\n  // Sidebar開閉する関数群\n  const drawerWidth = 240;\n  const initialState = window.innerWidth > 600 ? true : false\n  const [open, setOpen] = useState(initialState);\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  const Notifications = () => {\n    checkNotifications()\n      .then(data =>\n        notificationDispatch({\n          type: 'check',\n          payload: {\n            checkAll: data.check_all,\n            checkMessage: data.check_message,\n          }\n        })\n      );\n  }\n\n  useEffect(() => {\n    authState.loggedIn && Notifications();\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <Header\n        checkClese={() => notificationDispatch({ type: 'checkedAll' })}\n        checkNotifications={notificationState.checkAll}\n        open={open}\n        drawerWidth={drawerWidth}\n        handleDrawerOpen={handleDrawerOpen}\n      />\n      <Sidebar\n        checkClese={() => notificationDispatch({ type: 'checkedMessage' })}\n        checkNotifications={notificationState.checkMessage}\n        open={open}\n        drawerWidth={drawerWidth}\n        handleDrawerClose={handleDrawerClose}\n      />\n\n      <Box className={classes.root}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route exact path=\"/account_activations/:id/edit\">\n            <Redirect to=\"/\" />\n          </Route>\n\n          {authState.loginUser === null && <Loading />}\n          {authState.loginUser !== null && authState.loggedIn === false\n            ?\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            :\n            <>\n              <Route exact path=\"/users/:id\"\n                render={({ match }) =>\n                  <Profile\n                    loginUser={authState.loginUser}\n                    isLoggedIn={authState.loggedIn}\n                    userId={match.params.id}\n                  />\n                }\n              />\n\n              <Route exact path=\"/users/:id/timeline\"\n                render={({ match }) => <Timeline\n                  loginUser={authState.loginUser}\n                  userId={match.params.id}\n                />}\n              />\n\n              <Route exact path=\"/users/:id/talk_rooms\"\n                render={({ match }) => <Rooms\n                  loginUser={authState.loginUser}\n                  userId={match.params.id} //不要なら削除\n                />}\n              />\n\n              <Route exact path=\"/users/:id/following\"\n                render={({ match }) => <Follow\n                  userId={match.params.id}\n                  initialTab='following'\n                />}\n              />\n\n              <Route exact path=\"/users/:id/followers\"\n                render={({ match }) => <Follow\n                  userId={match.params.id}\n                  initialTab='followers'\n                />}\n              />\n\n              <Route exact path=\"/users/:id/books\"\n                render={({ match }) => <Mybooks\n                  userId={match.params.id}\n                />}\n              />\n\n              <Route exact path=\"/users/:id/diaries\"\n                render={({ match }) => <Diaries\n                  userId={match.params.id}\n                />}\n              />\n\n              <Route exact path=\"/ranking\">\n                <Ranking />\n              </Route>\n\n              <Route exact path=\"/talk_rooms/:id\"\n                render={({ match }) => <MessageRoom\n                  roomId={match.params.id}\n                  loginUser={authState.loginUser}\n                />}\n              />\n\n              <Route exact path=\"/books/:isbn\"\n                render={({ match }) => <Book\n                  bookIsbn={match.params.isbn}\n                />}\n              />\n\n              <Route exact path=\"/users\">\n                <Users\n                  isLoggedIn={authState.loggedIn}\n                  loginUser={authState.loginUser}\n                />\n              </Route>\n\n              <Route exact path=\"/password_resets/:id/edit\"\n                render={({ match }) => <PasswordReset\n                  match={match}\n                />}\n              />\n            </>\n          }\n        </Switch>\n      </Box>\n    </BrowserRouter >\n  );\n}\n","/home/ubuntu/app/frontend/src/urls/index.js",[],"/home/ubuntu/app/frontend/src/containers/Pages/Book.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Diaries.jsx",["478"],"import React, { useContext, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from '@mui/material/Grid';\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchUserDiaries } from \"../../apis/users\";\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer';\nimport { recordReducer, recordInitialState } from '../../reducer/RecordReducer';\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { Calendar } from \"../../components/UserInfomation/Calendar\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\";\n// Dialog\nimport { RecordDialog } from \"../../components/Dialogs/RecordDialog\";\nimport { SleepData } from \"../../components/UserInfomation/SleepData\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'end',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 1000,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'button': {\n      background: '#0288d1',\n      border: 0,\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const Diaries = ({ userId }) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const handleClose = () => dialogDispatch({ type: 'close' });\n  const [recordState, recordDispatch] = useReducer(recordReducer, recordInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n  // 日記情報を取得する\n  const fetchDiaries = () => {\n    recordDispatch({ type: 'fetching' });\n    fetchUserDiaries(userId)\n      .then(data => {\n        recordDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            user: data.user,\n            diaries: data.diaries,\n          }\n        });\n      });\n  }\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' });\n    fetchSleepDebt(userId)\n      .then(data => {\n        // 睡眠負債が返された場合\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        )\n        // 余剰睡眠が返された場合\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        )\n      })\n  }\n\n  useEffect(() => {\n    fetchDiaries();\n    SleepDebt();\n  }, [dialogState.record, dialogState.diary])\n\n\n  return (\n    <Box className={classes.root}>\n      {recordState.fetchState !== 'ok' ? <Loading /> :\n        <>\n          <Typography variant=\"h3\">\n            <Box sx={{ letterSpacing: 10, pb: 5 }}><b> ~ {recordState.user.name}の睡眠日記 ~ </b></Box>\n          </Typography>\n          <Grid container>\n            <Grid item xs={12} sm={6} sx={{\n              alignItems: \"center\",\n              justifyContent: 'center',\n              pt: 8\n            }}>\n              <SleepInfo\n                userName={recordState.user.name}\n                sleepDebt={sleepDebtState.sleepDebt}\n                sleepSaving={sleepDebtState.sleepSaving}\n              />\n              <Box>\n                {authState.loggedIn &&\n                  <Box display=\"flex\" justifyContent=\"space-evenly\">\n                    <Button\n                      className={classes.button}\n                      onClick={() => dialogDispatch({ type: 'record' })}\n                    >\n                      睡眠日記を書く\n                    </Button>\n                    <Button\n                      className={classes.button}\n                    >\n                      ツイッターに投稿する\n                    </Button>\n                  </Box>\n                }\n                <Typography variant=\"h6\">\n                  <Box sx={{ letterSpacing: 4, mt: 3 }}>【理想睡眠時間：<b>{recordState.user.ideal_sleeping_hours}時間】</b></Box>\n                </Typography>\n              </Box>\n            </Grid>\n\n            <Grid item sm={12} md={6} sx={{ pt: 2 }}>\n              <Calendar\n                userId={userId}\n                open={dialogState.diary}\n                handleClose={handleClose}\n                handleOpen={() => dialogDispatch({ type: 'diary' })}\n                recordState={recordState}\n                recordDispatch={recordDispatch}\n              />\n            </Grid>\n          </Grid>\n\n          <Box sx={{ py: 6, pl: 2 }}>\n            <SleepData\n              diaries={recordState.diaries}\n            />\n          </Box>\n        </>\n      }\n\n      <RecordDialog\n        handleClose={handleClose}\n        open={dialogState.record}\n      />\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Follow.jsx",["479"],"import React, { useState, useReducer, useEffect } from \"react\";\n// styles\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from '@mui/material/Typography';\n// Api\nimport { fetchFollowing } from \"../../apis/users\";\nimport { fetchFollowers } from \"../../apis/users\";\n// Reducer\nimport { followInitialState, followReducer } from '../../reducer/FollowReducer';\n// コンポーネント\nimport { FollowList } from '../../components/Lists/FollowList';\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      border: 1,\n      justifyContent: 'center',\n      maxWidth: 600,\n      textAlign: 'center',\n      width: '100%',\n    },\n    tabBox: {\n      background: '#001e3c',\n      borderBottom: 1,\n      borderColor: 'divider',\n      '&:hover': {\n        color: '#fff',\n        fontWeight: 'bold',\n      },\n    }\n  }),\n);\n\nexport const Follow = ({\n  userId,\n  initialTab,\n}) => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(initialTab);\n  const [followState, followDispatch] = useReducer(followReducer, followInitialState);\n  // フォロー中のユーザーを取得する\n  const Following = () => {\n    fetchFollowing(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowing',\n          payload: {\n            following: data.following,\n            user: data.user,\n          },\n        });\n      });\n  }\n  // フォロワーを取得する\n  const Followers = () => {\n    fetchFollowers(userId)\n      .then(data => {\n        followDispatch({\n          type: 'fetchSuccessFollowers',\n          payload: {\n            followers: data.followers,\n            user: data.user,\n          },\n        });\n      });\n  }\n\n  useEffect(() => {\n    followDispatch({ type: 'fetching' });\n    tab === 'following'\n      ? Following()\n      : Followers()\n  }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\" sx={{ width: '100%' }}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}><b>{followState.user.name}</b></Box>\n      </Typography>\n      <TabContext value={tab}>\n        <Box>\n          <TabList\n            onChange={(event, newTab) => { setTab(newTab) }}\n            variant=\"fullWidth\"\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n          >\n            <Tab\n              label=\"フォロー中\"\n              value=\"following\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n            <Tab\n              label=\"フォロワー\"\n              value=\"followers\"\n              sx={{ typography: 'h6', fontWeight: 'bold' }}\n            />\n          </TabList>\n        </Box>\n        <TabPanel value=\"following\">\n          {\n            followState.fetchState !== 'ok' ? <Loading /> :\n              followState.following.map(followed =>\n                <FollowList\n                  user={followed.user}\n                  followStatus={followed.followStatus}\n                />\n              )\n          }\n        </TabPanel>\n        <TabPanel value=\"followers\">\n          {\n            followState.fetchState !== 'ok' ? <Loading /> :\n              followState.followers.map(follower =>\n                <FollowList\n                  user={follower.user}\n                  followStatus={follower.followStatus}\n                />\n              )\n          }\n        </TabPanel>\n      </TabContext>\n    </Box>\n\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Home.jsx",["480"],"import React, { useEffect, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Grid from \"@mui/material/Grid\";\n// Api\nimport { fetchSleepDebt } from \"../../apis/diaries\";\n// Reducer\nimport { dialogReducer, dialogInitialState } from '../../reducer/DialogReducer'\nimport { sleepDebtReducer, sleepDebtInitialState } from \"../../reducer/SleepDebtReducer\";\n// Component\nimport { SignUpDialog } from \"../../components/Dialogs/SignUpDialog\";\nimport { LogInDialog } from \"../../components/Dialogs/LogInDialog\";\nimport { PasswordResetDialog } from \"../../components/Dialogs/PasswordResetDialog\";\nimport { SleepInfo } from \"../../components/UserInfomation/SleepInfo\"\nimport { SnackBar } from \"../../components/Snackbars/Snackbar\";\nimport { HomeMessage } from \"../../components/Items/HomeMessage\";\n// Image\nimport MainImage from \"../../images/MainImage.png\";\n\n\nexport const Home = () => {\n  const { authState, authDispatch } = useContext(AuthContext);\n  const [dialogState, dialogDispatch] = useReducer(dialogReducer, dialogInitialState);\n  const [sleepDebtState, sleepDebtDispatch] = useReducer(sleepDebtReducer, sleepDebtInitialState);\n\n  // 睡眠負債を取得する\n  const SleepDebt = () => {\n    sleepDebtDispatch({ type: 'fetching' })\n    fetchSleepDebt(authState.loginUser.id)\n      .then(data => {\n        // 睡眠負債が返された場合\n        data.sleep_debt && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepDebt: data.sleep_debt }\n          })\n        );\n        // 余剰睡眠が返された場合\n        data.sleep_saving && (\n          sleepDebtDispatch({\n            type: 'fetchSuccess',\n            payload: { sleepSaving: data.sleep_saving }\n          })\n        );\n      });\n  }\n  // ログイン時のみ実行\n  useEffect(() => {\n    authState.loggedIn && SleepDebt();\n  }, [])\n\n  return (\n    <>\n      <Grid container sx={{\n        maxWidth: 1000,\n        alignItems: 'center',\n      }}>\n        {!authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}>\n            <HomeMessage\n              handleOpenLogin={() => dialogDispatch({ type: 'login' })}\n              handleOpenSignup={() => dialogDispatch({ type: 'signup' })}\n            />\n          </Grid>\n        }\n        {authState.loggedIn &&\n          <Grid item xs={12} sm={6} sx={{\n            alignItems: \"center\",\n            justifyContent: 'center',\n          }}>\n            <SleepInfo\n              userName={authState.loginUser.name}\n              sleepDebt={sleepDebtState.sleepDebt}\n              sleepSaving={sleepDebtState.sleepSaving}\n            />\n          </Grid>\n        }\n        <Grid item xs={12} sm={6} sx={{\n          alignItems: \"center\",\n          justifyContent: 'center',\n        }}>\n          <Box>\n            <img src={MainImage}\n              alt=\"main iamge\"\n              style={{ width: 600 }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n\n      <SignUpDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.signup}\n      />\n      <LogInDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        handlePasswordReset={() => dialogDispatch({ type: 'passwordReset' })}\n        open={dialogState.login}\n      />\n      <PasswordResetDialog\n        handleClose={() => dialogDispatch({ type: 'close' })}\n        open={dialogState.passwordReset}\n      />\n      <SnackBar handleClose={() => authDispatch({ type: 'closeSnackbar' })} />\n    </>\n  );\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/MessageRoom.jsx",["481"],"import React, { useEffect, useReducer } from \"react\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@mui/material/List\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchMessages } from \"../../apis/rooms\"\n// Reducer\nimport { messageInitialState, messageReducer } from '../../reducer/MessageReducer';\n// Cpmponent\nimport { Chat } from \"../../components/Forms/Chat\";\nimport { Message } from \"../../components/Lists/Message\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      maxWidth: 600,\n      textAlign: 'center',\n      width: '100%',\n    },\n    'title': {\n      backgroundColor: '#001e3c',\n      top: 0,\n      paddingTop: 80,\n      position: 'fixed',\n      width: 600,\n      zIndex: 1,\n    },\n    'messages': {\n      display: 'flex',\n      flexDirection: 'column-reverse',\n      flexGrow: 1,\n      width: '100%',\n      height: '100%',\n      overflow: \"auto\",\n      marginBottom: 150,\n    }\n  }),\n);\n\nexport const MessageRoom = ({\n  roomId,\n  loginUser,\n}) => {\n  const classes = useStyles();\n  const [messageState, messageDispatch] = useReducer(messageReducer, messageInitialState)\n  // トークルームのメッセージ一覧を取得する\n  const Messages = () => {\n    fetchMessages(roomId)\n      .then(data => {\n        messageDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            messages: data.messages,\n            user: data.user,\n          }\n        });\n      });\n  }\n\n  useEffect(() => {\n    Messages();\n  }, [messageState.reRender])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h4\" className={classes.title}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}>\n          <b>{messageState.user.name}</b>\n        </Box>\n      </Typography>\n\n      {messageState.fetchState !== 'ok' ? <Loading /> :\n        <List className={classes.messages} id={\"scroll-area\"}>\n          {messageState.messages.length === 0 ? (\n            <ListItemText>\n              メッセージはありません。\n            </ListItemText>\n          ) : (\n            messageState.messages.map((message, index) =>\n              <Message\n                message={message}\n                loginUserId={loginUser.id}\n              />\n            )\n          )}\n        </List>\n      }\n      <Chat\n        user_id={loginUser.id}\n        room_id={roomId}\n        dataFetch={() => messageDispatch({ type: 'fetching' })}\n      />\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Mybooks.jsx",["482"],"import React, { useState, useEffect, useReducer } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Typography from \"@mui/material/Typography\";\n// Icon\nimport SearchIcon from '@mui/icons-material/Search';\n// Api\nimport { fetchUserBooks } from '../../apis/users';\nimport { fetchSearchBooks } from '../../apis/books';\nimport { deleteRecommend } from '../../apis/recommends'\n// Reducer\nimport { bookInitialState, bookReducer } from '../../reducer/BookReducer';\n// Component\nimport { BookCard } from '../../components/Lists/BookCard';\nimport { BookList } from '../../components/Lists/BookList';\nimport { BookRecommend } from '../../components/Lists/BookRecommend';\nimport { BookSearchButton } from '../../components/Buttons/BookSearchButton';\nimport { Search } from '../../components/Forms/Search';\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      maxWidth: 1000,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'search': {\n      alignItems: 'flex-start',\n      display: 'flex',\n      flexDirection: 'column',\n      marginTop: 20,\n      width: 400,\n    },\n    'recommend': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 20,\n      width: 550,\n    },\n    'list': {\n      background: '#334b63',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      width: 1000,\n    },\n    'card': {\n      background: '#334b63',\n      display: 'flex',\n      flexDirection: 'column',\n      width: 250,\n      height: 385,\n      padding: 15,\n    },\n  }),\n);\n\nexport const Mybooks = ({\n  userId,\n}) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [tab, setTab] = useState('read');\n  const [bookState, bookDispatch] = useReducer(bookReducer, bookInitialState);\n  const tabLabelRead = `読了 : ${bookState.readBooks.length} 冊`\n  const tabLabelStack = `積読 : ${bookState.stackBooks.length} 冊`\n  // ユーザーの登録本を取得する\n  const myBooks = () => {\n    fetchUserBooks(userId)\n      .then(data => {\n        bookDispatch({\n          type: 'fetchSuccess',\n          payload: {\n            user: data.user,\n            recommendBook: data.recommend_book,\n            readBooks: data.read_books,\n            stackBooks: data.stack_books,\n          }\n        });\n      });\n  }\n  // 検索したキーワードに該当本を取得する\n  const searchBooks = () => {\n    bookDispatch({ type: 'posting' });\n    fetchSearchBooks({ keyword: keyword })\n      .then(data => {\n        data && bookDispatch({\n          type: 'postSuccess',\n          payload: data.books,\n        });\n        !data && alert('書籍名を入力してください。')\n      });\n  }\n  // おすすめ本を解除する\n  const NotRecommend = (bookId) => {\n    deleteRecommend(bookId)\n      .then(() => {\n        bookDispatch({ type: 'reRender', });\n      })\n  }\n\n  useEffect(() => {\n    myBooks();\n  }, [tab, bookState.reRender])\n\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"h3\" sx={{ width: '100%' }}>\n        <Box sx={{ letterSpacing: 10, pb: 2 }}><b> ~ {bookState.user.name}の睡眠本棚 ~</b></Box>\n      </Typography>\n\n      <Box className={classes.search}>\n        <Box>\n          <SearchIcon sx={{ fontSize: 20, mr: 1 }} />\n          <Typography variant=\"subtitle\">\n            睡眠本の検索はこちらから\n          </Typography>\n        </Box>\n        <Search\n          keyword={keyword}\n          handleChange={e => setKeyword(e.target.value)}\n        />\n        <BookSearchButton\n          handleSubmit={searchBooks}\n        />\n        {bookState.searchBooks.length !== 0 &&\n          <Typography variant=\"h6\">\n            検索結果 : {bookState.searchBooks.length} 件\n          </Typography>\n        }\n      </Box>\n\n      <Box className={classes.recommend}>\n        {/* {bookState.recommendBook === null ?\n          <h2>お気に入りの睡眠本を登録しましょう</h2>\n          : */}\n        <BookRecommend\n          book={bookState.recommendBook}\n          NotRecommend={NotRecommend}\n        />\n        {/* } */}\n      </Box>\n\n      {bookState.fetchState !== 'ok' ? <Loading /> :\n\n        <>\n          {bookState.searchBooks.length !== 0 &&\n            <Box className={classes.list}>\n              {bookState.searchBooks.map(book =>\n                <Box\n                  className={classes.card}\n                  key={book.params.isbn.toString()}\n                >\n                  <BookCard book={book.params} />\n                </Box>\n              )}\n            </Box>\n          }\n\n          {bookState.searchBooks.length === 0 &&\n            <>\n              <TabContext value={tab}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                  <TabList\n                    onChange={(event, newTab) => { setTab(newTab) }}\n                    variant=\"fullWidth\"\n                  >\n                    <Tab\n                      label={tabLabelRead}\n                      value=\"read\"\n                      sx={{ typography: 'h6', fontWeight: 'bold' }}\n                    />\n                    <Tab\n                      label={tabLabelStack}\n                      value=\"stack\"\n                      sx={{ typography: 'h6', fontWeight: 'bold' }}\n                    />\n                  </TabList>\n                </Box>\n                <TabPanel value=\"read\">\n                  {bookState.readBooks.length === 0 ? (\n                    <Box sx={{ width: 1000 }}>\n                      <h2>読了した本はありません。</h2>\n                      <h2>睡眠本を読んで快適な睡眠生活を送ってみませんか？</h2>\n                    </Box>\n                  ) : (\n                    <Box className={classes.list}>\n                      <BookList books={bookState.readBooks} />\n                    </Box>\n\n                  )}\n                </TabPanel>\n                <TabPanel value=\"stack\">\n                  {bookState.stackBooks.length === 0 ? (\n                    <Box sx={{ width: 1000 }}>\n                      <h2>積んでいる本はありません。</h2>\n                      <h2>読んでみたい睡眠本を検索し、ポチりましょう。</h2>\n                    </Box>\n                  ) : (\n                    <Box className={classes.list}>\n                      <BookList books={bookState.stackBooks} />\n                    </Box>\n                  )}\n                </TabPanel>\n              </TabContext>\n            </>\n          }\n        </>\n      }\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/PasswordReset.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Profile.jsx",["483","484"],"import React, { useContext, useState, useEffect, useReducer } from \"react\";\nimport { AuthContext } from '../../App';\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport List from \"@mui/material/List\";\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\n//Icon\nimport CommentIcon from '@mui/icons-material/Comment';\nimport NotesIcon from '@mui/icons-material/Notes';\n// Api\nimport { fetchUser, fetchMicroposts } from \"../../apis/users\";\n// Reducer\nimport { profileReducer, profileInitialState } from '../../reducer/ProfileReducer';\n// Component\nimport { Comment } from \"../../components/Lists/Comment\";\nimport { Loading } from \"../../components/Loading\"\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { UserInfo } from \"../../components/UserInfomation/UserInfo\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      maxWidth: 800,\n      mx: 'auto',\n      width: '100%',\n    },\n    'tabBox': {\n      background: '#001e3c',\n      borderBottom: 1,\n      borderColor: 'divider',\n      '&:hover': {\n        color: '#fff',\n        fontWeight: 'bold',\n      }\n    }\n  }),\n);\n\nexport const Profile = ({\n  userId,\n}) => {\n  const classes = useStyles();\n  const { authState } = useContext(AuthContext);\n  const [profileState, profileDispatch] = useReducer(profileReducer, profileInitialState);\n  const [tab, setTab] = useState('microposts');\n  const [open, setOpen] = useState(false);\n\n  // ユーザー情報の取得\n  const userInformation = () => {\n    fetchUser(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessProfile',\n          payload: {\n            user: data.user,\n            followingIds: data.following_ids,\n            followersIds: data.followers_ids,\n            followStatus: data.followStatus,\n            subscriptions: data.subscriptions,\n          }\n        })\n      });\n  }\n  // マイクロポスト情報の取得 \n  const userMicropost = () => {\n    fetchMicroposts(userId)\n      .then(data => {\n        profileDispatch({\n          type: 'fetchSuccessMicropost',\n          payload: {\n            microposts: data.microposts,\n            likedMicroposts: data.liked_microposts,\n            comments: data.comments,\n          }\n        })\n      });\n  }\n\n  useEffect(() => { userInformation() }, [open])\n  useEffect(() => { userMicropost() }, [tab])\n\n  return (\n    <Box className={classes.root}>\n      <UserInfo\n        open={open}\n        setOpen={setOpen}\n        loginUser={authState.loginUser}\n        profileState={profileState}\n      />\n      <Box>\n        <TabContext value={tab}>\n          <Box >\n            <TabList\n              onChange={(event, newTab) => setTab(newTab)}\n              variant=\"fullWidth\"\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n            >\n              <Tab\n                icon={<NotesIcon />}\n                iconPosition=\"start\"\n                label=\"つぶやき\"\n                value=\"microposts\"\n              />\n              <Tab\n                icon={<FavoriteIcon />}\n                iconPosition=\"start\"\n                label=\"いいね\"\n                value=\"liked_microposts\"\n              />\n              <Tab\n                icon={<CommentIcon />}\n                iconPosition=\"start\"\n                label=\"コメント\"\n                value=\"comments\"\n              />\n            </TabList>\n          </Box>\n          <TabPanel value=\"microposts\" index={0}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.microposts.map(micropost =>\n                    <Micropost\n                      commentCount={micropost.commentCount}\n                      likeStatus={micropost.likeStatus}\n                      micropost={micropost.micropost}\n                      user={profileState.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n          <TabPanel value=\"liked_microposts\" index={1}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.likedMicroposts.map(micropost =>\n                    <Micropost\n                      commentCount={micropost.commentCount}\n                      likeStatus={micropost.likeStatus}\n                      micropost={micropost.liked_micropost}\n                      user={micropost.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n          <TabPanel value=\"comments\" index={2}>\n            <List>\n              {\n                profileState.fetchState !== 'ok' ? <Loading /> :\n                  profileState.comments.map(comment =>\n                    <Comment\n                      comment={comment}\n                      user={profileState.user}\n                    />\n                  )\n              }\n            </List>\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Box>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Rooms.jsx",["485"],"import React, { useEffect, useReducer, useState } from \"react\";\n// Style\nimport Box from \"@mui/material/Box\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchRooms } from \"../../apis/users\";\nimport { deleteRoom } from \"../../apis/rooms\";\n// Reducer\nimport { roomInitialState, roomReducer } from '../../reducer/RoomReducer';\n// Component\nimport { Loading } from '../../components/Loading';\nimport { DeleteDialog } from \"../../components/Dialogs/DeleteDialog\";\nimport { TalkUser } from \"../../components/Lists/TalkUser\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 600,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    },\n    'list': {\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: 2,\n      my: 3,\n    }\n  }),\n);\n\nexport const Rooms = ({ userId }) => {\n  const classes = useStyles();\n  const [roomState, roomDispatch] = useReducer(roomReducer, roomInitialState);\n  // 削除確認ダイアログの開閉\n  const [open, setOpen] = useState({\n    isOpen: false,\n    roomId: '',\n  });\n  // トークルームの一覧を取得する\n  const Rooms = () => {\n    fetchRooms(userId)\n      .then(data => {\n        roomDispatch({\n          type: 'fetchSuccess',\n          payload: data.entries,\n        });\n      });\n  }\n  // トークルームを削除する\n  const handleDelete = () => {\n    deleteRoom(open.roomId)\n      .then(() => setOpen({ isOpen: false }));\n  }\n\n  useEffect(() => {\n    Rooms();\n  }, [open.isOpen])\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Typography variant=\"h3\">\n          <Box sx={{ letterSpacing: 10, pb: 2 }}><b>トークルーム</b></Box>\n        </Typography>\n\n        {roomState.fetchState !== 'ok' ? <Loading /> :\n          <TalkUser\n            entries={roomState.entries}\n            setOpen={setOpen}\n          />\n        }\n      </Box>\n\n      <DeleteDialog\n        handleClose={() => setOpen({ isOpen: false })}\n        handleDelete={handleDelete}\n        message={'トークルームを削除'}\n        open={open.isOpen}\n      />\n    </>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Pages/Timeline.jsx",["486"],"import React, { useEffect, useReducer } from \"react\";\n// Style\nimport Box from '@mui/material/Box';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { fetchTimeline } from \"../../apis/users\";\n// Reducer\nimport { timelineInitialState, timelineReducer } from '../../reducer/TimelineReducer';\n// Cpmponent\nimport { Micropost } from \"../../components/Lists/Micropost\";\nimport { Loading } from '../../components/Loading';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'root': {\n      alignItems: 'center',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      maxWidth: 800,\n      mx: 'auto',\n      textAlign: 'center',\n      width: '100%',\n    }\n  }),\n);\n\nexport const Timeline = ({\n  userId,\n  loginUser,\n}) => {\n  const classes = useStyles();\n  const [timelineState, timelineDispatch] = useReducer(timelineReducer, timelineInitialState);\n\n  // 投稿一覧を取得する\n  const Timeline = () => {\n    fetchTimeline(userId)\n      .then(data => {\n        timelineDispatch({\n          type: 'fetchSuccess',\n          payload: { timeline: data.timeline }\n        })\n      })\n  }\n\n  useEffect(() => {\n    Timeline()\n  }, [timelineState.reRender])\n\n  return (\n    <>\n      <Box className={classes.root}>\n        <Typography variant=\"h3\">\n          <Box sx={{ letterSpacing: 10, pb: 5 }}><b>タイムライン</b></Box>\n        </Typography>\n        <Box>\n          {\n            timelineState.fetchState !== 'ok' ? <Loading /> :\n              timelineState.timeline.map(timeline =>\n                <Micropost\n                  commentCount={timeline.commentCount}\n                  likeStatus={timeline.likeStatus}\n                  loginUser={loginUser}\n                  micropost={timeline.micropost}\n                  user={timeline.user}\n                />\n              )\n          }\n        </Box>\n      </Box>\n    </>\n  )\n}\n","/home/ubuntu/app/frontend/src/containers/Navigations/Header.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Users.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/AvatarLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/DiariesLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/FollowsLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/BooksLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/RoomsLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/HomeLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/TimelineLink.jsx",[],"/home/ubuntu/app/frontend/src/components/Links/RankingLink.jsx",[],"/home/ubuntu/app/frontend/src/apis/books.js",[],"/home/ubuntu/app/frontend/src/apis/users.js",[],"/home/ubuntu/app/frontend/src/apis/diaries.js",[],"/home/ubuntu/app/frontend/src/apis/rooms.js",[],"/home/ubuntu/app/frontend/src/apis/passwordResets.js",[],"/home/ubuntu/app/frontend/src/reducer/DialogReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/FollowReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Loading.jsx",[],"/home/ubuntu/app/frontend/src/reducer/SleepDebtReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/MessageReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/BookReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/TimelineReducer.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RoomReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/ReadButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/BookSearchButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/AccountButton.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/Calendar.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/SleepInfo.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/SleepData.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/RecordDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/SignUpDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/LogInDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/PasswordResetDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/TweetDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/DeleteDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/FollowList.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Message.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookList.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookCard.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Micropost.jsx",[],"/home/ubuntu/app/frontend/src/components/Snackbars/Snackbar.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Chat.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Search.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Password.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/NotificationDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/messages.js",[],"/home/ubuntu/app/frontend/src/apis/microposts.js",[],"/home/ubuntu/app/frontend/src/components/Buttons/CommentButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/LikeButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/FollowButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RoomButton.jsx",[],"/home/ubuntu/app/frontend/src/reducer/NotificationReducer.jsx",[],"/home/ubuntu/app/frontend/src/apis/likes.js",[],"/home/ubuntu/app/frontend/src/apis/relationships.js",[],"/home/ubuntu/app/frontend/src/components/Dialogs/CommentDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/comments.js",[],"/home/ubuntu/app/frontend/src/components/Forms/Content.jsx",[],"/home/ubuntu/app/frontend/src/apis/notifications.js",[],"/home/ubuntu/app/frontend/src/reducer/PostReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Email.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/RememberMe.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/IdealSleepingHours.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/PasswordConfirmation.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Name.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Feeling.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/SleepingHours.jsx",[],"/home/ubuntu/app/frontend/src/components/Forms/Date.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RecordReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/DiaryDialog.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/Comment.jsx",[],"/home/ubuntu/app/frontend/src/components/UserInfomation/UserInfo.jsx",[],"/home/ubuntu/app/frontend/src/reducer/ProfileReducer.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/SettingDialog.jsx",["487"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../App\";\n// Style\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from \"@mui/material/Typography\";\n// Api\nimport { patchUpdate } from '../../apis/users';\n// Component\nimport { Name } from '../Forms/Name';\nimport { Email } from '../Forms/Email';\nimport { Password } from '../Forms/Password';\nimport { PasswordConfirmation } from '../Forms/PasswordConfirmation';\nimport { IdealSleepingHours } from '../Forms/IdealSleepingHours';\nimport { Profile } from '../Forms/Profile';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    'button': {\n      border: 0,\n      borderRadius: 3,\n      color: '#90caf9',\n      height: 30,\n      padding: '15px 20px',\n    }\n  }),\n);\n\nexport const SettingDialog = ({\n  handleClose,\n  open,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { authState, authDispatch } = useContext(AuthContext)\n  // 送信のCallback関数\n  const submitUpdate = () => {\n    patchUpdate({\n      user_id: authState.loginUser.id,\n      name: authState.name,\n      email: authState.email,\n      password: authState.password,\n      password_confirmation: authState.passwordConfirmation,\n      idealSleepingHours: authState.idealSleepingHours,\n      profile: authState.profile,\n    }).then(data => {\n      alert('ユーザー情報を更新しました')\n      handleClose()\n      history.push(`/users/${authState.loginUser.id}`)\n    })\n  }\n\n  useEffect(() => {\n    authDispatch({\n      type: 'preUpdate',\n      payload: {\n        name: authState.loginUser.name,\n        email: authState.loginUser.email,\n        password: authState.loginUser.password,\n        passwordConfirmation: authState.loginUser.passwordConfirmation,\n        idealSleepingHours: authState.loginUser.ideal_sleeping_hours,\n        profile: authState.loginUser.profile,\n      }\n    });\n  }, [open])\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n    >\n      <DialogTitle>\n        <Typography variant=\"h5\">\n          <Box sx={{ letterSpacing: 3, pt: 2 }}><b>プロフィール編集</b></Box>\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Name\n          name={authState.name}\n          handleChange={e =>\n            authDispatch({\n              type: 'name',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Email\n          email={authState.email}\n          handleChange={e =>\n            authDispatch({\n              type: 'email',\n              payload: e.target.value,\n            })\n          }\n        />\n        <IdealSleepingHours\n          idealSleepingHours={authState.idealSleepingHours}\n          handleChange={e =>\n            authDispatch({\n              type: 'idealSleepingHours',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Profile\n          profile={authState.profile}\n          handleChange={e =>\n            authDispatch({\n              type: 'profile',\n              payload: e.target.value,\n            })\n          }\n        />\n        <Password\n          password={authState.password}\n          handleChange={e =>\n            authDispatch({\n              type: 'password',\n              payload: e.target.value,\n            })\n          }\n        />\n        <PasswordConfirmation\n          passwordConfirmation={authState.passwordConfirmation}\n          handleChange={e =>\n            authDispatch({\n              type: 'passwordConfirmation',\n              payload: e.target.value,\n            })\n          }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          onClick={() => handleClose()}\n        >\n          閉じる\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={submitUpdate}\n          type='submit'\n        >\n          更新する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/ubuntu/app/frontend/src/components/Forms/Profile.jsx",[],"/home/ubuntu/app/frontend/src/styled/theme.jsx",[],"/home/ubuntu/app/frontend/src/containers/Navigations/Sidebar.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/PostButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RecordButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/NotificationButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/BookRecommend.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/RecommendButton.jsx",[],"/home/ubuntu/app/frontend/src/apis/recommends.js",[],"/home/ubuntu/app/frontend/src/components/Links/LogoLink.jsx",[],"/home/ubuntu/app/frontend/src/containers/Pages/Ranking.jsx",[],"/home/ubuntu/app/frontend/src/reducer/RankingReducer.jsx",[],"/home/ubuntu/app/frontend/src/apis/rankings.js",[],"/home/ubuntu/app/frontend/src/components/Lists/RankUser.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/RankBook.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/NotRecommendButton.jsx",[],"/home/ubuntu/app/frontend/src/components/Lists/TalkUser.jsx",[],"/home/ubuntu/app/frontend/src/components/Dialogs/MicropostDialog.jsx",[],"/home/ubuntu/app/frontend/src/apis/image.js",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationComment.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationEntry.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationFollow.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/NotificationLike.jsx",[],"/home/ubuntu/app/frontend/src/components/Items/HomeMessage.jsx",[],"/home/ubuntu/app/frontend/src/components/Buttons/ProfileImageButton.jsx",["488","489"],{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","replacedBy":"493"},{"ruleId":"494","severity":1,"message":"495","line":40,"column":6,"nodeType":"496","endLine":40,"endColumn":8,"suggestions":"497"},{"ruleId":"494","severity":1,"message":"498","line":69,"column":6,"nodeType":"496","endLine":69,"endColumn":8,"suggestions":"499"},{"ruleId":"494","severity":1,"message":"500","line":93,"column":6,"nodeType":"496","endLine":93,"endColumn":45,"suggestions":"501"},{"ruleId":"494","severity":1,"message":"502","line":80,"column":6,"nodeType":"496","endLine":80,"endColumn":11,"suggestions":"503"},{"ruleId":"494","severity":1,"message":"504","line":51,"column":6,"nodeType":"496","endLine":51,"endColumn":8,"suggestions":"505"},{"ruleId":"494","severity":1,"message":"506","line":70,"column":6,"nodeType":"496","endLine":70,"endColumn":29,"suggestions":"507"},{"ruleId":"494","severity":1,"message":"508","line":114,"column":6,"nodeType":"496","endLine":114,"endColumn":31,"suggestions":"509"},{"ruleId":"494","severity":1,"message":"510","line":87,"column":42,"nodeType":"496","endLine":87,"endColumn":48,"suggestions":"511"},{"ruleId":"494","severity":1,"message":"512","line":88,"column":40,"nodeType":"496","endLine":88,"endColumn":45,"suggestions":"513"},{"ruleId":"494","severity":1,"message":"514","line":63,"column":6,"nodeType":"496","endLine":63,"endColumn":19,"suggestions":"515"},{"ruleId":"494","severity":1,"message":"516","line":49,"column":6,"nodeType":"496","endLine":49,"endColumn":30,"suggestions":"517"},{"ruleId":"494","severity":1,"message":"518","line":71,"column":6,"nodeType":"496","endLine":71,"endColumn":12,"suggestions":"519"},{"ruleId":"520","severity":1,"message":"521","line":8,"column":33,"nodeType":"522","messageId":"523","endLine":8,"endColumn":48},{"ruleId":"524","severity":1,"message":"525","line":76,"column":13,"nodeType":"526","endLine":76,"endColumn":32},"no-native-reassign",["527"],"no-negated-in-lhs",["528"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn'. Either include it or remove the dependency array.","ArrayExpression",["529"],"React Hook useEffect has a missing dependency: 'authState.loggedIn'. Either include it or remove the dependency array.",["530"],"React Hook useEffect has missing dependencies: 'SleepDebt' and 'fetchDiaries'. Either include them or remove the dependency array.",["531"],"React Hook useEffect has missing dependencies: 'Followers' and 'Following'. Either include them or remove the dependency array.",["532"],"React Hook useEffect has missing dependencies: 'SleepDebt' and 'authState.loggedIn'. Either include them or remove the dependency array.",["533"],"React Hook useEffect has a missing dependency: 'Messages'. Either include it or remove the dependency array.",["534"],"React Hook useEffect has a missing dependency: 'myBooks'. Either include it or remove the dependency array.",["535"],"React Hook useEffect has a missing dependency: 'userInformation'. Either include it or remove the dependency array.",["536"],"React Hook useEffect has a missing dependency: 'userMicropost'. Either include it or remove the dependency array.",["537"],"React Hook useEffect has a missing dependency: 'Rooms'. Either include it or remove the dependency array.",["538"],"React Hook useEffect has a missing dependency: 'Timeline'. Either include it or remove the dependency array.",["539"],"React Hook useEffect has missing dependencies: 'authDispatch', 'authState.loginUser.email', 'authState.loginUser.ideal_sleeping_hours', 'authState.loginUser.name', 'authState.loginUser.password', 'authState.loginUser.passwordConfirmation', and 'authState.loginUser.profile'. Either include them or remove the dependency array.",["540"],"no-unused-vars","'postAvatarImage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},"Update the dependencies array to be: [loggedIn]",{"range":"565","text":"566"},"Update the dependencies array to be: [authState.loggedIn]",{"range":"567","text":"568"},"Update the dependencies array to be: [dialogState.record, dialogState.diary, fetchDiaries, SleepDebt]",{"range":"569","text":"570"},"Update the dependencies array to be: [Followers, Following, tab]",{"range":"571","text":"572"},"Update the dependencies array to be: [SleepDebt, authState.loggedIn]",{"range":"573","text":"574"},"Update the dependencies array to be: [Messages, messageState.reRender]",{"range":"575","text":"576"},"Update the dependencies array to be: [tab, bookState.reRender, myBooks]",{"range":"577","text":"578"},"Update the dependencies array to be: [open, userInformation]",{"range":"579","text":"580"},"Update the dependencies array to be: [tab, userMicropost]",{"range":"581","text":"582"},"Update the dependencies array to be: [Rooms, open.isOpen]",{"range":"583","text":"584"},"Update the dependencies array to be: [Timeline, timelineState.reRender]",{"range":"585","text":"586"},"Update the dependencies array to be: [authDispatch, authState.loginUser.email, authState.loginUser.ideal_sleeping_hours, authState.loginUser.name, authState.loginUser.password, authState.loginUser.passwordConfirmation, authState.loginUser.profile, open]",{"range":"587","text":"588"},[1074,1076],"[loggedIn]",[2231,2233],"[authState.loggedIn]",[2907,2946],"[dialogState.record, dialogState.diary, fetchDiaries, SleepDebt]",[2065,2070],"[Followers, Following, tab]",[1844,1846],"[SleepDebt, authState.loggedIn]",[1763,1786],"[Messages, messageState.reRender]",[3191,3216],"[tab, bookState.reRender, myBooks]",[2575,2581],"[open, userInformation]",[2622,2627],"[tab, userMicropost]",[1619,1632],"[Rooms, open.isOpen]",[1233,1257],"[Timeline, timelineState.reRender]",[2222,2228],"[authDispatch, authState.loginUser.email, authState.loginUser.ideal_sleeping_hours, authState.loginUser.name, authState.loginUser.password, authState.loginUser.passwordConfirmation, authState.loginUser.profile, open]"]