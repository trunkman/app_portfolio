version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: "bundle exec pumactl start"
    volumes:
      - ./backend:/myapp
      - tmp-data:/myapp/tmp
      - log-data:/myapp/log
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      DB_HOST: ${DB_HOST}
      DB_PASSWORD: ${DB_PASSWORD}
      HOST_MAIL: ${HOST_MAIL}
      HOST_MAIL_PASS: ${HOST_MAIL_PASS}
      RAILS_ENV: production
      RWS_APPLICATION_ID: ${RWS_APPLICATION_ID}
      RWS_AFFILIATION_ID: ${RWS_AFFILIATION_ID}
    stdin_open: true
    tty: true
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./nginx/Dockerfile
  #   volumes:
  #     - tmp-data:/myapp/tmp
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - api
  #   stdin_open: true
  #   tty: true
  web:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    command: sh -c "npm start"
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "8000:3000"
    environment:
      REACT_APP_AWS_ACCESS_KEY: ${REACT_APP_AWS_ACCESS_KEY}
      REACT_APP_AWS_BUCKET: ${REACT_APP_AWS_BUCKET}
      REACT_APP_AWS_SECRET_KEY: ${REACT_APP_AWS_SECRET_KEY}
      REACT_APP_AWS_REGION: ${REACT_APP_AWS_REGION}
      REACT_APP_ENV: development
    tty: true
    stdin_open: true
  db:
    image: mysql:5.7
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: mysqlpass
    tty: true
    stdin_open: true

volumes:
  mysql-data: null
  tmp-data: null
  log-data: null
